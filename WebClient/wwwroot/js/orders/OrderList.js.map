{
  "version": 3,
  "sources": ["../../../scripts/node_modules/luxon/src/errors.js", "../../../scripts/node_modules/luxon/src/impl/formats.js", "../../../scripts/node_modules/luxon/src/impl/util.js", "../../../scripts/node_modules/luxon/src/impl/english.js", "../../../scripts/node_modules/luxon/src/impl/formatter.js", "../../../scripts/node_modules/luxon/src/impl/invalid.js", "../../../scripts/node_modules/luxon/src/zone.js", "../../../scripts/node_modules/luxon/src/zones/systemZone.js", "../../../scripts/node_modules/luxon/src/zones/IANAZone.js", "../../../scripts/node_modules/luxon/src/zones/fixedOffsetZone.js", "../../../scripts/node_modules/luxon/src/zones/invalidZone.js", "../../../scripts/node_modules/luxon/src/impl/zoneUtil.js", "../../../scripts/node_modules/luxon/src/settings.js", "../../../scripts/node_modules/luxon/src/impl/locale.js", "../../../scripts/node_modules/luxon/src/impl/regexParser.js", "../../../scripts/node_modules/luxon/src/duration.js", "../../../scripts/node_modules/luxon/src/interval.js", "../../../scripts/node_modules/luxon/src/info.js", "../../../scripts/node_modules/luxon/src/impl/diff.js", "../../../scripts/node_modules/luxon/src/impl/digits.js", "../../../scripts/node_modules/luxon/src/impl/tokenParser.js", "../../../scripts/node_modules/luxon/src/impl/conversions.js", "../../../scripts/node_modules/luxon/src/datetime.js", "../../../scripts/node_modules/luxon/src/luxon.js", "../../../scripts/node_modules/mobx/src/errors.ts", "../../../scripts/node_modules/mobx/src/utils/global.ts", "../../../scripts/node_modules/mobx/src/utils/utils.ts", "../../../scripts/node_modules/mobx/src/api/decorators.ts", "../../../scripts/node_modules/mobx/src/core/atom.ts", "../../../scripts/node_modules/mobx/src/utils/comparer.ts", "../../../scripts/node_modules/mobx/src/types/modifiers.ts", "../../../scripts/node_modules/mobx/src/types/overrideannotation.ts", "../../../scripts/node_modules/mobx/src/types/actionannotation.ts", "../../../scripts/node_modules/mobx/src/types/flowannotation.ts", "../../../scripts/node_modules/mobx/src/types/computedannotation.ts", "../../../scripts/node_modules/mobx/src/types/observableannotation.ts", "../../../scripts/node_modules/mobx/src/types/autoannotation.ts", "../../../scripts/node_modules/mobx/src/api/observable.ts", "../../../scripts/node_modules/mobx/src/api/computed.ts", "../../../scripts/node_modules/mobx/src/core/action.ts", "../../../scripts/node_modules/mobx/src/types/observablevalue.ts", "../../../scripts/node_modules/mobx/src/core/computedvalue.ts", "../../../scripts/node_modules/mobx/src/core/derivation.ts", "../../../scripts/node_modules/mobx/src/core/globalstate.ts", "../../../scripts/node_modules/mobx/src/core/observable.ts", "../../../scripts/node_modules/mobx/src/core/reaction.ts", "../../../scripts/node_modules/mobx/src/core/spy.ts", "../../../scripts/node_modules/mobx/src/api/action.ts", "../../../scripts/node_modules/mobx/src/api/autorun.ts", "../../../scripts/node_modules/mobx/src/api/become-observed.ts", "../../../scripts/node_modules/mobx/src/api/configure.ts", "../../../scripts/node_modules/mobx/src/api/extendobservable.ts", "../../../scripts/node_modules/mobx/src/api/extras.ts", "../../../scripts/node_modules/mobx/src/api/flow.ts", "../../../scripts/node_modules/mobx/src/api/intercept-read.ts", "../../../scripts/node_modules/mobx/src/api/intercept.ts", "../../../scripts/node_modules/mobx/src/api/iscomputed.ts", "../../../scripts/node_modules/mobx/src/api/isobservable.ts", "../../../scripts/node_modules/mobx/src/api/object-api.ts", "../../../scripts/node_modules/mobx/src/api/observe.ts", "../../../scripts/node_modules/mobx/src/api/tojs.ts", "../../../scripts/node_modules/mobx/src/api/trace.ts", "../../../scripts/node_modules/mobx/src/api/transaction.ts", "../../../scripts/node_modules/mobx/src/api/when.ts", "../../../scripts/node_modules/mobx/src/types/dynamicobject.ts", "../../../scripts/node_modules/mobx/src/types/intercept-utils.ts", "../../../scripts/node_modules/mobx/src/types/listen-utils.ts", "../../../scripts/node_modules/mobx/src/api/makeObservable.ts", "../../../scripts/node_modules/mobx/src/types/observablearray.ts", "../../../scripts/node_modules/mobx/src/types/observablemap.ts", "../../../scripts/node_modules/mobx/src/types/observableset.ts", "../../../scripts/node_modules/mobx/src/types/observableobject.ts", "../../../scripts/node_modules/mobx/src/types/legacyobservablearray.ts", "../../../scripts/node_modules/mobx/src/types/type-utils.ts", "../../../scripts/node_modules/mobx/src/utils/eq.ts", "../../../scripts/node_modules/mobx/src/utils/iterable.ts", "../../../scripts/node_modules/mobx/src/api/annotation.ts", "../../../scripts/node_modules/mobx/src/mobx.ts", "../../../scripts/node_modules/@adobe/lit-mobx/src/lib/mixin.ts", "../../../scripts/node_modules/@lit/reactive-element/src/css-tag.ts", "../../../scripts/node_modules/@lit/reactive-element/src/reactive-element.ts", "../../../scripts/node_modules/lit-html/src/lit-html.ts", "../../../scripts/node_modules/lit-element/src/lit-element.ts", "../../../scripts/node_modules/@adobe/lit-mobx/src/lit-mobx.ts", "../../../scripts/node_modules/@lit/reactive-element/src/decorators/custom-element.ts", "../../../scripts/node_modules/mobx-state-tree/dist/mobx-state-tree.module.js", "../../../scripts/src/common/formTools.ts", "../../../scripts/src/orders/Order.ts", "../../../scripts/src/common/recordPostProcessor.ts", "../../../scripts/src/offices/Office.ts", "../../../scripts/src/employees/Employee.ts", "../../../scripts/src/customers/Customer.ts", "../../../scripts/src/categories/Category.ts", "../../../scripts/src/inventory/InventoryItem.ts", "../../../scripts/src/orders/OrderItem.ts", "../../../scripts/src/orders/ordersApi.ts", "../../../scripts/src/inventory/inventoryApi.ts", "../../../scripts/src/BaseModel.ts", "../../../scripts/src/IBaseModel.ts", "../../../scripts/src/customers/customersApi.ts", "../../../scripts/src/orders/OrderListStore.ts", "../../../scripts/src/common/componentStyle.ts", "../../../scripts/node_modules/chart.js/dist/chunks/helpers.segment.js", "../../../scripts/node_modules/chart.js/dist/chart.esm.js", "../../../scripts/src/common/chartDefaults.ts", "../../../scripts/src/orders/OrderList.ts"],
  "sourcesContent": ["// these aren't really private, but nor are they really useful to document\n\n/**\n * @private\n */\nclass LuxonError extends Error {}\n\n/**\n * @private\n */\nexport class InvalidDateTimeError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid DateTime: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidIntervalError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Interval: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidDurationError extends LuxonError {\n  constructor(reason) {\n    super(`Invalid Duration: ${reason.toMessage()}`);\n  }\n}\n\n/**\n * @private\n */\nexport class ConflictingSpecificationError extends LuxonError {}\n\n/**\n * @private\n */\nexport class InvalidUnitError extends LuxonError {\n  constructor(unit) {\n    super(`Invalid unit ${unit}`);\n  }\n}\n\n/**\n * @private\n */\nexport class InvalidArgumentError extends LuxonError {}\n\n/**\n * @private\n */\nexport class ZoneIsAbstractError extends LuxonError {\n  constructor() {\n    super(\"Zone is an abstract class\");\n  }\n}\n", "/**\n * @private\n */\n\nconst n = \"numeric\",\n  s = \"short\",\n  l = \"long\";\n\nexport const DATE_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n};\n\nexport const DATE_MED = {\n  year: n,\n  month: s,\n  day: n,\n};\n\nexport const DATE_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n};\n\nexport const DATE_FULL = {\n  year: n,\n  month: l,\n  day: n,\n};\n\nexport const DATE_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n};\n\nexport const TIME_SIMPLE = {\n  hour: n,\n  minute: n,\n};\n\nexport const TIME_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const TIME_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const TIME_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n\nexport const TIME_24_SIMPLE = {\n  hour: n,\n  minute: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SECONDS = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n};\n\nexport const TIME_24_WITH_SHORT_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: s,\n};\n\nexport const TIME_24_WITH_LONG_OFFSET = {\n  hour: n,\n  minute: n,\n  second: n,\n  hourCycle: \"h23\",\n  timeZoneName: l,\n};\n\nexport const DATETIME_SHORT = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_SHORT_WITH_SECONDS = {\n  year: n,\n  month: n,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_MED_WITH_SECONDS = {\n  year: n,\n  month: s,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n};\n\nexport const DATETIME_MED_WITH_WEEKDAY = {\n  year: n,\n  month: s,\n  day: n,\n  weekday: s,\n  hour: n,\n  minute: n,\n};\n\nexport const DATETIME_FULL = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_FULL_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: s,\n};\n\nexport const DATETIME_HUGE = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  timeZoneName: l,\n};\n\nexport const DATETIME_HUGE_WITH_SECONDS = {\n  year: n,\n  month: l,\n  day: n,\n  weekday: l,\n  hour: n,\n  minute: n,\n  second: n,\n  timeZoneName: l,\n};\n", "/*\n  This is just a junk drawer, containing anything used across multiple classes.\n  Because Luxon is small(ish), this should stay small and we won't worry about splitting\n  it up into, say, parsingUtil.js and basicUtil.js and so on. But they are divided up by feature area.\n*/\n\nimport { InvalidArgumentError } from \"../errors.js\";\n\n/**\n * @private\n */\n\n// TYPES\n\nexport function isUndefined(o) {\n  return typeof o === \"undefined\";\n}\n\nexport function isNumber(o) {\n  return typeof o === \"number\";\n}\n\nexport function isInteger(o) {\n  return typeof o === \"number\" && o % 1 === 0;\n}\n\nexport function isString(o) {\n  return typeof o === \"string\";\n}\n\nexport function isDate(o) {\n  return Object.prototype.toString.call(o) === \"[object Date]\";\n}\n\n// CAPABILITIES\n\nexport function hasRelative() {\n  try {\n    return typeof Intl !== \"undefined\" && !!Intl.RelativeTimeFormat;\n  } catch (e) {\n    return false;\n  }\n}\n\n// OBJECTS AND ARRAYS\n\nexport function maybeArray(thing) {\n  return Array.isArray(thing) ? thing : [thing];\n}\n\nexport function bestBy(arr, by, compare) {\n  if (arr.length === 0) {\n    return undefined;\n  }\n  return arr.reduce((best, next) => {\n    const pair = [by(next), next];\n    if (!best) {\n      return pair;\n    } else if (compare(best[0], pair[0]) === best[0]) {\n      return best;\n    } else {\n      return pair;\n    }\n  }, null)[1];\n}\n\nexport function pick(obj, keys) {\n  return keys.reduce((a, k) => {\n    a[k] = obj[k];\n    return a;\n  }, {});\n}\n\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// NUMBERS AND STRINGS\n\nexport function integerBetween(thing, bottom, top) {\n  return isInteger(thing) && thing >= bottom && thing <= top;\n}\n\n// x % n but takes the sign of n instead of x\nexport function floorMod(x, n) {\n  return x - n * Math.floor(x / n);\n}\n\nexport function padStart(input, n = 2) {\n  const minus = input < 0 ? \"-\" : \"\";\n  const target = minus ? input * -1 : input;\n  let result;\n\n  if (target.toString().length < n) {\n    result = (\"0\".repeat(n) + target).slice(-n);\n  } else {\n    result = target.toString();\n  }\n\n  return `${minus}${result}`;\n}\n\nexport function parseInteger(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseInt(string, 10);\n  }\n}\n\nexport function parseFloating(string) {\n  if (isUndefined(string) || string === null || string === \"\") {\n    return undefined;\n  } else {\n    return parseFloat(string);\n  }\n}\n\nexport function parseMillis(fraction) {\n  // Return undefined (instead of 0) in these cases, where fraction is not set\n  if (isUndefined(fraction) || fraction === null || fraction === \"\") {\n    return undefined;\n  } else {\n    const f = parseFloat(\"0.\" + fraction) * 1000;\n    return Math.floor(f);\n  }\n}\n\nexport function roundTo(number, digits, towardZero = false) {\n  const factor = 10 ** digits,\n    rounder = towardZero ? Math.trunc : Math.round;\n  return rounder(number * factor) / factor;\n}\n\n// DATE BASICS\n\nexport function isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nexport function daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function daysInMonth(year, month) {\n  const modMonth = floorMod(month - 1, 12) + 1,\n    modYear = year + (month - modMonth) / 12;\n\n  if (modMonth === 2) {\n    return isLeapYear(modYear) ? 29 : 28;\n  } else {\n    return [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][modMonth - 1];\n  }\n}\n\n// covert a calendar object to a local timestamp (epoch, but with the offset baked in)\nexport function objToLocalTS(obj) {\n  let d = Date.UTC(\n    obj.year,\n    obj.month - 1,\n    obj.day,\n    obj.hour,\n    obj.minute,\n    obj.second,\n    obj.millisecond\n  );\n\n  // for legacy reasons, years between 0 and 99 are interpreted as 19XX; revert that\n  if (obj.year < 100 && obj.year >= 0) {\n    d = new Date(d);\n    d.setUTCFullYear(d.getUTCFullYear() - 1900);\n  }\n  return +d;\n}\n\nexport function weeksInWeekYear(weekYear) {\n  const p1 =\n      (weekYear +\n        Math.floor(weekYear / 4) -\n        Math.floor(weekYear / 100) +\n        Math.floor(weekYear / 400)) %\n      7,\n    last = weekYear - 1,\n    p2 = (last + Math.floor(last / 4) - Math.floor(last / 100) + Math.floor(last / 400)) % 7;\n  return p1 === 4 || p2 === 3 ? 53 : 52;\n}\n\nexport function untruncateYear(year) {\n  if (year > 99) {\n    return year;\n  } else return year > 60 ? 1900 + year : 2000 + year;\n}\n\n// PARSING\n\nexport function parseZoneInfo(ts, offsetFormat, locale, timeZone = null) {\n  const date = new Date(ts),\n    intlOpts = {\n      hourCycle: \"h23\",\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    };\n\n  if (timeZone) {\n    intlOpts.timeZone = timeZone;\n  }\n\n  const modified = { timeZoneName: offsetFormat, ...intlOpts };\n\n  const parsed = new Intl.DateTimeFormat(locale, modified)\n    .formatToParts(date)\n    .find((m) => m.type.toLowerCase() === \"timezonename\");\n  return parsed ? parsed.value : null;\n}\n\n// signedOffset('-5', '30') -> -330\nexport function signedOffset(offHourStr, offMinuteStr) {\n  let offHour = parseInt(offHourStr, 10);\n\n  // don't || this because we want to preserve -0\n  if (Number.isNaN(offHour)) {\n    offHour = 0;\n  }\n\n  const offMin = parseInt(offMinuteStr, 10) || 0,\n    offMinSigned = offHour < 0 || Object.is(offHour, -0) ? -offMin : offMin;\n  return offHour * 60 + offMinSigned;\n}\n\n// COERCION\n\nexport function asNumber(value) {\n  const numericValue = Number(value);\n  if (typeof value === \"boolean\" || value === \"\" || Number.isNaN(numericValue))\n    throw new InvalidArgumentError(`Invalid unit value ${value}`);\n  return numericValue;\n}\n\nexport function normalizeObject(obj, normalizer) {\n  const normalized = {};\n  for (const u in obj) {\n    if (hasOwnProperty(obj, u)) {\n      const v = obj[u];\n      if (v === undefined || v === null) continue;\n      normalized[normalizer(u)] = asNumber(v);\n    }\n  }\n  return normalized;\n}\n\nexport function formatOffset(offset, format) {\n  const hours = Math.trunc(Math.abs(offset / 60)),\n    minutes = Math.trunc(Math.abs(offset % 60)),\n    sign = offset >= 0 ? \"+\" : \"-\";\n\n  switch (format) {\n    case \"short\":\n      return `${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;\n    case \"narrow\":\n      return `${sign}${hours}${minutes > 0 ? `:${minutes}` : \"\"}`;\n    case \"techie\":\n      return `${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;\n    default:\n      throw new RangeError(`Value format ${format} is out of range for property format`);\n  }\n}\n\nexport function timeObject(obj) {\n  return pick(obj, [\"hour\", \"minute\", \"second\", \"millisecond\"]);\n}\n\nexport const ianaRegex = /[A-Za-z_+-]{1,256}(:?\\/[A-Za-z0-9_+-]{1,256}(\\/[A-Za-z0-9_+-]{1,256})?)?/;\n", "import * as Formats from \"./formats.js\";\nimport { pick } from \"./util.js\";\n\nfunction stringify(obj) {\n  return JSON.stringify(obj, Object.keys(obj).sort());\n}\n\n/**\n * @private\n */\n\nexport const monthsLong = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const monthsShort = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const monthsNarrow = [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"];\n\nexport function months(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...monthsNarrow];\n    case \"short\":\n      return [...monthsShort];\n    case \"long\":\n      return [...monthsLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n    case \"2-digit\":\n      return [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"];\n    default:\n      return null;\n  }\n}\n\nexport const weekdaysLong = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\nexport const weekdaysShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport const weekdaysNarrow = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n\nexport function weekdays(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...weekdaysNarrow];\n    case \"short\":\n      return [...weekdaysShort];\n    case \"long\":\n      return [...weekdaysLong];\n    case \"numeric\":\n      return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n    default:\n      return null;\n  }\n}\n\nexport const meridiems = [\"AM\", \"PM\"];\n\nexport const erasLong = [\"Before Christ\", \"Anno Domini\"];\n\nexport const erasShort = [\"BC\", \"AD\"];\n\nexport const erasNarrow = [\"B\", \"A\"];\n\nexport function eras(length) {\n  switch (length) {\n    case \"narrow\":\n      return [...erasNarrow];\n    case \"short\":\n      return [...erasShort];\n    case \"long\":\n      return [...erasLong];\n    default:\n      return null;\n  }\n}\n\nexport function meridiemForDateTime(dt) {\n  return meridiems[dt.hour < 12 ? 0 : 1];\n}\n\nexport function weekdayForDateTime(dt, length) {\n  return weekdays(length)[dt.weekday - 1];\n}\n\nexport function monthForDateTime(dt, length) {\n  return months(length)[dt.month - 1];\n}\n\nexport function eraForDateTime(dt, length) {\n  return eras(length)[dt.year < 0 ? 0 : 1];\n}\n\nexport function formatRelativeTime(unit, count, numeric = \"always\", narrow = false) {\n  const units = {\n    years: [\"year\", \"yr.\"],\n    quarters: [\"quarter\", \"qtr.\"],\n    months: [\"month\", \"mo.\"],\n    weeks: [\"week\", \"wk.\"],\n    days: [\"day\", \"day\", \"days\"],\n    hours: [\"hour\", \"hr.\"],\n    minutes: [\"minute\", \"min.\"],\n    seconds: [\"second\", \"sec.\"],\n  };\n\n  const lastable = [\"hours\", \"minutes\", \"seconds\"].indexOf(unit) === -1;\n\n  if (numeric === \"auto\" && lastable) {\n    const isDay = unit === \"days\";\n    switch (count) {\n      case 1:\n        return isDay ? \"tomorrow\" : `next ${units[unit][0]}`;\n      case -1:\n        return isDay ? \"yesterday\" : `last ${units[unit][0]}`;\n      case 0:\n        return isDay ? \"today\" : `this ${units[unit][0]}`;\n      default: // fall through\n    }\n  }\n\n  const isInPast = Object.is(count, -0) || count < 0,\n    fmtValue = Math.abs(count),\n    singular = fmtValue === 1,\n    lilUnits = units[unit],\n    fmtUnit = narrow\n      ? singular\n        ? lilUnits[1]\n        : lilUnits[2] || lilUnits[1]\n      : singular\n      ? units[unit][0]\n      : unit;\n  return isInPast ? `${fmtValue} ${fmtUnit} ago` : `in ${fmtValue} ${fmtUnit}`;\n}\n\nexport function formatString(knownFormat) {\n  // these all have the offsets removed because we don't have access to them\n  // without all the intl stuff this is backfilling\n  const filtered = pick(knownFormat, [\n      \"weekday\",\n      \"era\",\n      \"year\",\n      \"month\",\n      \"day\",\n      \"hour\",\n      \"minute\",\n      \"second\",\n      \"timeZoneName\",\n      \"hourCycle\",\n    ]),\n    key = stringify(filtered),\n    dateTimeHuge = \"EEEE, LLLL d, yyyy, h:mm a\";\n  switch (key) {\n    case stringify(Formats.DATE_SHORT):\n      return \"M/d/yyyy\";\n    case stringify(Formats.DATE_MED):\n      return \"LLL d, yyyy\";\n    case stringify(Formats.DATE_MED_WITH_WEEKDAY):\n      return \"EEE, LLL d, yyyy\";\n    case stringify(Formats.DATE_FULL):\n      return \"LLLL d, yyyy\";\n    case stringify(Formats.DATE_HUGE):\n      return \"EEEE, LLLL d, yyyy\";\n    case stringify(Formats.TIME_SIMPLE):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_SECONDS):\n      return \"h:mm:ss a\";\n    case stringify(Formats.TIME_WITH_SHORT_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_WITH_LONG_OFFSET):\n      return \"h:mm a\";\n    case stringify(Formats.TIME_24_SIMPLE):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_SECONDS):\n      return \"HH:mm:ss\";\n    case stringify(Formats.TIME_24_WITH_SHORT_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.TIME_24_WITH_LONG_OFFSET):\n      return \"HH:mm\";\n    case stringify(Formats.DATETIME_SHORT):\n      return \"M/d/yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_MED):\n      return \"LLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL):\n      return \"LLLL d, yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_HUGE):\n      return dateTimeHuge;\n    case stringify(Formats.DATETIME_SHORT_WITH_SECONDS):\n      return \"M/d/yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_SECONDS):\n      return \"LLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_MED_WITH_WEEKDAY):\n      return \"EEE, d LLL yyyy, h:mm a\";\n    case stringify(Formats.DATETIME_FULL_WITH_SECONDS):\n      return \"LLLL d, yyyy, h:mm:ss a\";\n    case stringify(Formats.DATETIME_HUGE_WITH_SECONDS):\n      return \"EEEE, LLLL d, yyyy, h:mm:ss a\";\n    default:\n      return dateTimeHuge;\n  }\n}\n", "import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS,\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed, val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: false, val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed, val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTime(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTimeParts(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.formatToParts();\n  }\n\n  resolvedOptions(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = { ...this.opts };\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = (opts) => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hourCycle: \"h12\" }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = (token) => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = (length) =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = (token) => {\n        // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = (token) => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = (lildur) => (token) => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t) => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n", "export default class Invalid {\n  constructor(reason, explanation) {\n    this.reason = reason;\n    this.explanation = explanation;\n  }\n\n  toMessage() {\n    if (this.explanation) {\n      return `${this.reason}: ${this.explanation}`;\n    } else {\n      return this.reason;\n    }\n  }\n}\n", "import { ZoneIsAbstractError } from \"./errors.js\";\n\n/**\n * @interface\n */\nexport default class Zone {\n  /**\n   * The type of zone\n   * @abstract\n   * @type {string}\n   */\n  get type() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * The name of this zone.\n   * @abstract\n   * @type {string}\n   */\n  get name() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns whether the offset is known to be fixed for the whole year.\n   * @abstract\n   * @type {boolean}\n   */\n  get isUniversal() {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's common name (such as EST) at the specified timestamp\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the name\n   * @param {Object} opts - Options to affect the format\n   * @param {string} opts.format - What style of offset to return. Accepts 'long' or 'short'.\n   * @param {string} opts.locale - What locale to return the offset name in.\n   * @return {string}\n   */\n  offsetName(ts, opts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Returns the offset's value as a string\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to get the offset\n   * @param {string} format - What style of offset to return.\n   *                          Accepts 'narrow', 'short', or 'techie'. Returning '+6', '+06:00', or '+0600' respectively\n   * @return {string}\n   */\n  formatOffset(ts, format) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return the offset in minutes for this zone at the specified timestamp.\n   * @abstract\n   * @param {number} ts - Epoch milliseconds for which to compute the offset\n   * @return {number}\n   */\n  offset(ts) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is equal to another zone\n   * @abstract\n   * @param {Zone} otherZone - the zone to compare\n   * @return {boolean}\n   */\n  equals(otherZone) {\n    throw new ZoneIsAbstractError();\n  }\n\n  /**\n   * Return whether this Zone is valid.\n   * @abstract\n   * @type {boolean}\n   */\n  get isValid() {\n    throw new ZoneIsAbstractError();\n  }\n}\n", "import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n", "import { formatOffset, parseZoneInfo, isUndefined, ianaRegex, objToLocalTS } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nconst matchingRegex = RegExp(`^${ianaRegex.source}$`);\n\nlet dtfCache = {};\nfunction makeDTF(zone) {\n  if (!dtfCache[zone]) {\n    dtfCache[zone] = new Intl.DateTimeFormat(\"en-US\", {\n      hour12: false,\n      timeZone: zone,\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    });\n  }\n  return dtfCache[zone];\n}\n\nconst typeToPos = {\n  year: 0,\n  month: 1,\n  day: 2,\n  hour: 3,\n  minute: 4,\n  second: 5,\n};\n\nfunction hackyOffset(dtf, date) {\n  const formatted = dtf.format(date).replace(/\\u200E/g, \"\"),\n    parsed = /(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(formatted),\n    [, fMonth, fDay, fYear, fHour, fMinute, fSecond] = parsed;\n  return [fYear, fMonth, fDay, fHour, fMinute, fSecond];\n}\n\nfunction partsOffset(dtf, date) {\n  const formatted = dtf.formatToParts(date),\n    filled = [];\n  for (let i = 0; i < formatted.length; i++) {\n    const { type, value } = formatted[i],\n      pos = typeToPos[type];\n\n    if (!isUndefined(pos)) {\n      filled[pos] = parseInt(value, 10);\n    }\n  }\n  return filled;\n}\n\nlet ianaZoneCache = {};\n/**\n * A zone identified by an IANA identifier, like America/New_York\n * @implements {Zone}\n */\nexport default class IANAZone extends Zone {\n  /**\n   * @param {string} name - Zone name\n   * @return {IANAZone}\n   */\n  static create(name) {\n    if (!ianaZoneCache[name]) {\n      ianaZoneCache[name] = new IANAZone(name);\n    }\n    return ianaZoneCache[name];\n  }\n\n  /**\n   * Reset local caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCache() {\n    ianaZoneCache = {};\n    dtfCache = {};\n  }\n\n  /**\n   * Returns whether the provided string is a valid specifier. This only checks the string's format, not that the specifier identifies a known zone; see isValidZone for that.\n   * @param {string} s - The string to check validity on\n   * @example IANAZone.isValidSpecifier(\"America/New_York\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Fantasia/Castle\") //=> true\n   * @example IANAZone.isValidSpecifier(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidSpecifier(s) {\n    return !!(s && s.match(matchingRegex));\n  }\n\n  /**\n   * Returns whether the provided string identifies a real zone\n   * @param {string} zone - The string to check\n   * @example IANAZone.isValidZone(\"America/New_York\") //=> true\n   * @example IANAZone.isValidZone(\"Fantasia/Castle\") //=> false\n   * @example IANAZone.isValidZone(\"Sport~~blorp\") //=> false\n   * @return {boolean}\n   */\n  static isValidZone(zone) {\n    if (!zone) {\n      return false;\n    }\n    try {\n      new Intl.DateTimeFormat(\"en-US\", { timeZone: zone }).format();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  constructor(name) {\n    super();\n    /** @private **/\n    this.zoneName = name;\n    /** @private **/\n    this.valid = IANAZone.isValidZone(name);\n  }\n\n  /** @override **/\n  get type() {\n    return \"iana\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale, this.name);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    const date = new Date(ts);\n\n    if (isNaN(date)) return NaN;\n\n    const dtf = makeDTF(this.name),\n      [year, month, day, hour, minute, second] = dtf.formatToParts\n        ? partsOffset(dtf, date)\n        : hackyOffset(dtf, date);\n\n    // because we're using hour12 and https://bugs.chromium.org/p/chromium/issues/detail?id=1025564&can=2&q=%2224%3A00%22%20datetimeformat\n    const adjustedHour = hour === 24 ? 0 : hour;\n\n    const asUTC = objToLocalTS({\n      year,\n      month,\n      day,\n      hour: adjustedHour,\n      minute,\n      second,\n      millisecond: 0,\n    });\n\n    let asTS = +date;\n    const over = asTS % 1000;\n    asTS -= over >= 0 ? over : 1000 + over;\n    return (asUTC - asTS) / (60 * 1000);\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"iana\" && otherZone.name === this.name;\n  }\n\n  /** @override **/\n  get isValid() {\n    return this.valid;\n  }\n}\n", "import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n", "import Zone from \"../zone.js\";\n\n/**\n * A zone that failed to parse. You should never need to instantiate this.\n * @implements {Zone}\n */\nexport default class InvalidZone extends Zone {\n  constructor(zoneName) {\n    super();\n    /**  @private */\n    this.zoneName = zoneName;\n  }\n\n  /** @override **/\n  get type() {\n    return \"invalid\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.zoneName;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName() {\n    return null;\n  }\n\n  /** @override **/\n  formatOffset() {\n    return \"\";\n  }\n\n  /** @override **/\n  offset() {\n    return NaN;\n  }\n\n  /** @override **/\n  equals() {\n    return false;\n  }\n\n  /** @override **/\n  get isValid() {\n    return false;\n  }\n}\n", "/**\n * @private\n */\n\nimport Zone from \"../zone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport InvalidZone from \"../zones/invalidZone.js\";\n\nimport { isUndefined, isString, isNumber } from \"./util.js\";\n\nexport function normalizeZone(input, defaultZone) {\n  let offset;\n  if (isUndefined(input) || input === null) {\n    return defaultZone;\n  } else if (input instanceof Zone) {\n    return input;\n  } else if (isString(input)) {\n    const lowered = input.toLowerCase();\n    if (lowered === \"local\" || lowered === \"system\") return defaultZone;\n    else if (lowered === \"utc\" || lowered === \"gmt\") return FixedOffsetZone.utcInstance;\n    else if (IANAZone.isValidSpecifier(lowered)) return IANAZone.create(input);\n    else return FixedOffsetZone.parseSpecifier(lowered) || new InvalidZone(input);\n  } else if (isNumber(input)) {\n    return FixedOffsetZone.instance(input);\n  } else if (typeof input === \"object\" && input.offset && typeof input.offset === \"number\") {\n    // This is dumb, but the instanceof check above doesn't seem to really work\n    // so we're duck checking it\n    return input;\n  } else {\n    return new InvalidZone(input);\n  }\n}\n", "import SystemZone from \"./zones/systemZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport Locale from \"./impl/locale.js\";\n\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nlet now = () => Date.now(),\n  defaultZone = \"system\",\n  defaultLocale = null,\n  defaultNumberingSystem = null,\n  defaultOutputCalendar = null,\n  throwOnInvalid;\n\n/**\n * Settings contains static getters and setters that control Luxon's overall behavior. Luxon is a simple library with few options, but the ones it does have live here.\n */\nexport default class Settings {\n  /**\n   * Get the callback for returning the current timestamp.\n   * @type {function}\n   */\n  static get now() {\n    return now;\n  }\n\n  /**\n   * Set the callback for returning the current timestamp.\n   * The function should return a number, which will be interpreted as an Epoch millisecond count\n   * @type {function}\n   * @example Settings.now = () => Date.now() + 3000 // pretend it is 3 seconds in the future\n   * @example Settings.now = () => 0 // always pretend it's Jan 1, 1970 at midnight in UTC time\n   */\n  static set now(n) {\n    now = n;\n  }\n\n  /**\n   * Set the default time zone to create DateTimes in. Does not affect existing instances.\n   * Use the value \"system\" to reset this value to the system's time zone.\n   * @type {string}\n   */\n  static set defaultZone(zone) {\n    defaultZone = zone;\n  }\n\n  /**\n   * Get the default time zone object currently used to create DateTimes. Does not affect existing instances.\n   * The default value is the system's time zone (the one set on the machine that runs this code).\n   * @type {Zone}\n   */\n  static get defaultZone() {\n    return normalizeZone(defaultZone, SystemZone.instance);\n  }\n\n  /**\n   * Get the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultLocale() {\n    return defaultLocale;\n  }\n\n  /**\n   * Set the default locale to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultLocale(locale) {\n    defaultLocale = locale;\n  }\n\n  /**\n   * Get the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultNumberingSystem() {\n    return defaultNumberingSystem;\n  }\n\n  /**\n   * Set the default numbering system to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultNumberingSystem(numberingSystem) {\n    defaultNumberingSystem = numberingSystem;\n  }\n\n  /**\n   * Get the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static get defaultOutputCalendar() {\n    return defaultOutputCalendar;\n  }\n\n  /**\n   * Set the default output calendar to create DateTimes with. Does not affect existing instances.\n   * @type {string}\n   */\n  static set defaultOutputCalendar(outputCalendar) {\n    defaultOutputCalendar = outputCalendar;\n  }\n\n  /**\n   * Get whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static get throwOnInvalid() {\n    return throwOnInvalid;\n  }\n\n  /**\n   * Set whether Luxon will throw when it encounters invalid DateTimes, Durations, or Intervals\n   * @type {boolean}\n   */\n  static set throwOnInvalid(t) {\n    throwOnInvalid = t;\n  }\n\n  /**\n   * Reset Luxon's global caches. Should only be necessary in testing scenarios.\n   * @return {void}\n   */\n  static resetCaches() {\n    Locale.resetCache();\n    IANAZone.resetCache();\n  }\n}\n", "import { padStart, roundTo, hasRelative } from \"./util.js\";\nimport * as English from \"./english.js\";\nimport Settings from \"../settings.js\";\nimport DateTime from \"../datetime.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\nlet intlDTCache = {};\nfunction getCachedDTF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n}\n\nlet intlNumCache = {};\nfunction getCachedINF(locString, opts = {}) {\n  const key = JSON.stringify([locString, opts]);\n  let inf = intlNumCache[key];\n  if (!inf) {\n    inf = new Intl.NumberFormat(locString, opts);\n    intlNumCache[key] = inf;\n  }\n  return inf;\n}\n\nlet intlRelCache = {};\nfunction getCachedRTF(locString, opts = {}) {\n  const { base, ...cacheKeyOpts } = opts; // exclude `base` from the options\n  const key = JSON.stringify([locString, cacheKeyOpts]);\n  let inf = intlRelCache[key];\n  if (!inf) {\n    inf = new Intl.RelativeTimeFormat(locString, opts);\n    intlRelCache[key] = inf;\n  }\n  return inf;\n}\n\nlet sysLocaleCache = null;\nfunction systemLocale() {\n  if (sysLocaleCache) {\n    return sysLocaleCache;\n  } else {\n    sysLocaleCache = new Intl.DateTimeFormat().resolvedOptions().locale;\n    return sysLocaleCache;\n  }\n}\n\nfunction parseLocaleString(localeStr) {\n  // I really want to avoid writing a BCP 47 parser\n  // see, e.g. https://github.com/wooorm/bcp-47\n  // Instead, we'll do this:\n\n  // a) if the string has no -u extensions, just leave it alone\n  // b) if it does, use Intl to resolve everything\n  // c) if Intl fails, try again without the -u\n\n  const uIndex = localeStr.indexOf(\"-u-\");\n  if (uIndex === -1) {\n    return [localeStr];\n  } else {\n    let options;\n    const smaller = localeStr.substring(0, uIndex);\n    try {\n      options = getCachedDTF(localeStr).resolvedOptions();\n    } catch (e) {\n      options = getCachedDTF(smaller).resolvedOptions();\n    }\n\n    const { numberingSystem, calendar } = options;\n    // return the smaller one so that we can append the calendar and numbering overrides to it\n    return [smaller, numberingSystem, calendar];\n  }\n}\n\nfunction intlConfigString(localeStr, numberingSystem, outputCalendar) {\n  if (outputCalendar || numberingSystem) {\n    localeStr += \"-u\";\n\n    if (outputCalendar) {\n      localeStr += `-ca-${outputCalendar}`;\n    }\n\n    if (numberingSystem) {\n      localeStr += `-nu-${numberingSystem}`;\n    }\n    return localeStr;\n  } else {\n    return localeStr;\n  }\n}\n\nfunction mapMonths(f) {\n  const ms = [];\n  for (let i = 1; i <= 12; i++) {\n    const dt = DateTime.utc(2016, i, 1);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction mapWeekdays(f) {\n  const ms = [];\n  for (let i = 1; i <= 7; i++) {\n    const dt = DateTime.utc(2016, 11, 13 + i);\n    ms.push(f(dt));\n  }\n  return ms;\n}\n\nfunction listStuff(loc, length, defaultOK, englishFn, intlFn) {\n  const mode = loc.listingMode(defaultOK);\n\n  if (mode === \"error\") {\n    return null;\n  } else if (mode === \"en\") {\n    return englishFn(length);\n  } else {\n    return intlFn(length);\n  }\n}\n\nfunction supportsFastNumbers(loc) {\n  if (loc.numberingSystem && loc.numberingSystem !== \"latn\") {\n    return false;\n  } else {\n    return (\n      loc.numberingSystem === \"latn\" ||\n      !loc.locale ||\n      loc.locale.startsWith(\"en\") ||\n      new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem === \"latn\"\n    );\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyNumberFormatter {\n  constructor(intl, forceSimple, opts) {\n    this.padTo = opts.padTo || 0;\n    this.floor = opts.floor || false;\n\n    if (!forceSimple) {\n      const intlOpts = { useGrouping: false };\n      if (opts.padTo > 0) intlOpts.minimumIntegerDigits = opts.padTo;\n      this.inf = getCachedINF(intl, intlOpts);\n    }\n  }\n\n  format(i) {\n    if (this.inf) {\n      const fixed = this.floor ? Math.floor(i) : i;\n      return this.inf.format(fixed);\n    } else {\n      // to match the browser's numberformatter defaults\n      const fixed = this.floor ? Math.floor(i) : roundTo(i, 3);\n      return padStart(fixed, this.padTo);\n    }\n  }\n}\n\n/**\n * @private\n */\n\nclass PolyDateFormatter {\n  constructor(dt, intl, opts) {\n    this.opts = opts;\n\n    let z;\n    if (dt.zone.isUniversal) {\n      // UTC-8 or Etc/UTC-8 are not part of tzdata, only Etc/GMT+8 and the like.\n      // That is why fixed-offset TZ is set to that unless it is:\n      // 1. Representing offset 0 when UTC is used to maintain previous behavior and does not become GMT.\n      // 2. Unsupported by the browser:\n      //    - some do not support Etc/\n      //    - < Etc/GMT-14, > Etc/GMT+12, and 30-minute or 45-minute offsets are not part of tzdata\n      const gmtOffset = -1 * (dt.offset / 60);\n      const offsetZ = gmtOffset >= 0 ? `Etc/GMT+${gmtOffset}` : `Etc/GMT${gmtOffset}`;\n      if (dt.offset !== 0 && IANAZone.create(offsetZ).valid) {\n        z = offsetZ;\n        this.dt = dt;\n      } else {\n        // Not all fixed-offset zones like Etc/+4:30 are present in tzdata.\n        // So we have to make do. Two cases:\n        // 1. The format options tell us to show the zone. We can't do that, so the best\n        // we can do is format the date in UTC.\n        // 2. The format options don't tell us to show the zone. Then we can adjust them\n        // the time and tell the formatter to show it to us in UTC, so that the time is right\n        // and the bad zone doesn't show up.\n        z = \"UTC\";\n        if (opts.timeZoneName) {\n          this.dt = dt;\n        } else {\n          this.dt = dt.offset === 0 ? dt : DateTime.fromMillis(dt.ts + dt.offset * 60 * 1000);\n        }\n      }\n    } else if (dt.zone.type === \"system\") {\n      this.dt = dt;\n    } else {\n      this.dt = dt;\n      z = dt.zone.name;\n    }\n\n    const intlOpts = { ...this.opts };\n    if (z) {\n      intlOpts.timeZone = z;\n    }\n    this.dtf = getCachedDTF(intl, intlOpts);\n  }\n\n  format() {\n    return this.dtf.format(this.dt.toJSDate());\n  }\n\n  formatToParts() {\n    return this.dtf.formatToParts(this.dt.toJSDate());\n  }\n\n  resolvedOptions() {\n    return this.dtf.resolvedOptions();\n  }\n}\n\n/**\n * @private\n */\nclass PolyRelFormatter {\n  constructor(intl, isEnglish, opts) {\n    this.opts = { style: \"long\", ...opts };\n    if (!isEnglish && hasRelative()) {\n      this.rtf = getCachedRTF(intl, opts);\n    }\n  }\n\n  format(count, unit) {\n    if (this.rtf) {\n      return this.rtf.format(count, unit);\n    } else {\n      return English.formatRelativeTime(unit, count, this.opts.numeric, this.opts.style !== \"long\");\n    }\n  }\n\n  formatToParts(count, unit) {\n    if (this.rtf) {\n      return this.rtf.formatToParts(count, unit);\n    } else {\n      return [];\n    }\n  }\n}\n\n/**\n * @private\n */\n\nexport default class Locale {\n  static fromOpts(opts) {\n    return Locale.create(opts.locale, opts.numberingSystem, opts.outputCalendar, opts.defaultToEN);\n  }\n\n  static create(locale, numberingSystem, outputCalendar, defaultToEN = false) {\n    const specifiedLocale = locale || Settings.defaultLocale;\n    // the system locale is useful for human readable strings but annoying for parsing/formatting known formats\n    const localeR = specifiedLocale || (defaultToEN ? \"en-US\" : systemLocale());\n    const numberingSystemR = numberingSystem || Settings.defaultNumberingSystem;\n    const outputCalendarR = outputCalendar || Settings.defaultOutputCalendar;\n    return new Locale(localeR, numberingSystemR, outputCalendarR, specifiedLocale);\n  }\n\n  static resetCache() {\n    sysLocaleCache = null;\n    intlDTCache = {};\n    intlNumCache = {};\n    intlRelCache = {};\n  }\n\n  static fromObject({ locale, numberingSystem, outputCalendar } = {}) {\n    return Locale.create(locale, numberingSystem, outputCalendar);\n  }\n\n  constructor(locale, numbering, outputCalendar, specifiedLocale) {\n    const [parsedLocale, parsedNumberingSystem, parsedOutputCalendar] = parseLocaleString(locale);\n\n    this.locale = parsedLocale;\n    this.numberingSystem = numbering || parsedNumberingSystem || null;\n    this.outputCalendar = outputCalendar || parsedOutputCalendar || null;\n    this.intl = intlConfigString(this.locale, this.numberingSystem, this.outputCalendar);\n\n    this.weekdaysCache = { format: {}, standalone: {} };\n    this.monthsCache = { format: {}, standalone: {} };\n    this.meridiemCache = null;\n    this.eraCache = {};\n\n    this.specifiedLocale = specifiedLocale;\n    this.fastNumbersCached = null;\n  }\n\n  get fastNumbers() {\n    if (this.fastNumbersCached == null) {\n      this.fastNumbersCached = supportsFastNumbers(this);\n    }\n\n    return this.fastNumbersCached;\n  }\n\n  listingMode(defaultOK = true) {\n    const isActuallyEn = this.isEnglish();\n    const hasNoWeirdness =\n      (this.numberingSystem === null || this.numberingSystem === \"latn\") &&\n      (this.outputCalendar === null || this.outputCalendar === \"gregory\");\n    return isActuallyEn && hasNoWeirdness ? \"en\" : \"intl\";\n  }\n\n  clone(alts) {\n    if (!alts || Object.getOwnPropertyNames(alts).length === 0) {\n      return this;\n    } else {\n      return Locale.create(\n        alts.locale || this.specifiedLocale,\n        alts.numberingSystem || this.numberingSystem,\n        alts.outputCalendar || this.outputCalendar,\n        alts.defaultToEN || false\n      );\n    }\n  }\n\n  redefaultToEN(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: true });\n  }\n\n  redefaultToSystem(alts = {}) {\n    return this.clone({ ...alts, defaultToEN: false });\n  }\n\n  months(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.months, () => {\n      const intl = format ? { month: length, day: \"numeric\" } : { month: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.monthsCache[formatStr][length]) {\n        this.monthsCache[formatStr][length] = mapMonths((dt) => this.extract(dt, intl, \"month\"));\n      }\n      return this.monthsCache[formatStr][length];\n    });\n  }\n\n  weekdays(length, format = false, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.weekdays, () => {\n      const intl = format\n          ? { weekday: length, year: \"numeric\", month: \"long\", day: \"numeric\" }\n          : { weekday: length },\n        formatStr = format ? \"format\" : \"standalone\";\n      if (!this.weekdaysCache[formatStr][length]) {\n        this.weekdaysCache[formatStr][length] = mapWeekdays((dt) =>\n          this.extract(dt, intl, \"weekday\")\n        );\n      }\n      return this.weekdaysCache[formatStr][length];\n    });\n  }\n\n  meridiems(defaultOK = true) {\n    return listStuff(\n      this,\n      undefined,\n      defaultOK,\n      () => English.meridiems,\n      () => {\n        // In theory there could be aribitrary day periods. We're gonna assume there are exactly two\n        // for AM and PM. This is probably wrong, but it's makes parsing way easier.\n        if (!this.meridiemCache) {\n          const intl = { hour: \"numeric\", hourCycle: \"h12\" };\n          this.meridiemCache = [DateTime.utc(2016, 11, 13, 9), DateTime.utc(2016, 11, 13, 19)].map(\n            (dt) => this.extract(dt, intl, \"dayperiod\")\n          );\n        }\n\n        return this.meridiemCache;\n      }\n    );\n  }\n\n  eras(length, defaultOK = true) {\n    return listStuff(this, length, defaultOK, English.eras, () => {\n      const intl = { era: length };\n\n      // This is problematic. Different calendars are going to define eras totally differently. What I need is the minimum set of dates\n      // to definitely enumerate them.\n      if (!this.eraCache[length]) {\n        this.eraCache[length] = [DateTime.utc(-40, 1, 1), DateTime.utc(2017, 1, 1)].map((dt) =>\n          this.extract(dt, intl, \"era\")\n        );\n      }\n\n      return this.eraCache[length];\n    });\n  }\n\n  extract(dt, intlOpts, field) {\n    const df = this.dtFormatter(dt, intlOpts),\n      results = df.formatToParts(),\n      matching = results.find((m) => m.type.toLowerCase() === field);\n    return matching ? matching.value : null;\n  }\n\n  numberFormatter(opts = {}) {\n    // this forcesimple option is never used (the only caller short-circuits on it, but it seems safer to leave)\n    // (in contrast, the rest of the condition is used heavily)\n    return new PolyNumberFormatter(this.intl, opts.forceSimple || this.fastNumbers, opts);\n  }\n\n  dtFormatter(dt, intlOpts = {}) {\n    return new PolyDateFormatter(dt, this.intl, intlOpts);\n  }\n\n  relFormatter(opts = {}) {\n    return new PolyRelFormatter(this.intl, this.isEnglish(), opts);\n  }\n\n  isEnglish() {\n    return (\n      this.locale === \"en\" ||\n      this.locale.toLowerCase() === \"en-us\" ||\n      new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")\n    );\n  }\n\n  equals(other) {\n    return (\n      this.locale === other.locale &&\n      this.numberingSystem === other.numberingSystem &&\n      this.outputCalendar === other.outputCalendar\n    );\n  }\n}\n", "import {\n  untruncateYear,\n  signedOffset,\n  parseInteger,\n  parseMillis,\n  ianaRegex,\n  isUndefined,\n  parseFloating,\n} from \"./util.js\";\nimport * as English from \"./english.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\n\n/*\n * This file handles parsing for well-specified formats. Here's how it works:\n * Two things go into parsing: a regex to match with and an extractor to take apart the groups in the match.\n * An extractor is just a function that takes a regex match array and returns a { year: ..., month: ... } object\n * parse() does the work of executing the regex and applying the extractor. It takes multiple regex/extractor pairs to try in sequence.\n * Extractors can take a \"cursor\" representing the offset in the match to look at. This makes it easy to combine extractors.\n * combineExtractors() does the work of combining them, keeping track of the cursor through multiple extractions.\n * Some extractions are super dumb and simpleParse and fromStrings help DRY them.\n */\n\nfunction combineRegexes(...regexes) {\n  const full = regexes.reduce((f, r) => f + r.source, \"\");\n  return RegExp(`^${full}$`);\n}\n\nfunction combineExtractors(...extractors) {\n  return (m) =>\n    extractors\n      .reduce(\n        ([mergedVals, mergedZone, cursor], ex) => {\n          const [val, zone, next] = ex(m, cursor);\n          return [{ ...mergedVals, ...val }, mergedZone || zone, next];\n        },\n        [{}, null, 1]\n      )\n      .slice(0, 2);\n}\n\nfunction parse(s, ...patterns) {\n  if (s == null) {\n    return [null, null];\n  }\n\n  for (const [regex, extractor] of patterns) {\n    const m = regex.exec(s);\n    if (m) {\n      return extractor(m);\n    }\n  }\n  return [null, null];\n}\n\nfunction simpleParse(...keys) {\n  return (match, cursor) => {\n    const ret = {};\n    let i;\n\n    for (i = 0; i < keys.length; i++) {\n      ret[keys[i]] = parseInteger(match[cursor + i]);\n    }\n    return [ret, null, cursor + i];\n  };\n}\n\n// ISO and SQL parsing\nconst offsetRegex = /(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/,\n  isoTimeBaseRegex = /(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/,\n  isoTimeRegex = RegExp(`${isoTimeBaseRegex.source}${offsetRegex.source}?`),\n  isoTimeExtensionRegex = RegExp(`(?:T${isoTimeRegex.source})?`),\n  isoYmdRegex = /([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/,\n  isoWeekRegex = /(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/,\n  isoOrdinalRegex = /(\\d{4})-?(\\d{3})/,\n  extractISOWeekData = simpleParse(\"weekYear\", \"weekNumber\", \"weekDay\"),\n  extractISOOrdinalData = simpleParse(\"year\", \"ordinal\"),\n  sqlYmdRegex = /(\\d{4})-(\\d\\d)-(\\d\\d)/, // dumbed-down version of the ISO one\n  sqlTimeRegex = RegExp(\n    `${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`\n  ),\n  sqlTimeExtensionRegex = RegExp(`(?: ${sqlTimeRegex.source})?`);\n\nfunction int(match, pos, fallback) {\n  const m = match[pos];\n  return isUndefined(m) ? fallback : parseInteger(m);\n}\n\nfunction extractISOYmd(match, cursor) {\n  const item = {\n    year: int(match, cursor),\n    month: int(match, cursor + 1, 1),\n    day: int(match, cursor + 2, 1),\n  };\n\n  return [item, null, cursor + 3];\n}\n\nfunction extractISOTime(match, cursor) {\n  const item = {\n    hours: int(match, cursor, 0),\n    minutes: int(match, cursor + 1, 0),\n    seconds: int(match, cursor + 2, 0),\n    milliseconds: parseMillis(match[cursor + 3]),\n  };\n\n  return [item, null, cursor + 4];\n}\n\nfunction extractISOOffset(match, cursor) {\n  const local = !match[cursor] && !match[cursor + 1],\n    fullOffset = signedOffset(match[cursor + 1], match[cursor + 2]),\n    zone = local ? null : FixedOffsetZone.instance(fullOffset);\n  return [{}, zone, cursor + 3];\n}\n\nfunction extractIANAZone(match, cursor) {\n  const zone = match[cursor] ? IANAZone.create(match[cursor]) : null;\n  return [{}, zone, cursor + 1];\n}\n\n// ISO time parsing\n\nconst isoTimeOnly = RegExp(`^T?${isoTimeBaseRegex.source}$`);\n\n// ISO duration parsing\n\nconst isoDuration =\n  /^-?P(?:(?:(-?\\d{1,9}(?:\\.\\d{1,9})?)Y)?(?:(-?\\d{1,9}(?:\\.\\d{1,9})?)M)?(?:(-?\\d{1,9}(?:\\.\\d{1,9})?)W)?(?:(-?\\d{1,9}(?:\\.\\d{1,9})?)D)?(?:T(?:(-?\\d{1,9}(?:\\.\\d{1,9})?)H)?(?:(-?\\d{1,9}(?:\\.\\d{1,9})?)M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,9}))?S)?)?)$/;\n\nfunction extractISODuration(match) {\n  const [s, yearStr, monthStr, weekStr, dayStr, hourStr, minuteStr, secondStr, millisecondsStr] =\n    match;\n\n  const hasNegativePrefix = s[0] === \"-\";\n  const negativeSeconds = secondStr && secondStr[0] === \"-\";\n\n  const maybeNegate = (num, force = false) =>\n    num !== undefined && (force || (num && hasNegativePrefix)) ? -num : num;\n\n  return [\n    {\n      years: maybeNegate(parseFloating(yearStr)),\n      months: maybeNegate(parseFloating(monthStr)),\n      weeks: maybeNegate(parseFloating(weekStr)),\n      days: maybeNegate(parseFloating(dayStr)),\n      hours: maybeNegate(parseFloating(hourStr)),\n      minutes: maybeNegate(parseFloating(minuteStr)),\n      seconds: maybeNegate(parseFloating(secondStr), secondStr === \"-0\"),\n      milliseconds: maybeNegate(parseMillis(millisecondsStr), negativeSeconds),\n    },\n  ];\n}\n\n// These are a little braindead. EDT *should* tell us that we're in, say, America/New_York\n// and not just that we're in -240 *right now*. But since I don't think these are used that often\n// I'm just going to ignore that\nconst obsOffsets = {\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60,\n};\n\nfunction fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  const result = {\n    year: yearStr.length === 2 ? untruncateYear(parseInteger(yearStr)) : parseInteger(yearStr),\n    month: English.monthsShort.indexOf(monthStr) + 1,\n    day: parseInteger(dayStr),\n    hour: parseInteger(hourStr),\n    minute: parseInteger(minuteStr),\n  };\n\n  if (secondStr) result.second = parseInteger(secondStr);\n  if (weekdayStr) {\n    result.weekday =\n      weekdayStr.length > 3\n        ? English.weekdaysLong.indexOf(weekdayStr) + 1\n        : English.weekdaysShort.indexOf(weekdayStr) + 1;\n  }\n\n  return result;\n}\n\n// RFC 2822/5322\nconst rfc2822 =\n  /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;\n\nfunction extractRFC2822(match) {\n  const [\n      ,\n      weekdayStr,\n      dayStr,\n      monthStr,\n      yearStr,\n      hourStr,\n      minuteStr,\n      secondStr,\n      obsOffset,\n      milOffset,\n      offHourStr,\n      offMinuteStr,\n    ] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n\n  let offset;\n  if (obsOffset) {\n    offset = obsOffsets[obsOffset];\n  } else if (milOffset) {\n    offset = 0;\n  } else {\n    offset = signedOffset(offHourStr, offMinuteStr);\n  }\n\n  return [result, new FixedOffsetZone(offset)];\n}\n\nfunction preprocessRFC2822(s) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return s\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, \" \")\n    .replace(/(\\s\\s+)/g, \" \")\n    .trim();\n}\n\n// http date\n\nconst rfc1123 =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  rfc850 =\n    /^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,\n  ascii =\n    /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;\n\nfunction extractRFC1123Or850(match) {\n  const [, weekdayStr, dayStr, monthStr, yearStr, hourStr, minuteStr, secondStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nfunction extractASCII(match) {\n  const [, weekdayStr, monthStr, dayStr, hourStr, minuteStr, secondStr, yearStr] = match,\n    result = fromStrings(weekdayStr, yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr);\n  return [result, FixedOffsetZone.utcInstance];\n}\n\nconst isoYmdWithTimeExtensionRegex = combineRegexes(isoYmdRegex, isoTimeExtensionRegex);\nconst isoWeekWithTimeExtensionRegex = combineRegexes(isoWeekRegex, isoTimeExtensionRegex);\nconst isoOrdinalWithTimeExtensionRegex = combineRegexes(isoOrdinalRegex, isoTimeExtensionRegex);\nconst isoTimeCombinedRegex = combineRegexes(isoTimeRegex);\n\nconst extractISOYmdTimeAndOffset = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset\n);\nconst extractISOWeekTimeAndOffset = combineExtractors(\n  extractISOWeekData,\n  extractISOTime,\n  extractISOOffset\n);\nconst extractISOOrdinalDateAndTime = combineExtractors(\n  extractISOOrdinalData,\n  extractISOTime,\n  extractISOOffset\n);\nconst extractISOTimeAndOffset = combineExtractors(extractISOTime, extractISOOffset);\n\n/**\n * @private\n */\n\nexport function parseISODate(s) {\n  return parse(\n    s,\n    [isoYmdWithTimeExtensionRegex, extractISOYmdTimeAndOffset],\n    [isoWeekWithTimeExtensionRegex, extractISOWeekTimeAndOffset],\n    [isoOrdinalWithTimeExtensionRegex, extractISOOrdinalDateAndTime],\n    [isoTimeCombinedRegex, extractISOTimeAndOffset]\n  );\n}\n\nexport function parseRFC2822Date(s) {\n  return parse(preprocessRFC2822(s), [rfc2822, extractRFC2822]);\n}\n\nexport function parseHTTPDate(s) {\n  return parse(\n    s,\n    [rfc1123, extractRFC1123Or850],\n    [rfc850, extractRFC1123Or850],\n    [ascii, extractASCII]\n  );\n}\n\nexport function parseISODuration(s) {\n  return parse(s, [isoDuration, extractISODuration]);\n}\n\nconst extractISOTimeOnly = combineExtractors(extractISOTime);\n\nexport function parseISOTimeOnly(s) {\n  return parse(s, [isoTimeOnly, extractISOTimeOnly]);\n}\n\nconst sqlYmdWithTimeExtensionRegex = combineRegexes(sqlYmdRegex, sqlTimeExtensionRegex);\nconst sqlTimeCombinedRegex = combineRegexes(sqlTimeRegex);\n\nconst extractISOYmdTimeOffsetAndIANAZone = combineExtractors(\n  extractISOYmd,\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\nconst extractISOTimeOffsetAndIANAZone = combineExtractors(\n  extractISOTime,\n  extractISOOffset,\n  extractIANAZone\n);\n\nexport function parseSQL(s) {\n  return parse(\n    s,\n    [sqlYmdWithTimeExtensionRegex, extractISOYmdTimeOffsetAndIANAZone],\n    [sqlTimeCombinedRegex, extractISOTimeOffsetAndIANAZone]\n  );\n}\n", "import { InvalidArgumentError, InvalidDurationError, InvalidUnitError } from \"./errors.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport Invalid from \"./impl/invalid.js\";\nimport Locale from \"./impl/locale.js\";\nimport { parseISODuration, parseISOTimeOnly } from \"./impl/regexParser.js\";\nimport {\n  asNumber,\n  hasOwnProperty,\n  isInteger,\n  isNumber,\n  isUndefined,\n  normalizeObject,\n  roundTo,\n} from \"./impl/util.js\";\nimport Settings from \"./settings.js\";\n\nconst INVALID = \"Invalid Duration\";\n\n// unit conversion constants\nexport const lowOrderMatrix = {\n    weeks: {\n      days: 7,\n      hours: 7 * 24,\n      minutes: 7 * 24 * 60,\n      seconds: 7 * 24 * 60 * 60,\n      milliseconds: 7 * 24 * 60 * 60 * 1000,\n    },\n    days: {\n      hours: 24,\n      minutes: 24 * 60,\n      seconds: 24 * 60 * 60,\n      milliseconds: 24 * 60 * 60 * 1000,\n    },\n    hours: { minutes: 60, seconds: 60 * 60, milliseconds: 60 * 60 * 1000 },\n    minutes: { seconds: 60, milliseconds: 60 * 1000 },\n    seconds: { milliseconds: 1000 },\n  },\n  casualMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: 52,\n      days: 365,\n      hours: 365 * 24,\n      minutes: 365 * 24 * 60,\n      seconds: 365 * 24 * 60 * 60,\n      milliseconds: 365 * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: 13,\n      days: 91,\n      hours: 91 * 24,\n      minutes: 91 * 24 * 60,\n      seconds: 91 * 24 * 60 * 60,\n      milliseconds: 91 * 24 * 60 * 60 * 1000,\n    },\n    months: {\n      weeks: 4,\n      days: 30,\n      hours: 30 * 24,\n      minutes: 30 * 24 * 60,\n      seconds: 30 * 24 * 60 * 60,\n      milliseconds: 30 * 24 * 60 * 60 * 1000,\n    },\n\n    ...lowOrderMatrix,\n  },\n  daysInYearAccurate = 146097.0 / 400,\n  daysInMonthAccurate = 146097.0 / 4800,\n  accurateMatrix = {\n    years: {\n      quarters: 4,\n      months: 12,\n      weeks: daysInYearAccurate / 7,\n      days: daysInYearAccurate,\n      hours: daysInYearAccurate * 24,\n      minutes: daysInYearAccurate * 24 * 60,\n      seconds: daysInYearAccurate * 24 * 60 * 60,\n      milliseconds: daysInYearAccurate * 24 * 60 * 60 * 1000,\n    },\n    quarters: {\n      months: 3,\n      weeks: daysInYearAccurate / 28,\n      days: daysInYearAccurate / 4,\n      hours: (daysInYearAccurate * 24) / 4,\n      minutes: (daysInYearAccurate * 24 * 60) / 4,\n      seconds: (daysInYearAccurate * 24 * 60 * 60) / 4,\n      milliseconds: (daysInYearAccurate * 24 * 60 * 60 * 1000) / 4,\n    },\n    months: {\n      weeks: daysInMonthAccurate / 7,\n      days: daysInMonthAccurate,\n      hours: daysInMonthAccurate * 24,\n      minutes: daysInMonthAccurate * 24 * 60,\n      seconds: daysInMonthAccurate * 24 * 60 * 60,\n      milliseconds: daysInMonthAccurate * 24 * 60 * 60 * 1000,\n    },\n    ...lowOrderMatrix,\n  };\n\n// units ordered by size\nconst orderedUnits = [\n  \"years\",\n  \"quarters\",\n  \"months\",\n  \"weeks\",\n  \"days\",\n  \"hours\",\n  \"minutes\",\n  \"seconds\",\n  \"milliseconds\",\n];\n\nconst reverseUnits = orderedUnits.slice(0).reverse();\n\n// clone really means \"create another instance just like this one, but with these changes\"\nfunction clone(dur, alts, clear = false) {\n  // deep merge for vals\n  const conf = {\n    values: clear ? alts.values : { ...dur.values, ...(alts.values || {}) },\n    loc: dur.loc.clone(alts.loc),\n    conversionAccuracy: alts.conversionAccuracy || dur.conversionAccuracy,\n  };\n  return new Duration(conf);\n}\n\nfunction antiTrunc(n) {\n  return n < 0 ? Math.floor(n) : Math.ceil(n);\n}\n\n// NB: mutates parameters\nfunction convert(matrix, fromMap, fromUnit, toMap, toUnit) {\n  const conv = matrix[toUnit][fromUnit],\n    raw = fromMap[fromUnit] / conv,\n    sameSign = Math.sign(raw) === Math.sign(toMap[toUnit]),\n    // ok, so this is wild, but see the matrix in the tests\n    added =\n      !sameSign && toMap[toUnit] !== 0 && Math.abs(raw) <= 1 ? antiTrunc(raw) : Math.trunc(raw);\n  toMap[toUnit] += added;\n  fromMap[fromUnit] -= added * conv;\n}\n\n// NB: mutates parameters\nfunction normalizeValues(matrix, vals) {\n  reverseUnits.reduce((previous, current) => {\n    if (!isUndefined(vals[current])) {\n      if (previous) {\n        convert(matrix, vals, previous, vals, current);\n      }\n      return current;\n    } else {\n      return previous;\n    }\n  }, null);\n}\n\n/**\n * A Duration object represents a period of time, like \"2 months\" or \"1 day, 1 hour\". Conceptually, it's just a map of units to their quantities, accompanied by some additional configuration and methods for creating, parsing, interrogating, transforming, and formatting them. They can be used on their own or in conjunction with other Luxon types; for example, you can use {@link DateTime#plus} to add a Duration object to a DateTime, producing another DateTime.\n *\n * Here is a brief overview of commonly used methods and getters in Duration:\n *\n * * **Creation** To create a Duration, use {@link Duration#fromMillis}, {@link Duration#fromObject}, or {@link Duration#fromISO}.\n * * **Unit values** See the {@link Duration#years}, {@link Duration.months}, {@link Duration#weeks}, {@link Duration#days}, {@link Duration#hours}, {@link Duration#minutes}, {@link Duration#seconds}, {@link Duration#milliseconds} accessors.\n * * **Configuration** See  {@link Duration#locale} and {@link Duration#numberingSystem} accessors.\n * * **Transformation** To create new Durations out of old ones use {@link Duration#plus}, {@link Duration#minus}, {@link Duration#normalize}, {@link Duration#set}, {@link Duration#reconfigure}, {@link Duration#shiftTo}, and {@link Duration#negate}.\n * * **Output** To convert the Duration into other representations, see {@link Duration#as}, {@link Duration#toISO}, {@link Duration#toFormat}, and {@link Duration#toJSON}\n *\n * There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.\n */\nexport default class Duration {\n  /**\n   * @private\n   */\n  constructor(config) {\n    const accurate = config.conversionAccuracy === \"longterm\" || false;\n    /**\n     * @access private\n     */\n    this.values = config.values;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.conversionAccuracy = accurate ? \"longterm\" : \"casual\";\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.matrix = accurate ? accurateMatrix : casualMatrix;\n    /**\n     * @access private\n     */\n    this.isLuxonDuration = true;\n  }\n\n  /**\n   * Create Duration from a number of milliseconds.\n   * @param {number} count of milliseconds\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromMillis(count, opts) {\n    return Duration.fromObject({ milliseconds: count }, opts);\n  }\n\n  /**\n   * Create a Duration from a JavaScript object with keys like 'years' and 'hours'.\n   * If this object is empty then a zero milliseconds duration is returned.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.years\n   * @param {number} obj.quarters\n   * @param {number} obj.months\n   * @param {number} obj.weeks\n   * @param {number} obj.days\n   * @param {number} obj.hours\n   * @param {number} obj.minutes\n   * @param {number} obj.seconds\n   * @param {number} obj.milliseconds\n   * @param {Object} [opts=[]] - options for creating this Duration\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  static fromObject(obj, opts = {}) {\n    if (obj == null || typeof obj !== \"object\") {\n      throw new InvalidArgumentError(\n        `Duration.fromObject: argument expected to be an object, got ${\n          obj === null ? \"null\" : typeof obj\n        }`\n      );\n    }\n\n    return new Duration({\n      values: normalizeObject(obj, Duration.normalizeUnit),\n      loc: Locale.fromObject(opts),\n      conversionAccuracy: opts.conversionAccuracy,\n    });\n  }\n\n  /**\n   * Create a Duration from DurationLike.\n   *\n   * @param {Object | number | Duration} durationLike\n   * One of:\n   * - object with keys like 'years' and 'hours'.\n   * - number representing milliseconds\n   * - Duration instance\n   * @return {Duration}\n   */\n  static fromDurationLike(durationLike) {\n    if (isNumber(durationLike)) {\n      return Duration.fromMillis(durationLike);\n    } else if (Duration.isDuration(durationLike)) {\n      return durationLike;\n    } else if (typeof durationLike === \"object\") {\n      return Duration.fromObject(durationLike);\n    } else {\n      throw new InvalidArgumentError(\n        `Unknown duration argument ${durationLike} of type ${typeof durationLike}`\n      );\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 duration string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromISO('P3Y6M1W4DT12H30M5S').toObject() //=> { years: 3, months: 6, weeks: 1, days: 4, hours: 12, minutes: 30, seconds: 5 }\n   * @example Duration.fromISO('PT23H').toObject() //=> { hours: 23 }\n   * @example Duration.fromISO('P5Y3M').toObject() //=> { years: 5, months: 3 }\n   * @return {Duration}\n   */\n  static fromISO(text, opts) {\n    const [parsed] = parseISODuration(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create a Duration from an ISO 8601 time string.\n   * @param {string} text - text to parse\n   * @param {Object} opts - options for parsing\n   * @param {string} [opts.locale='en-US'] - the locale to use\n   * @param {string} opts.numberingSystem - the numbering system to use\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @example Duration.fromISOTime('11:22:33.444').toObject() //=> { hours: 11, minutes: 22, seconds: 33, milliseconds: 444 }\n   * @example Duration.fromISOTime('11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T11:00').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @example Duration.fromISOTime('T1100').toObject() //=> { hours: 11, minutes: 0, seconds: 0 }\n   * @return {Duration}\n   */\n  static fromISOTime(text, opts) {\n    const [parsed] = parseISOTimeOnly(text);\n    if (parsed) {\n      return Duration.fromObject(parsed, opts);\n    } else {\n      return Duration.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n    }\n  }\n\n  /**\n   * Create an invalid Duration.\n   * @param {string} reason - simple string of why this datetime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Duration}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Duration is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDurationError(invalid);\n    } else {\n      return new Duration({ invalid });\n    }\n  }\n\n  /**\n   * @private\n   */\n  static normalizeUnit(unit) {\n    const normalized = {\n      year: \"years\",\n      years: \"years\",\n      quarter: \"quarters\",\n      quarters: \"quarters\",\n      month: \"months\",\n      months: \"months\",\n      week: \"weeks\",\n      weeks: \"weeks\",\n      day: \"days\",\n      days: \"days\",\n      hour: \"hours\",\n      hours: \"hours\",\n      minute: \"minutes\",\n      minutes: \"minutes\",\n      second: \"seconds\",\n      seconds: \"seconds\",\n      millisecond: \"milliseconds\",\n      milliseconds: \"milliseconds\",\n    }[unit ? unit.toLowerCase() : unit];\n\n    if (!normalized) throw new InvalidUnitError(unit);\n\n    return normalized;\n  }\n\n  /**\n   * Check if an object is a Duration. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDuration(o) {\n    return (o && o.isLuxonDuration) || false;\n  }\n\n  /**\n   * Get  the locale of a Duration, such 'en-GB'\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a Duration, such 'beng'. The numbering system is used when formatting the Duration\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Returns a string representation of this Duration formatted according to the specified format string. You may use these tokens:\n   * * `S` for milliseconds\n   * * `s` for seconds\n   * * `m` for minutes\n   * * `h` for hours\n   * * `d` for days\n   * * `M` for months\n   * * `y` for years\n   * Notes:\n   * * Add padding by repeating the token, e.g. \"yy\" pads the years to two digits, \"hhhh\" pads the hours out to four digits\n   * * The duration will be converted to the set of units in the format string using {@link Duration#shiftTo} and the Durations's conversion accuracy setting.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - options\n   * @param {boolean} [opts.floor=true] - floor numerical values\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"y d s\") //=> \"1 6 2\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"yy dd sss\") //=> \"01 06 002\"\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toFormat(\"M S\") //=> \"12 518402000\"\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    // reverse-compat since 1.2; we always round down now, never up, and we do it by default\n    const fmtOpts = {\n      ...opts,\n      floor: opts.round !== false && opts.floor !== false,\n    };\n    return this.isValid\n      ? Formatter.create(this.loc, fmtOpts).formatDurationFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a JavaScript object with this Duration's values.\n   * @example Duration.fromObject({ years: 1, days: 6, seconds: 2 }).toObject() //=> { years: 1, days: 6, seconds: 2 }\n   * @return {Object}\n   */\n  toObject() {\n    if (!this.isValid) return {};\n    return { ...this.values };\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Durations\n   * @example Duration.fromObject({ years: 3, seconds: 45 }).toISO() //=> 'P3YT45S'\n   * @example Duration.fromObject({ months: 4, seconds: 45 }).toISO() //=> 'P4MT45S'\n   * @example Duration.fromObject({ months: 5 }).toISO() //=> 'P5M'\n   * @example Duration.fromObject({ minutes: 5 }).toISO() //=> 'PT5M'\n   * @example Duration.fromObject({ milliseconds: 6 }).toISO() //=> 'PT0.006S'\n   * @return {string}\n   */\n  toISO() {\n    // we could use the formatter, but this is an easier way to get the minimum string\n    if (!this.isValid) return null;\n\n    let s = \"P\";\n    if (this.years !== 0) s += this.years + \"Y\";\n    if (this.months !== 0 || this.quarters !== 0) s += this.months + this.quarters * 3 + \"M\";\n    if (this.weeks !== 0) s += this.weeks + \"W\";\n    if (this.days !== 0) s += this.days + \"D\";\n    if (this.hours !== 0 || this.minutes !== 0 || this.seconds !== 0 || this.milliseconds !== 0)\n      s += \"T\";\n    if (this.hours !== 0) s += this.hours + \"H\";\n    if (this.minutes !== 0) s += this.minutes + \"M\";\n    if (this.seconds !== 0 || this.milliseconds !== 0)\n      // this will handle \"floating point madness\" by removing extra decimal places\n      // https://stackoverflow.com/questions/588004/is-floating-point-math-broken\n      s += roundTo(this.seconds + this.milliseconds / 1000, 3) + \"S\";\n    if (s === \"P\") s += \"T0S\";\n    return s;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Duration, formatted as a time of day.\n   * Note that this will return null if the duration is invalid, negative, or equal to or greater than 24 hours.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Times\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example Duration.fromObject({ hours: 11 }).toISOTime() //=> '11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressMilliseconds: true }) //=> '11:00:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ suppressSeconds: true }) //=> '11:00'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ includePrefix: true }) //=> 'T11:00:00.000'\n   * @example Duration.fromObject({ hours: 11 }).toISOTime({ format: 'basic' }) //=> '110000.000'\n   * @return {string}\n   */\n  toISOTime(opts = {}) {\n    if (!this.isValid) return null;\n\n    const millis = this.toMillis();\n    if (millis < 0 || millis >= 86400000) return null;\n\n    opts = {\n      suppressMilliseconds: false,\n      suppressSeconds: false,\n      includePrefix: false,\n      format: \"extended\",\n      ...opts,\n    };\n\n    const value = this.shiftTo(\"hours\", \"minutes\", \"seconds\", \"milliseconds\");\n\n    let fmt = opts.format === \"basic\" ? \"hhmm\" : \"hh:mm\";\n\n    if (!opts.suppressSeconds || value.seconds !== 0 || value.milliseconds !== 0) {\n      fmt += opts.format === \"basic\" ? \"ss\" : \":ss\";\n      if (!opts.suppressMilliseconds || value.milliseconds !== 0) {\n        fmt += \".SSS\";\n      }\n    }\n\n    let str = value.toFormat(fmt);\n\n    if (opts.includePrefix) {\n      str = \"T\" + str;\n    }\n\n    return str;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this Duration appropriate for use in debugging.\n   * @return {string}\n   */\n  toString() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration.\n   * @return {number}\n   */\n  toMillis() {\n    return this.as(\"milliseconds\");\n  }\n\n  /**\n   * Returns an milliseconds value of this Duration. Alias of {@link toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Make this Duration longer by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration),\n      result = {};\n\n    for (const k of orderedUnits) {\n      if (hasOwnProperty(dur.values, k) || hasOwnProperty(this.values, k)) {\n        result[k] = dur.get(k) + this.get(k);\n      }\n    }\n\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Make this Duration shorter by the specified amount. Return a newly-constructed Duration.\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @return {Duration}\n   */\n  minus(duration) {\n    if (!this.isValid) return this;\n\n    const dur = Duration.fromDurationLike(duration);\n    return this.plus(dur.negate());\n  }\n\n  /**\n   * Scale this Duration by the specified amount. Return a newly-constructed Duration.\n   * @param {function} fn - The function to apply to each unit. Arity is 1 or 2: the value of the unit and, optionally, the unit name. Must return a number.\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits(x => x * 2) //=> { hours: 2, minutes: 60 }\n   * @example Duration.fromObject({ hours: 1, minutes: 30 }).mapUnits((x, u) => u === \"hour\" ? x * 2 : x) //=> { hours: 2, minutes: 30 }\n   * @return {Duration}\n   */\n  mapUnits(fn) {\n    if (!this.isValid) return this;\n    const result = {};\n    for (const k of Object.keys(this.values)) {\n      result[k] = asNumber(fn(this.values[k], k));\n    }\n    return clone(this, { values: result }, true);\n  }\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example Duration.fromObject({years: 2, days: 3}).get('years') //=> 2\n   * @example Duration.fromObject({years: 2, days: 3}).get('months') //=> 0\n   * @example Duration.fromObject({years: 2, days: 3}).get('days') //=> 3\n   * @return {number}\n   */\n  get(unit) {\n    return this[Duration.normalizeUnit(unit)];\n  }\n\n  /**\n   * \"Set\" the values of specified units. Return a newly-constructed Duration.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dur.set({ years: 2017 })\n   * @example dur.set({ hours: 8, minutes: 30 })\n   * @return {Duration}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const mixed = { ...this.values, ...normalizeObject(values, Duration.normalizeUnit) };\n    return clone(this, { values: mixed });\n  }\n\n  /**\n   * \"Set\" the locale and/or numberingSystem.  Returns a newly-constructed Duration.\n   * @example dur.reconfigure({ locale: 'en-GB' })\n   * @return {Duration}\n   */\n  reconfigure({ locale, numberingSystem, conversionAccuracy } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem }),\n      opts = { loc };\n\n    if (conversionAccuracy) {\n      opts.conversionAccuracy = conversionAccuracy;\n    }\n\n    return clone(this, opts);\n  }\n\n  /**\n   * Return the length of the duration in the specified unit.\n   * @param {string} unit - a unit such as 'minutes' or 'days'\n   * @example Duration.fromObject({years: 1}).as('days') //=> 365\n   * @example Duration.fromObject({years: 1}).as('months') //=> 12\n   * @example Duration.fromObject({hours: 60}).as('days') //=> 2.5\n   * @return {number}\n   */\n  as(unit) {\n    return this.isValid ? this.shiftTo(unit).get(unit) : NaN;\n  }\n\n  /**\n   * Reduce this Duration to its canonical representation in its current units.\n   * @example Duration.fromObject({ years: 2, days: 5000 }).normalize().toObject() //=> { years: 15, days: 255 }\n   * @example Duration.fromObject({ hours: 12, minutes: -45 }).normalize().toObject() //=> { hours: 11, minutes: 15 }\n   * @return {Duration}\n   */\n  normalize() {\n    if (!this.isValid) return this;\n    const vals = this.toObject();\n    normalizeValues(this.matrix, vals);\n    return clone(this, { values: vals }, true);\n  }\n\n  /**\n   * Convert this Duration into its representation in a different set of units.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).shiftTo('minutes', 'milliseconds').toObject() //=> { minutes: 60, milliseconds: 30000 }\n   * @return {Duration}\n   */\n  shiftTo(...units) {\n    if (!this.isValid) return this;\n\n    if (units.length === 0) {\n      return this;\n    }\n\n    units = units.map((u) => Duration.normalizeUnit(u));\n\n    const built = {},\n      accumulated = {},\n      vals = this.toObject();\n    let lastUnit;\n\n    for (const k of orderedUnits) {\n      if (units.indexOf(k) >= 0) {\n        lastUnit = k;\n\n        let own = 0;\n\n        // anything we haven't boiled down yet should get boiled to this unit\n        for (const ak in accumulated) {\n          own += this.matrix[ak][k] * accumulated[ak];\n          accumulated[ak] = 0;\n        }\n\n        // plus anything that's already in this unit\n        if (isNumber(vals[k])) {\n          own += vals[k];\n        }\n\n        const i = Math.trunc(own);\n        built[k] = i;\n        accumulated[k] = own - i; // we'd like to absorb these fractions in another unit\n\n        // plus anything further down the chain that should be rolled up in to this\n        for (const down in vals) {\n          if (orderedUnits.indexOf(down) > orderedUnits.indexOf(k)) {\n            convert(this.matrix, vals, down, built, k);\n          }\n        }\n        // otherwise, keep it in the wings to boil it later\n      } else if (isNumber(vals[k])) {\n        accumulated[k] = vals[k];\n      }\n    }\n\n    // anything leftover becomes the decimal for the last unit\n    // lastUnit must be defined since units is not empty\n    for (const key in accumulated) {\n      if (accumulated[key] !== 0) {\n        built[lastUnit] +=\n          key === lastUnit ? accumulated[key] : accumulated[key] / this.matrix[lastUnit][key];\n      }\n    }\n\n    return clone(this, { values: built }, true).normalize();\n  }\n\n  /**\n   * Return the negative of this Duration.\n   * @example Duration.fromObject({ hours: 1, seconds: 30 }).negate().toObject() //=> { hours: -1, seconds: -30 }\n   * @return {Duration}\n   */\n  negate() {\n    if (!this.isValid) return this;\n    const negated = {};\n    for (const k of Object.keys(this.values)) {\n      negated[k] = -this.values[k];\n    }\n    return clone(this, { values: negated }, true);\n  }\n\n  /**\n   * Get the years.\n   * @type {number}\n   */\n  get years() {\n    return this.isValid ? this.values.years || 0 : NaN;\n  }\n\n  /**\n   * Get the quarters.\n   * @type {number}\n   */\n  get quarters() {\n    return this.isValid ? this.values.quarters || 0 : NaN;\n  }\n\n  /**\n   * Get the months.\n   * @type {number}\n   */\n  get months() {\n    return this.isValid ? this.values.months || 0 : NaN;\n  }\n\n  /**\n   * Get the weeks\n   * @type {number}\n   */\n  get weeks() {\n    return this.isValid ? this.values.weeks || 0 : NaN;\n  }\n\n  /**\n   * Get the days.\n   * @type {number}\n   */\n  get days() {\n    return this.isValid ? this.values.days || 0 : NaN;\n  }\n\n  /**\n   * Get the hours.\n   * @type {number}\n   */\n  get hours() {\n    return this.isValid ? this.values.hours || 0 : NaN;\n  }\n\n  /**\n   * Get the minutes.\n   * @type {number}\n   */\n  get minutes() {\n    return this.isValid ? this.values.minutes || 0 : NaN;\n  }\n\n  /**\n   * Get the seconds.\n   * @return {number}\n   */\n  get seconds() {\n    return this.isValid ? this.values.seconds || 0 : NaN;\n  }\n\n  /**\n   * Get the milliseconds.\n   * @return {number}\n   */\n  get milliseconds() {\n    return this.isValid ? this.values.milliseconds || 0 : NaN;\n  }\n\n  /**\n   * Returns whether the Duration is invalid. Invalid durations are returned by diff operations\n   * on invalid DateTimes or Intervals.\n   * @return {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this Duration became invalid, or null if the Duration is valid\n   * @return {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Duration became invalid, or null if the Duration is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Equality check\n   * Two Durations are equal iff they have the same units and the same values for each unit.\n   * @param {Duration} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    if (!this.loc.equals(other.loc)) {\n      return false;\n    }\n\n    function eq(v1, v2) {\n      // Consider 0 and undefined as equal\n      if (v1 === undefined || v1 === 0) return v2 === undefined || v2 === 0;\n      return v1 === v2;\n    }\n\n    for (const u of orderedUnits) {\n      if (!eq(this.values[u], other.values[u])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n", "import DateTime, { friendlyDateTime } from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Settings from \"./settings.js\";\nimport { InvalidArgumentError, InvalidIntervalError } from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid Interval\";\n\n// checks if the start is equal to or before the end\nfunction validateStartEnd(start, end) {\n  if (!start || !start.isValid) {\n    return Interval.invalid(\"missing or invalid start\");\n  } else if (!end || !end.isValid) {\n    return Interval.invalid(\"missing or invalid end\");\n  } else if (end < start) {\n    return Interval.invalid(\n      \"end before start\",\n      `The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`\n    );\n  } else {\n    return null;\n  }\n}\n\n/**\n * An Interval object represents a half-open interval of time, where each endpoint is a {@link DateTime}. Conceptually, it's a container for those two endpoints, accompanied by methods for creating, parsing, interrogating, comparing, transforming, and formatting them.\n *\n * Here is a brief overview of the most commonly used methods and getters in Interval:\n *\n * * **Creation** To create an Interval, use {@link Interval#fromDateTimes}, {@link Interval#after}, {@link Interval#before}, or {@link Interval#fromISO}.\n * * **Accessors** Use {@link Interval#start} and {@link Interval#end} to get the start and end.\n * * **Interrogation** To analyze the Interval, use {@link Interval#count}, {@link Interval#length}, {@link Interval#hasSame}, {@link Interval#contains}, {@link Interval#isAfter}, or {@link Interval#isBefore}.\n * * **Transformation** To create other Intervals out of this one, use {@link Interval#set}, {@link Interval#splitAt}, {@link Interval#splitBy}, {@link Interval#divideEqually}, {@link Interval#merge}, {@link Interval#xor}, {@link Interval#union}, {@link Interval#intersection}, or {@link Interval#difference}.\n * * **Comparison** To compare this Interval to another one, use {@link Interval#equals}, {@link Interval#overlaps}, {@link Interval#abutsStart}, {@link Interval#abutsEnd}, {@link Interval#engulfs}\n * * **Output** To convert the Interval into other representations, see {@link Interval#toString}, {@link Interval#toISO}, {@link Interval#toISODate}, {@link Interval#toISOTime}, {@link Interval#toFormat}, and {@link Interval#toDuration}.\n */\nexport default class Interval {\n  /**\n   * @private\n   */\n  constructor(config) {\n    /**\n     * @access private\n     */\n    this.s = config.start;\n    /**\n     * @access private\n     */\n    this.e = config.end;\n    /**\n     * @access private\n     */\n    this.invalid = config.invalid || null;\n    /**\n     * @access private\n     */\n    this.isLuxonInterval = true;\n  }\n\n  /**\n   * Create an invalid Interval.\n   * @param {string} reason - simple string of why this Interval is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {Interval}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the Interval is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidIntervalError(invalid);\n    } else {\n      return new Interval({ invalid });\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and an end DateTime. Inclusive of the start but not the end.\n   * @param {DateTime|Date|Object} start\n   * @param {DateTime|Date|Object} end\n   * @return {Interval}\n   */\n  static fromDateTimes(start, end) {\n    const builtStart = friendlyDateTime(start),\n      builtEnd = friendlyDateTime(end);\n\n    const validateError = validateStartEnd(builtStart, builtEnd);\n\n    if (validateError == null) {\n      return new Interval({\n        start: builtStart,\n        end: builtEnd,\n      });\n    } else {\n      return validateError;\n    }\n  }\n\n  /**\n   * Create an Interval from a start DateTime and a Duration to extend to.\n   * @param {DateTime|Date|Object} start\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static after(start, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(start);\n    return Interval.fromDateTimes(dt, dt.plus(dur));\n  }\n\n  /**\n   * Create an Interval from an end DateTime and a Duration to extend backwards to.\n   * @param {DateTime|Date|Object} end\n   * @param {Duration|Object|number} duration - the length of the Interval.\n   * @return {Interval}\n   */\n  static before(end, duration) {\n    const dur = Duration.fromDurationLike(duration),\n      dt = friendlyDateTime(end);\n    return Interval.fromDateTimes(dt.minus(dur), dt);\n  }\n\n  /**\n   * Create an Interval from an ISO 8601 string.\n   * Accepts `<start>/<end>`, `<start>/<duration>`, and `<duration>/<end>` formats.\n   * @param {string} text - the ISO string to parse\n   * @param {Object} [opts] - options to pass {@link DateTime#fromISO} and optionally {@link Duration#fromISO}\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {Interval}\n   */\n  static fromISO(text, opts) {\n    const [s, e] = (text || \"\").split(\"/\", 2);\n    if (s && e) {\n      let start, startIsValid;\n      try {\n        start = DateTime.fromISO(s, opts);\n        startIsValid = start.isValid;\n      } catch (e) {\n        startIsValid = false;\n      }\n\n      let end, endIsValid;\n      try {\n        end = DateTime.fromISO(e, opts);\n        endIsValid = end.isValid;\n      } catch (e) {\n        endIsValid = false;\n      }\n\n      if (startIsValid && endIsValid) {\n        return Interval.fromDateTimes(start, end);\n      }\n\n      if (startIsValid) {\n        const dur = Duration.fromISO(e, opts);\n        if (dur.isValid) {\n          return Interval.after(start, dur);\n        }\n      } else if (endIsValid) {\n        const dur = Duration.fromISO(s, opts);\n        if (dur.isValid) {\n          return Interval.before(end, dur);\n        }\n      }\n    }\n    return Interval.invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ISO 8601`);\n  }\n\n  /**\n   * Check if an object is an Interval. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isInterval(o) {\n    return (o && o.isLuxonInterval) || false;\n  }\n\n  /**\n   * Returns the start of the Interval\n   * @type {DateTime}\n   */\n  get start() {\n    return this.isValid ? this.s : null;\n  }\n\n  /**\n   * Returns the end of the Interval\n   * @type {DateTime}\n   */\n  get end() {\n    return this.isValid ? this.e : null;\n  }\n\n  /**\n   * Returns whether this Interval's end is at least its start, meaning that the Interval isn't 'backwards'.\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalidReason === null;\n  }\n\n  /**\n   * Returns an error code if this Interval is invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this Interval became invalid, or null if the Interval is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Returns the length of the Interval in the specified unit.\n   * @param {string} unit - the unit (such as 'hours' or 'days') to return the length in.\n   * @return {number}\n   */\n  length(unit = \"milliseconds\") {\n    return this.isValid ? this.toDuration(...[unit]).get(unit) : NaN;\n  }\n\n  /**\n   * Returns the count of minutes, hours, days, months, or years included in the Interval, even in part.\n   * Unlike {@link Interval#length} this counts sections of the calendar, not periods of time, e.g. specifying 'day'\n   * asks 'what dates are included in this interval?', not 'how many days long is this interval?'\n   * @param {string} [unit='milliseconds'] - the unit of time to count.\n   * @return {number}\n   */\n  count(unit = \"milliseconds\") {\n    if (!this.isValid) return NaN;\n    const start = this.start.startOf(unit),\n      end = this.end.startOf(unit);\n    return Math.floor(end.diff(start, unit).get(unit)) + 1;\n  }\n\n  /**\n   * Returns whether this Interval's start and end are both in the same unit of time\n   * @param {string} unit - the unit of time to check sameness on\n   * @return {boolean}\n   */\n  hasSame(unit) {\n    return this.isValid ? this.isEmpty() || this.e.minus(1).hasSame(this.s, unit) : false;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end DateTimes.\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.s.valueOf() === this.e.valueOf();\n  }\n\n  /**\n   * Return whether this Interval's start is after the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isAfter(dateTime) {\n    if (!this.isValid) return false;\n    return this.s > dateTime;\n  }\n\n  /**\n   * Return whether this Interval's end is before the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  isBefore(dateTime) {\n    if (!this.isValid) return false;\n    return this.e <= dateTime;\n  }\n\n  /**\n   * Return whether this Interval contains the specified DateTime.\n   * @param {DateTime} dateTime\n   * @return {boolean}\n   */\n  contains(dateTime) {\n    if (!this.isValid) return false;\n    return this.s <= dateTime && this.e > dateTime;\n  }\n\n  /**\n   * \"Sets\" the start and/or end dates. Returns a newly-constructed Interval.\n   * @param {Object} values - the values to set\n   * @param {DateTime} values.start - the starting DateTime\n   * @param {DateTime} values.end - the ending DateTime\n   * @return {Interval}\n   */\n  set({ start, end } = {}) {\n    if (!this.isValid) return this;\n    return Interval.fromDateTimes(start || this.s, end || this.e);\n  }\n\n  /**\n   * Split this Interval at each of the specified DateTimes\n   * @param {...DateTime} dateTimes - the unit of time to count.\n   * @return {Array}\n   */\n  splitAt(...dateTimes) {\n    if (!this.isValid) return [];\n    const sorted = dateTimes\n        .map(friendlyDateTime)\n        .filter((d) => this.contains(d))\n        .sort(),\n      results = [];\n    let { s } = this,\n      i = 0;\n\n    while (s < this.e) {\n      const added = sorted[i] || this.e,\n        next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      i += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into smaller Intervals, each of the specified length.\n   * Left over time is grouped into a smaller interval\n   * @param {Duration|Object|number} duration - The length of each resulting interval.\n   * @return {Array}\n   */\n  splitBy(duration) {\n    const dur = Duration.fromDurationLike(duration);\n\n    if (!this.isValid || !dur.isValid || dur.as(\"milliseconds\") === 0) {\n      return [];\n    }\n\n    let { s } = this,\n      idx = 1,\n      next;\n\n    const results = [];\n    while (s < this.e) {\n      const added = this.start.plus(dur.mapUnits((x) => x * idx));\n      next = +added > +this.e ? this.e : added;\n      results.push(Interval.fromDateTimes(s, next));\n      s = next;\n      idx += 1;\n    }\n\n    return results;\n  }\n\n  /**\n   * Split this Interval into the specified number of smaller intervals.\n   * @param {number} numberOfParts - The number of Intervals to divide the Interval into.\n   * @return {Array}\n   */\n  divideEqually(numberOfParts) {\n    if (!this.isValid) return [];\n    return this.splitBy(this.length() / numberOfParts).slice(0, numberOfParts);\n  }\n\n  /**\n   * Return whether this Interval overlaps with the specified Interval\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  overlaps(other) {\n    return this.e > other.s && this.s < other.e;\n  }\n\n  /**\n   * Return whether this Interval's end is adjacent to the specified Interval's start.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsStart(other) {\n    if (!this.isValid) return false;\n    return +this.e === +other.s;\n  }\n\n  /**\n   * Return whether this Interval's start is adjacent to the specified Interval's end.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  abutsEnd(other) {\n    if (!this.isValid) return false;\n    return +other.e === +this.s;\n  }\n\n  /**\n   * Return whether this Interval engulfs the start and end of the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  engulfs(other) {\n    if (!this.isValid) return false;\n    return this.s <= other.s && this.e >= other.e;\n  }\n\n  /**\n   * Return whether this Interval has the same start and end as the specified Interval.\n   * @param {Interval} other\n   * @return {boolean}\n   */\n  equals(other) {\n    if (!this.isValid || !other.isValid) {\n      return false;\n    }\n\n    return this.s.equals(other.s) && this.e.equals(other.e);\n  }\n\n  /**\n   * Return an Interval representing the intersection of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the maximum start time and the minimum end time of the two Intervals.\n   * Returns null if the intersection is empty, meaning, the intervals don't intersect.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  intersection(other) {\n    if (!this.isValid) return this;\n    const s = this.s > other.s ? this.s : other.s,\n      e = this.e < other.e ? this.e : other.e;\n\n    if (s >= e) {\n      return null;\n    } else {\n      return Interval.fromDateTimes(s, e);\n    }\n  }\n\n  /**\n   * Return an Interval representing the union of this Interval and the specified Interval.\n   * Specifically, the resulting Interval has the minimum start time and the maximum end time of the two Intervals.\n   * @param {Interval} other\n   * @return {Interval}\n   */\n  union(other) {\n    if (!this.isValid) return this;\n    const s = this.s < other.s ? this.s : other.s,\n      e = this.e > other.e ? this.e : other.e;\n    return Interval.fromDateTimes(s, e);\n  }\n\n  /**\n   * Merge an array of Intervals into a equivalent minimal set of Intervals.\n   * Combines overlapping and adjacent Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static merge(intervals) {\n    const [found, final] = intervals\n      .sort((a, b) => a.s - b.s)\n      .reduce(\n        ([sofar, current], item) => {\n          if (!current) {\n            return [sofar, item];\n          } else if (current.overlaps(item) || current.abutsStart(item)) {\n            return [sofar, current.union(item)];\n          } else {\n            return [sofar.concat([current]), item];\n          }\n        },\n        [[], null]\n      );\n    if (final) {\n      found.push(final);\n    }\n    return found;\n  }\n\n  /**\n   * Return an array of Intervals representing the spans of time that only appear in one of the specified Intervals.\n   * @param {Array} intervals\n   * @return {Array}\n   */\n  static xor(intervals) {\n    let start = null,\n      currentCount = 0;\n    const results = [],\n      ends = intervals.map((i) => [\n        { time: i.s, type: \"s\" },\n        { time: i.e, type: \"e\" },\n      ]),\n      flattened = Array.prototype.concat(...ends),\n      arr = flattened.sort((a, b) => a.time - b.time);\n\n    for (const i of arr) {\n      currentCount += i.type === \"s\" ? 1 : -1;\n\n      if (currentCount === 1) {\n        start = i.time;\n      } else {\n        if (start && +start !== +i.time) {\n          results.push(Interval.fromDateTimes(start, i.time));\n        }\n\n        start = null;\n      }\n    }\n\n    return Interval.merge(results);\n  }\n\n  /**\n   * Return an Interval representing the span of time in this Interval that doesn't overlap with any of the specified Intervals.\n   * @param {...Interval} intervals\n   * @return {Array}\n   */\n  difference(...intervals) {\n    return Interval.xor([this].concat(intervals))\n      .map((i) => this.intersection(i))\n      .filter((i) => i && !i.isEmpty());\n  }\n\n  /**\n   * Returns a string representation of this Interval appropriate for debugging.\n   * @return {string}\n   */\n  toString() {\n    if (!this.isValid) return INVALID;\n    return `[${this.s.toISO()} \u2013 ${this.e.toISO()})`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this Interval.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISO(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISO(opts)}/${this.e.toISO(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of date of this Interval.\n   * The time components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @return {string}\n   */\n  toISODate() {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISODate()}/${this.e.toISODate()}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of time of this Interval.\n   * The date components are ignored.\n   * @see https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n   * @param {Object} opts - The same options as {@link DateTime#toISO}\n   * @return {string}\n   */\n  toISOTime(opts) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this Interval formatted according to the specified format string.\n   * @param {string} dateFormat - the format string. This string formats the start and end time. See {@link DateTime#toFormat} for details.\n   * @param {Object} opts - options\n   * @param {string} [opts.separator =  ' \u2013 '] - a separator to place between the start and end representations\n   * @return {string}\n   */\n  toFormat(dateFormat, { separator = \" \u2013 \" } = {}) {\n    if (!this.isValid) return INVALID;\n    return `${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;\n  }\n\n  /**\n   * Return a Duration representing the time spanned by this interval.\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration().toObject() //=> { milliseconds: 88489257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('days').toObject() //=> { days: 1.0241812152777778 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes']).toObject() //=> { hours: 24, minutes: 34.82095 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration(['hours', 'minutes', 'seconds']).toObject() //=> { hours: 24, minutes: 34, seconds: 49.257 }\n   * @example Interval.fromDateTimes(dt1, dt2).toDuration('seconds').toObject() //=> { seconds: 88489.257 }\n   * @return {Duration}\n   */\n  toDuration(unit, opts) {\n    if (!this.isValid) {\n      return Duration.invalid(this.invalidReason);\n    }\n    return this.e.diff(this.s, unit, opts);\n  }\n\n  /**\n   * Run mapFn on the interval start and end, returning a new Interval from the resulting DateTimes\n   * @param {function} mapFn\n   * @return {Interval}\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.toUTC())\n   * @example Interval.fromDateTimes(dt1, dt2).mapEndpoints(endpoint => endpoint.plus({ hours: 2 }))\n   */\n  mapEndpoints(mapFn) {\n    return Interval.fromDateTimes(mapFn(this.s), mapFn(this.e));\n  }\n}\n", "import DateTime from \"./datetime.js\";\nimport Settings from \"./settings.js\";\nimport Locale from \"./impl/locale.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\n\nimport { hasRelative } from \"./impl/util.js\";\n\n/**\n * The Info class contains static methods for retrieving general time and date related data. For example, it has methods for finding out if a time zone has a DST, for listing the months in any supported locale, and for discovering which of Luxon features are available in the current environment.\n */\nexport default class Info {\n  /**\n   * Return whether the specified zone contains a DST.\n   * @param {string|Zone} [zone='local'] - Zone to check. Defaults to the environment's local zone.\n   * @return {boolean}\n   */\n  static hasDST(zone = Settings.defaultZone) {\n    const proto = DateTime.now().setZone(zone).set({ month: 12 });\n\n    return !zone.isUniversal && proto.offset !== proto.set({ month: 6 }).offset;\n  }\n\n  /**\n   * Return whether the specified zone is a valid IANA specifier.\n   * @param {string} zone - Zone to check\n   * @return {boolean}\n   */\n  static isValidIANAZone(zone) {\n    return IANAZone.isValidSpecifier(zone) && IANAZone.isValidZone(zone);\n  }\n\n  /**\n   * Converts the input into a {@link Zone} instance.\n   *\n   * * If `input` is already a Zone instance, it is returned unchanged.\n   * * If `input` is a string containing a valid time zone name, a Zone instance\n   *   with that name is returned.\n   * * If `input` is a string that doesn't refer to a known time zone, a Zone\n   *   instance with {@link Zone#isValid} == false is returned.\n   * * If `input is a number, a Zone instance with the specified fixed offset\n   *   in minutes is returned.\n   * * If `input` is `null` or `undefined`, the default zone is returned.\n   * @param {string|Zone|number} [input] - the value to be converted\n   * @return {Zone}\n   */\n  static normalizeZone(input) {\n    return normalizeZone(input, Settings.defaultZone);\n  }\n\n  /**\n   * Return an array of standalone month names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @example Info.months()[0] //=> 'January'\n   * @example Info.months('short')[0] //=> 'Jan'\n   * @example Info.months('numeric')[0] //=> '1'\n   * @example Info.months('short', { locale: 'fr-CA' } )[0] //=> 'janv.'\n   * @example Info.months('numeric', { locale: 'ar' })[0] //=> '\u0661'\n   * @example Info.months('long', { outputCalendar: 'islamic' })[0] //=> 'Rabi\u02BB I'\n   * @return {Array}\n   */\n  static months(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length);\n  }\n\n  /**\n   * Return an array of format month names.\n   * Format months differ from standalone months in that they're meant to appear next to the day of the month. In some languages, that\n   * changes the string.\n   * See {@link Info#months}\n   * @param {string} [length='long'] - the length of the month representation, such as \"numeric\", \"2-digit\", \"narrow\", \"short\", \"long\"\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @param {string} [opts.outputCalendar='gregory'] - the calendar\n   * @return {Array}\n   */\n  static monthsFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null, outputCalendar = \"gregory\" } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, outputCalendar)).months(length, true);\n  }\n\n  /**\n   * Return an array of standalone week names.\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {string} [length='long'] - the length of the weekday representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @example Info.weekdays()[0] //=> 'Monday'\n   * @example Info.weekdays('short')[0] //=> 'Mon'\n   * @example Info.weekdays('short', { locale: 'fr-CA' })[0] //=> 'lun.'\n   * @example Info.weekdays('short', { locale: 'ar' })[0] //=> '\u0627\u0644\u0627\u062B\u0646\u064A\u0646'\n   * @return {Array}\n   */\n  static weekdays(length = \"long\", { locale = null, numberingSystem = null, locObj = null } = {}) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length);\n  }\n\n  /**\n   * Return an array of format week names.\n   * Format weekdays differ from standalone weekdays in that they're meant to appear next to more date information. In some languages, that\n   * changes the string.\n   * See {@link Info#weekdays}\n   * @param {string} [length='long'] - the length of the month representation, such as \"narrow\", \"short\", \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale=null] - the locale code\n   * @param {string} [opts.numberingSystem=null] - the numbering system\n   * @param {string} [opts.locObj=null] - an existing locale object to use\n   * @return {Array}\n   */\n  static weekdaysFormat(\n    length = \"long\",\n    { locale = null, numberingSystem = null, locObj = null } = {}\n  ) {\n    return (locObj || Locale.create(locale, numberingSystem, null)).weekdays(length, true);\n  }\n\n  /**\n   * Return an array of meridiems.\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.meridiems() //=> [ 'AM', 'PM' ]\n   * @example Info.meridiems({ locale: 'my' }) //=> [ '\u1014\u1036\u1014\u1000\u103A', '\u100A\u1014\u1031' ]\n   * @return {Array}\n   */\n  static meridiems({ locale = null } = {}) {\n    return Locale.create(locale).meridiems();\n  }\n\n  /**\n   * Return an array of eras, such as ['BC', 'AD']. The locale can be specified, but the calendar system is always Gregorian.\n   * @param {string} [length='short'] - the length of the era representation, such as \"short\" or \"long\".\n   * @param {Object} opts - options\n   * @param {string} [opts.locale] - the locale code\n   * @example Info.eras() //=> [ 'BC', 'AD' ]\n   * @example Info.eras('long') //=> [ 'Before Christ', 'Anno Domini' ]\n   * @example Info.eras('long', { locale: 'fr' }) //=> [ 'avant J\u00E9sus-Christ', 'apr\u00E8s J\u00E9sus-Christ' ]\n   * @return {Array}\n   */\n  static eras(length = \"short\", { locale = null } = {}) {\n    return Locale.create(locale, null, \"gregory\").eras(length);\n  }\n\n  /**\n   * Return the set of available features in this environment.\n   * Some features of Luxon are not available in all environments. For example, on older browsers, relative time formatting support is not available. Use this function to figure out if that's the case.\n   * Keys:\n   * * `relative`: whether this environment supports relative time formatting\n   * @example Info.features() //=> { relative: false }\n   * @return {Object}\n   */\n  static features() {\n    return { relative: hasRelative() };\n  }\n}\n", "import Duration from \"../duration.js\";\n\nfunction dayDiff(earlier, later) {\n  const utcDayStart = (dt) => dt.toUTC(0, { keepLocalTime: true }).startOf(\"day\").valueOf(),\n    ms = utcDayStart(later) - utcDayStart(earlier);\n  return Math.floor(Duration.fromMillis(ms).as(\"days\"));\n}\n\nfunction highOrderDiffs(cursor, later, units) {\n  const differs = [\n    [\"years\", (a, b) => b.year - a.year],\n    [\"quarters\", (a, b) => b.quarter - a.quarter],\n    [\"months\", (a, b) => b.month - a.month + (b.year - a.year) * 12],\n    [\n      \"weeks\",\n      (a, b) => {\n        const days = dayDiff(a, b);\n        return (days - (days % 7)) / 7;\n      },\n    ],\n    [\"days\", dayDiff],\n  ];\n\n  const results = {};\n  let lowestOrder, highWater;\n\n  for (const [unit, differ] of differs) {\n    if (units.indexOf(unit) >= 0) {\n      lowestOrder = unit;\n\n      let delta = differ(cursor, later);\n      highWater = cursor.plus({ [unit]: delta });\n\n      if (highWater > later) {\n        cursor = cursor.plus({ [unit]: delta - 1 });\n        delta -= 1;\n      } else {\n        cursor = highWater;\n      }\n\n      results[unit] = delta;\n    }\n  }\n\n  return [cursor, results, highWater, lowestOrder];\n}\n\nexport default function (earlier, later, units, opts) {\n  let [cursor, results, highWater, lowestOrder] = highOrderDiffs(earlier, later, units);\n\n  const remainingMillis = later - cursor;\n\n  const lowerOrderUnits = units.filter(\n    (u) => [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"].indexOf(u) >= 0\n  );\n\n  if (lowerOrderUnits.length === 0) {\n    if (highWater < later) {\n      highWater = cursor.plus({ [lowestOrder]: 1 });\n    }\n\n    if (highWater !== cursor) {\n      results[lowestOrder] = (results[lowestOrder] || 0) + remainingMillis / (highWater - cursor);\n    }\n  }\n\n  const duration = Duration.fromObject(results, opts);\n\n  if (lowerOrderUnits.length > 0) {\n    return Duration.fromMillis(remainingMillis, opts)\n      .shiftTo(...lowerOrderUnits)\n      .plus(duration);\n  } else {\n    return duration;\n  }\n}\n", "const numberingSystems = {\n  arab: \"[\\u0660-\\u0669]\",\n  arabext: \"[\\u06F0-\\u06F9]\",\n  bali: \"[\\u1B50-\\u1B59]\",\n  beng: \"[\\u09E6-\\u09EF]\",\n  deva: \"[\\u0966-\\u096F]\",\n  fullwide: \"[\\uFF10-\\uFF19]\",\n  gujr: \"[\\u0AE6-\\u0AEF]\",\n  hanidec: \"[\u3007|\u4E00|\u4E8C|\u4E09|\u56DB|\u4E94|\u516D|\u4E03|\u516B|\u4E5D]\",\n  khmr: \"[\\u17E0-\\u17E9]\",\n  knda: \"[\\u0CE6-\\u0CEF]\",\n  laoo: \"[\\u0ED0-\\u0ED9]\",\n  limb: \"[\\u1946-\\u194F]\",\n  mlym: \"[\\u0D66-\\u0D6F]\",\n  mong: \"[\\u1810-\\u1819]\",\n  mymr: \"[\\u1040-\\u1049]\",\n  orya: \"[\\u0B66-\\u0B6F]\",\n  tamldec: \"[\\u0BE6-\\u0BEF]\",\n  telu: \"[\\u0C66-\\u0C6F]\",\n  thai: \"[\\u0E50-\\u0E59]\",\n  tibt: \"[\\u0F20-\\u0F29]\",\n  latn: \"\\\\d\",\n};\n\nconst numberingSystemsUTF16 = {\n  arab: [1632, 1641],\n  arabext: [1776, 1785],\n  bali: [6992, 7001],\n  beng: [2534, 2543],\n  deva: [2406, 2415],\n  fullwide: [65296, 65303],\n  gujr: [2790, 2799],\n  khmr: [6112, 6121],\n  knda: [3302, 3311],\n  laoo: [3792, 3801],\n  limb: [6470, 6479],\n  mlym: [3430, 3439],\n  mong: [6160, 6169],\n  mymr: [4160, 4169],\n  orya: [2918, 2927],\n  tamldec: [3046, 3055],\n  telu: [3174, 3183],\n  thai: [3664, 3673],\n  tibt: [3872, 3881],\n};\n\nconst hanidecChars = numberingSystems.hanidec.replace(/[\\[|\\]]/g, \"\").split(\"\");\n\nexport function parseDigits(str) {\n  let value = parseInt(str, 10);\n  if (isNaN(value)) {\n    value = \"\";\n    for (let i = 0; i < str.length; i++) {\n      const code = str.charCodeAt(i);\n\n      if (str[i].search(numberingSystems.hanidec) !== -1) {\n        value += hanidecChars.indexOf(str[i]);\n      } else {\n        for (const key in numberingSystemsUTF16) {\n          const [min, max] = numberingSystemsUTF16[key];\n          if (code >= min && code <= max) {\n            value += code - min;\n          }\n        }\n      }\n    }\n    return parseInt(value, 10);\n  } else {\n    return value;\n  }\n}\n\nexport function digitRegex({ numberingSystem }, append = \"\") {\n  return new RegExp(`${numberingSystems[numberingSystem || \"latn\"]}${append}`);\n}\n", "import { parseMillis, isUndefined, untruncateYear, signedOffset, hasOwnProperty } from \"./util.js\";\nimport Formatter from \"./formatter.js\";\nimport FixedOffsetZone from \"../zones/fixedOffsetZone.js\";\nimport IANAZone from \"../zones/IANAZone.js\";\nimport DateTime from \"../datetime.js\";\nimport { digitRegex, parseDigits } from \"./digits.js\";\nimport { ConflictingSpecificationError } from \"../errors.js\";\n\nconst MISSING_FTP = \"missing Intl.DateTimeFormat.formatToParts support\";\n\nfunction intUnit(regex, post = (i) => i) {\n  return { regex, deser: ([s]) => post(parseDigits(s)) };\n}\n\nconst NBSP = String.fromCharCode(160);\nconst spaceOrNBSP = `( |${NBSP})`;\nconst spaceOrNBSPRegExp = new RegExp(spaceOrNBSP, \"g\");\n\nfunction fixListRegex(s) {\n  // make dots optional and also make them literal\n  // make space and non breakable space characters interchangeable\n  return s.replace(/\\./g, \"\\\\.?\").replace(spaceOrNBSPRegExp, spaceOrNBSP);\n}\n\nfunction stripInsensitivities(s) {\n  return s\n    .replace(/\\./g, \"\") // ignore dots that were made optional\n    .replace(spaceOrNBSPRegExp, \" \") // interchange space and nbsp\n    .toLowerCase();\n}\n\nfunction oneOf(strings, startIndex) {\n  if (strings === null) {\n    return null;\n  } else {\n    return {\n      regex: RegExp(strings.map(fixListRegex).join(\"|\")),\n      deser: ([s]) =>\n        strings.findIndex((i) => stripInsensitivities(s) === stripInsensitivities(i)) + startIndex,\n    };\n  }\n}\n\nfunction offset(regex, groups) {\n  return { regex, deser: ([, h, m]) => signedOffset(h, m), groups };\n}\n\nfunction simple(regex) {\n  return { regex, deser: ([s]) => s };\n}\n\nfunction escapeToken(value) {\n  return value.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nfunction unitForToken(token, loc) {\n  const one = digitRegex(loc),\n    two = digitRegex(loc, \"{2}\"),\n    three = digitRegex(loc, \"{3}\"),\n    four = digitRegex(loc, \"{4}\"),\n    six = digitRegex(loc, \"{6}\"),\n    oneOrTwo = digitRegex(loc, \"{1,2}\"),\n    oneToThree = digitRegex(loc, \"{1,3}\"),\n    oneToSix = digitRegex(loc, \"{1,6}\"),\n    oneToNine = digitRegex(loc, \"{1,9}\"),\n    twoToFour = digitRegex(loc, \"{2,4}\"),\n    fourToSix = digitRegex(loc, \"{4,6}\"),\n    literal = (t) => ({ regex: RegExp(escapeToken(t.val)), deser: ([s]) => s, literal: true }),\n    unitate = (t) => {\n      if (token.literal) {\n        return literal(t);\n      }\n      switch (t.val) {\n        // era\n        case \"G\":\n          return oneOf(loc.eras(\"short\", false), 0);\n        case \"GG\":\n          return oneOf(loc.eras(\"long\", false), 0);\n        // years\n        case \"y\":\n          return intUnit(oneToSix);\n        case \"yy\":\n          return intUnit(twoToFour, untruncateYear);\n        case \"yyyy\":\n          return intUnit(four);\n        case \"yyyyy\":\n          return intUnit(fourToSix);\n        case \"yyyyyy\":\n          return intUnit(six);\n        // months\n        case \"M\":\n          return intUnit(oneOrTwo);\n        case \"MM\":\n          return intUnit(two);\n        case \"MMM\":\n          return oneOf(loc.months(\"short\", true, false), 1);\n        case \"MMMM\":\n          return oneOf(loc.months(\"long\", true, false), 1);\n        case \"L\":\n          return intUnit(oneOrTwo);\n        case \"LL\":\n          return intUnit(two);\n        case \"LLL\":\n          return oneOf(loc.months(\"short\", false, false), 1);\n        case \"LLLL\":\n          return oneOf(loc.months(\"long\", false, false), 1);\n        // dates\n        case \"d\":\n          return intUnit(oneOrTwo);\n        case \"dd\":\n          return intUnit(two);\n        // ordinals\n        case \"o\":\n          return intUnit(oneToThree);\n        case \"ooo\":\n          return intUnit(three);\n        // time\n        case \"HH\":\n          return intUnit(two);\n        case \"H\":\n          return intUnit(oneOrTwo);\n        case \"hh\":\n          return intUnit(two);\n        case \"h\":\n          return intUnit(oneOrTwo);\n        case \"mm\":\n          return intUnit(two);\n        case \"m\":\n          return intUnit(oneOrTwo);\n        case \"q\":\n          return intUnit(oneOrTwo);\n        case \"qq\":\n          return intUnit(two);\n        case \"s\":\n          return intUnit(oneOrTwo);\n        case \"ss\":\n          return intUnit(two);\n        case \"S\":\n          return intUnit(oneToThree);\n        case \"SSS\":\n          return intUnit(three);\n        case \"u\":\n          return simple(oneToNine);\n        case \"uu\":\n          return simple(oneOrTwo);\n        case \"uuu\":\n          return intUnit(one);\n        // meridiem\n        case \"a\":\n          return oneOf(loc.meridiems(), 0);\n        // weekYear (k)\n        case \"kkkk\":\n          return intUnit(four);\n        case \"kk\":\n          return intUnit(twoToFour, untruncateYear);\n        // weekNumber (W)\n        case \"W\":\n          return intUnit(oneOrTwo);\n        case \"WW\":\n          return intUnit(two);\n        // weekdays\n        case \"E\":\n        case \"c\":\n          return intUnit(one);\n        case \"EEE\":\n          return oneOf(loc.weekdays(\"short\", false, false), 1);\n        case \"EEEE\":\n          return oneOf(loc.weekdays(\"long\", false, false), 1);\n        case \"ccc\":\n          return oneOf(loc.weekdays(\"short\", true, false), 1);\n        case \"cccc\":\n          return oneOf(loc.weekdays(\"long\", true, false), 1);\n        // offset/zone\n        case \"Z\":\n        case \"ZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`), 2);\n        case \"ZZZ\":\n          return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`), 2);\n        // we don't support ZZZZ (PST) or ZZZZZ (Pacific Standard Time) in parsing\n        // because we don't have any way to figure out what they are\n        case \"z\":\n          return simple(/[a-z_+-/]{1,256}?/i);\n        default:\n          return literal(t);\n      }\n    };\n\n  const unit = unitate(token) || {\n    invalidReason: MISSING_FTP,\n  };\n\n  unit.token = token;\n\n  return unit;\n}\n\nconst partTypeStyleToTokenVal = {\n  year: {\n    \"2-digit\": \"yy\",\n    numeric: \"yyyyy\",\n  },\n  month: {\n    numeric: \"M\",\n    \"2-digit\": \"MM\",\n    short: \"MMM\",\n    long: \"MMMM\",\n  },\n  day: {\n    numeric: \"d\",\n    \"2-digit\": \"dd\",\n  },\n  weekday: {\n    short: \"EEE\",\n    long: \"EEEE\",\n  },\n  dayperiod: \"a\",\n  dayPeriod: \"a\",\n  hour: {\n    numeric: \"h\",\n    \"2-digit\": \"hh\",\n  },\n  minute: {\n    numeric: \"m\",\n    \"2-digit\": \"mm\",\n  },\n  second: {\n    numeric: \"s\",\n    \"2-digit\": \"ss\",\n  },\n};\n\nfunction tokenForPart(part, locale, formatOpts) {\n  const { type, value } = part;\n\n  if (type === \"literal\") {\n    return {\n      literal: true,\n      val: value,\n    };\n  }\n\n  const style = formatOpts[type];\n\n  let val = partTypeStyleToTokenVal[type];\n  if (typeof val === \"object\") {\n    val = val[style];\n  }\n\n  if (val) {\n    return {\n      literal: false,\n      val,\n    };\n  }\n\n  return undefined;\n}\n\nfunction buildRegex(units) {\n  const re = units.map((u) => u.regex).reduce((f, r) => `${f}(${r.source})`, \"\");\n  return [`^${re}$`, units];\n}\n\nfunction match(input, regex, handlers) {\n  const matches = input.match(regex);\n\n  if (matches) {\n    const all = {};\n    let matchIndex = 1;\n    for (const i in handlers) {\n      if (hasOwnProperty(handlers, i)) {\n        const h = handlers[i],\n          groups = h.groups ? h.groups + 1 : 1;\n        if (!h.literal && h.token) {\n          all[h.token.val[0]] = h.deser(matches.slice(matchIndex, matchIndex + groups));\n        }\n        matchIndex += groups;\n      }\n    }\n    return [matches, all];\n  } else {\n    return [matches, {}];\n  }\n}\n\nfunction dateTimeFromMatches(matches) {\n  const toField = (token) => {\n    switch (token) {\n      case \"S\":\n        return \"millisecond\";\n      case \"s\":\n        return \"second\";\n      case \"m\":\n        return \"minute\";\n      case \"h\":\n      case \"H\":\n        return \"hour\";\n      case \"d\":\n        return \"day\";\n      case \"o\":\n        return \"ordinal\";\n      case \"L\":\n      case \"M\":\n        return \"month\";\n      case \"y\":\n        return \"year\";\n      case \"E\":\n      case \"c\":\n        return \"weekday\";\n      case \"W\":\n        return \"weekNumber\";\n      case \"k\":\n        return \"weekYear\";\n      case \"q\":\n        return \"quarter\";\n      default:\n        return null;\n    }\n  };\n\n  let zone;\n  if (!isUndefined(matches.Z)) {\n    zone = new FixedOffsetZone(matches.Z);\n  } else if (!isUndefined(matches.z)) {\n    zone = IANAZone.create(matches.z);\n  } else {\n    zone = null;\n  }\n\n  if (!isUndefined(matches.q)) {\n    matches.M = (matches.q - 1) * 3 + 1;\n  }\n\n  if (!isUndefined(matches.h)) {\n    if (matches.h < 12 && matches.a === 1) {\n      matches.h += 12;\n    } else if (matches.h === 12 && matches.a === 0) {\n      matches.h = 0;\n    }\n  }\n\n  if (matches.G === 0 && matches.y) {\n    matches.y = -matches.y;\n  }\n\n  if (!isUndefined(matches.u)) {\n    matches.S = parseMillis(matches.u);\n  }\n\n  const vals = Object.keys(matches).reduce((r, k) => {\n    const f = toField(k);\n    if (f) {\n      r[f] = matches[k];\n    }\n\n    return r;\n  }, {});\n\n  return [vals, zone];\n}\n\nlet dummyDateTimeCache = null;\n\nfunction getDummyDateTime() {\n  if (!dummyDateTimeCache) {\n    dummyDateTimeCache = DateTime.fromMillis(1555555555555);\n  }\n\n  return dummyDateTimeCache;\n}\n\nfunction maybeExpandMacroToken(token, locale) {\n  if (token.literal) {\n    return token;\n  }\n\n  const formatOpts = Formatter.macroTokenToFormatOpts(token.val);\n\n  if (!formatOpts) {\n    return token;\n  }\n\n  const formatter = Formatter.create(locale, formatOpts);\n  const parts = formatter.formatDateTimeParts(getDummyDateTime());\n\n  const tokens = parts.map((p) => tokenForPart(p, locale, formatOpts));\n\n  if (tokens.includes(undefined)) {\n    return token;\n  }\n\n  return tokens;\n}\n\nfunction expandMacroTokens(tokens, locale) {\n  return Array.prototype.concat(...tokens.map((t) => maybeExpandMacroToken(t, locale)));\n}\n\n/**\n * @private\n */\n\nexport function explainFromTokens(locale, input, format) {\n  const tokens = expandMacroTokens(Formatter.parseFormat(format), locale),\n    units = tokens.map((t) => unitForToken(t, locale)),\n    disqualifyingUnit = units.find((t) => t.invalidReason);\n\n  if (disqualifyingUnit) {\n    return { input, tokens, invalidReason: disqualifyingUnit.invalidReason };\n  } else {\n    const [regexString, handlers] = buildRegex(units),\n      regex = RegExp(regexString, \"i\"),\n      [rawMatches, matches] = match(input, regex, handlers),\n      [result, zone] = matches ? dateTimeFromMatches(matches) : [null, null];\n    if (hasOwnProperty(matches, \"a\") && hasOwnProperty(matches, \"H\")) {\n      throw new ConflictingSpecificationError(\n        \"Can't include meridiem when specifying 24-hour format\"\n      );\n    }\n    return { input, tokens, regex, rawMatches, matches, result, zone };\n  }\n}\n\nexport function parseFromTokens(locale, input, format) {\n  const { result, zone, invalidReason } = explainFromTokens(locale, input, format);\n  return [result, zone, invalidReason];\n}\n", "import {\n  integerBetween,\n  isLeapYear,\n  timeObject,\n  daysInYear,\n  daysInMonth,\n  weeksInWeekYear,\n  isInteger,\n} from \"./util.js\";\nimport Invalid from \"./invalid.js\";\n\nconst nonLeapLadder = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],\n  leapLadder = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];\n\nfunction unitOutOfRange(unit, value) {\n  return new Invalid(\n    \"unit out of range\",\n    `you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`\n  );\n}\n\nfunction dayOfWeek(year, month, day) {\n  const js = new Date(Date.UTC(year, month - 1, day)).getUTCDay();\n  return js === 0 ? 7 : js;\n}\n\nfunction computeOrdinal(year, month, day) {\n  return day + (isLeapYear(year) ? leapLadder : nonLeapLadder)[month - 1];\n}\n\nfunction uncomputeOrdinal(year, ordinal) {\n  const table = isLeapYear(year) ? leapLadder : nonLeapLadder,\n    month0 = table.findIndex((i) => i < ordinal),\n    day = ordinal - table[month0];\n  return { month: month0 + 1, day };\n}\n\n/**\n * @private\n */\n\nexport function gregorianToWeek(gregObj) {\n  const { year, month, day } = gregObj,\n    ordinal = computeOrdinal(year, month, day),\n    weekday = dayOfWeek(year, month, day);\n\n  let weekNumber = Math.floor((ordinal - weekday + 10) / 7),\n    weekYear;\n\n  if (weekNumber < 1) {\n    weekYear = year - 1;\n    weekNumber = weeksInWeekYear(weekYear);\n  } else if (weekNumber > weeksInWeekYear(year)) {\n    weekYear = year + 1;\n    weekNumber = 1;\n  } else {\n    weekYear = year;\n  }\n\n  return { weekYear, weekNumber, weekday, ...timeObject(gregObj) };\n}\n\nexport function weekToGregorian(weekData) {\n  const { weekYear, weekNumber, weekday } = weekData,\n    weekdayOfJan4 = dayOfWeek(weekYear, 1, 4),\n    yearInDays = daysInYear(weekYear);\n\n  let ordinal = weekNumber * 7 + weekday - weekdayOfJan4 - 3,\n    year;\n\n  if (ordinal < 1) {\n    year = weekYear - 1;\n    ordinal += daysInYear(year);\n  } else if (ordinal > yearInDays) {\n    year = weekYear + 1;\n    ordinal -= daysInYear(weekYear);\n  } else {\n    year = weekYear;\n  }\n\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(weekData) };\n}\n\nexport function gregorianToOrdinal(gregData) {\n  const { year, month, day } = gregData;\n  const ordinal = computeOrdinal(year, month, day);\n  return { year, ordinal, ...timeObject(gregData) };\n}\n\nexport function ordinalToGregorian(ordinalData) {\n  const { year, ordinal } = ordinalData;\n  const { month, day } = uncomputeOrdinal(year, ordinal);\n  return { year, month, day, ...timeObject(ordinalData) };\n}\n\nexport function hasInvalidWeekData(obj) {\n  const validYear = isInteger(obj.weekYear),\n    validWeek = integerBetween(obj.weekNumber, 1, weeksInWeekYear(obj.weekYear)),\n    validWeekday = integerBetween(obj.weekday, 1, 7);\n\n  if (!validYear) {\n    return unitOutOfRange(\"weekYear\", obj.weekYear);\n  } else if (!validWeek) {\n    return unitOutOfRange(\"week\", obj.week);\n  } else if (!validWeekday) {\n    return unitOutOfRange(\"weekday\", obj.weekday);\n  } else return false;\n}\n\nexport function hasInvalidOrdinalData(obj) {\n  const validYear = isInteger(obj.year),\n    validOrdinal = integerBetween(obj.ordinal, 1, daysInYear(obj.year));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validOrdinal) {\n    return unitOutOfRange(\"ordinal\", obj.ordinal);\n  } else return false;\n}\n\nexport function hasInvalidGregorianData(obj) {\n  const validYear = isInteger(obj.year),\n    validMonth = integerBetween(obj.month, 1, 12),\n    validDay = integerBetween(obj.day, 1, daysInMonth(obj.year, obj.month));\n\n  if (!validYear) {\n    return unitOutOfRange(\"year\", obj.year);\n  } else if (!validMonth) {\n    return unitOutOfRange(\"month\", obj.month);\n  } else if (!validDay) {\n    return unitOutOfRange(\"day\", obj.day);\n  } else return false;\n}\n\nexport function hasInvalidTimeData(obj) {\n  const { hour, minute, second, millisecond } = obj;\n  const validHour =\n      integerBetween(hour, 0, 23) ||\n      (hour === 24 && minute === 0 && second === 0 && millisecond === 0),\n    validMinute = integerBetween(minute, 0, 59),\n    validSecond = integerBetween(second, 0, 59),\n    validMillisecond = integerBetween(millisecond, 0, 999);\n\n  if (!validHour) {\n    return unitOutOfRange(\"hour\", hour);\n  } else if (!validMinute) {\n    return unitOutOfRange(\"minute\", minute);\n  } else if (!validSecond) {\n    return unitOutOfRange(\"second\", second);\n  } else if (!validMillisecond) {\n    return unitOutOfRange(\"millisecond\", millisecond);\n  } else return false;\n}\n", "import Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Settings from \"./settings.js\";\nimport Info from \"./info.js\";\nimport Formatter from \"./impl/formatter.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport Locale from \"./impl/locale.js\";\nimport {\n  isUndefined,\n  maybeArray,\n  isDate,\n  isNumber,\n  bestBy,\n  daysInMonth,\n  daysInYear,\n  isLeapYear,\n  weeksInWeekYear,\n  normalizeObject,\n  roundTo,\n  objToLocalTS,\n} from \"./impl/util.js\";\nimport { normalizeZone } from \"./impl/zoneUtil.js\";\nimport diff from \"./impl/diff.js\";\nimport { parseRFC2822Date, parseISODate, parseHTTPDate, parseSQL } from \"./impl/regexParser.js\";\nimport { parseFromTokens, explainFromTokens } from \"./impl/tokenParser.js\";\nimport {\n  gregorianToWeek,\n  weekToGregorian,\n  gregorianToOrdinal,\n  ordinalToGregorian,\n  hasInvalidGregorianData,\n  hasInvalidWeekData,\n  hasInvalidOrdinalData,\n  hasInvalidTimeData,\n} from \"./impl/conversions.js\";\nimport * as Formats from \"./impl/formats.js\";\nimport {\n  InvalidArgumentError,\n  ConflictingSpecificationError,\n  InvalidUnitError,\n  InvalidDateTimeError,\n} from \"./errors.js\";\nimport Invalid from \"./impl/invalid.js\";\n\nconst INVALID = \"Invalid DateTime\";\nconst MAX_DATE = 8.64e15;\n\nfunction unsupportedZone(zone) {\n  return new Invalid(\"unsupported zone\", `the zone \"${zone.name}\" is not supported`);\n}\n\n// we cache week data on the DT object and this intermediates the cache\nfunction possiblyCachedWeekData(dt) {\n  if (dt.weekData === null) {\n    dt.weekData = gregorianToWeek(dt.c);\n  }\n  return dt.weekData;\n}\n\n// clone really means, \"make a new object with these modifications\". all \"setters\" really use this\n// to create a new object while only changing some of the properties\nfunction clone(inst, alts) {\n  const current = {\n    ts: inst.ts,\n    zone: inst.zone,\n    c: inst.c,\n    o: inst.o,\n    loc: inst.loc,\n    invalid: inst.invalid,\n  };\n  return new DateTime({ ...current, ...alts, old: current });\n}\n\n// find the right offset a given local time. The o input is our guess, which determines which\n// offset we'll pick in ambiguous cases (e.g. there are two 3 AMs b/c Fallback DST)\nfunction fixOffset(localTS, o, tz) {\n  // Our UTC time is just a guess because our offset is just a guess\n  let utcGuess = localTS - o * 60 * 1000;\n\n  // Test whether the zone matches the offset for this ts\n  const o2 = tz.offset(utcGuess);\n\n  // If so, offset didn't change and we're done\n  if (o === o2) {\n    return [utcGuess, o];\n  }\n\n  // If not, change the ts by the difference in the offset\n  utcGuess -= (o2 - o) * 60 * 1000;\n\n  // If that gives us the local time we want, we're done\n  const o3 = tz.offset(utcGuess);\n  if (o2 === o3) {\n    return [utcGuess, o2];\n  }\n\n  // If it's different, we're in a hole time. The offset has changed, but the we don't adjust the time\n  return [localTS - Math.min(o2, o3) * 60 * 1000, Math.max(o2, o3)];\n}\n\n// convert an epoch timestamp into a calendar object with the given offset\nfunction tsToObj(ts, offset) {\n  ts += offset * 60 * 1000;\n\n  const d = new Date(ts);\n\n  return {\n    year: d.getUTCFullYear(),\n    month: d.getUTCMonth() + 1,\n    day: d.getUTCDate(),\n    hour: d.getUTCHours(),\n    minute: d.getUTCMinutes(),\n    second: d.getUTCSeconds(),\n    millisecond: d.getUTCMilliseconds(),\n  };\n}\n\n// convert a calendar object to a epoch timestamp\nfunction objToTS(obj, offset, zone) {\n  return fixOffset(objToLocalTS(obj), offset, zone);\n}\n\n// create a new DT instance by adding a duration, adjusting for DSTs\nfunction adjustTime(inst, dur) {\n  const oPre = inst.o,\n    year = inst.c.year + Math.trunc(dur.years),\n    month = inst.c.month + Math.trunc(dur.months) + Math.trunc(dur.quarters) * 3,\n    c = {\n      ...inst.c,\n      year,\n      month,\n      day:\n        Math.min(inst.c.day, daysInMonth(year, month)) +\n        Math.trunc(dur.days) +\n        Math.trunc(dur.weeks) * 7,\n    },\n    millisToAdd = Duration.fromObject({\n      years: dur.years - Math.trunc(dur.years),\n      quarters: dur.quarters - Math.trunc(dur.quarters),\n      months: dur.months - Math.trunc(dur.months),\n      weeks: dur.weeks - Math.trunc(dur.weeks),\n      days: dur.days - Math.trunc(dur.days),\n      hours: dur.hours,\n      minutes: dur.minutes,\n      seconds: dur.seconds,\n      milliseconds: dur.milliseconds,\n    }).as(\"milliseconds\"),\n    localTS = objToLocalTS(c);\n\n  let [ts, o] = fixOffset(localTS, oPre, inst.zone);\n\n  if (millisToAdd !== 0) {\n    ts += millisToAdd;\n    // that could have changed the offset by going over a DST, but we want to keep the ts the same\n    o = inst.zone.offset(ts);\n  }\n\n  return { ts, o };\n}\n\n// helper useful in turning the results of parsing into real dates\n// by handling the zone options\nfunction parseDataToDateTime(parsed, parsedZone, opts, format, text) {\n  const { setZone, zone } = opts;\n  if (parsed && Object.keys(parsed).length !== 0) {\n    const interpretationZone = parsedZone || zone,\n      inst = DateTime.fromObject(parsed, {\n        ...opts,\n        zone: interpretationZone,\n      });\n    return setZone ? inst : inst.setZone(zone);\n  } else {\n    return DateTime.invalid(\n      new Invalid(\"unparsable\", `the input \"${text}\" can't be parsed as ${format}`)\n    );\n  }\n}\n\n// if you want to output a technical format (e.g. RFC 2822), this helper\n// helps handle the details\nfunction toTechFormat(dt, format, allowZ = true) {\n  return dt.isValid\n    ? Formatter.create(Locale.create(\"en-US\"), {\n        allowZ,\n        forceSimple: true,\n      }).formatDateTimeFromString(dt, format)\n    : null;\n}\n\n// technical time formats (e.g. the time part of ISO 8601), take some options\n// and this commonizes their handling\nfunction toTechTimeFormat(\n  dt,\n  {\n    suppressSeconds = false,\n    suppressMilliseconds = false,\n    includeOffset,\n    includePrefix = false,\n    includeZone = false,\n    spaceZone = false,\n    format = \"extended\",\n  }\n) {\n  let fmt = format === \"basic\" ? \"HHmm\" : \"HH:mm\";\n\n  if (!suppressSeconds || dt.second !== 0 || dt.millisecond !== 0) {\n    fmt += format === \"basic\" ? \"ss\" : \":ss\";\n    if (!suppressMilliseconds || dt.millisecond !== 0) {\n      fmt += \".SSS\";\n    }\n  }\n\n  if ((includeZone || includeOffset) && spaceZone) {\n    fmt += \" \";\n  }\n\n  if (includeZone) {\n    fmt += \"z\";\n  } else if (includeOffset) {\n    fmt += format === \"basic\" ? \"ZZZ\" : \"ZZ\";\n  }\n\n  let str = toTechFormat(dt, fmt);\n\n  if (includePrefix) {\n    str = \"T\" + str;\n  }\n\n  return str;\n}\n\n// defaults for unspecified units in the supported calendars\nconst defaultUnitValues = {\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultWeekUnitValues = {\n    weekNumber: 1,\n    weekday: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  },\n  defaultOrdinalUnitValues = {\n    ordinal: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n  };\n\n// Units in the supported calendars, sorted by bigness\nconst orderedUnits = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\", \"millisecond\"],\n  orderedWeekUnits = [\n    \"weekYear\",\n    \"weekNumber\",\n    \"weekday\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"millisecond\",\n  ],\n  orderedOrdinalUnits = [\"year\", \"ordinal\", \"hour\", \"minute\", \"second\", \"millisecond\"];\n\n// standardize case and plurality in units\nfunction normalizeUnit(unit) {\n  const normalized = {\n    year: \"year\",\n    years: \"year\",\n    month: \"month\",\n    months: \"month\",\n    day: \"day\",\n    days: \"day\",\n    hour: \"hour\",\n    hours: \"hour\",\n    minute: \"minute\",\n    minutes: \"minute\",\n    quarter: \"quarter\",\n    quarters: \"quarter\",\n    second: \"second\",\n    seconds: \"second\",\n    millisecond: \"millisecond\",\n    milliseconds: \"millisecond\",\n    weekday: \"weekday\",\n    weekdays: \"weekday\",\n    weeknumber: \"weekNumber\",\n    weeksnumber: \"weekNumber\",\n    weeknumbers: \"weekNumber\",\n    weekyear: \"weekYear\",\n    weekyears: \"weekYear\",\n    ordinal: \"ordinal\",\n  }[unit.toLowerCase()];\n\n  if (!normalized) throw new InvalidUnitError(unit);\n\n  return normalized;\n}\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\n\n// this is a dumbed down version of fromObject() that runs about 60% faster\n// but doesn't do any validation, makes a bunch of assumptions about what units\n// are present, and so on.\nfunction quickDT(obj, opts) {\n  const zone = normalizeZone(opts.zone, Settings.defaultZone),\n    loc = Locale.fromObject(opts),\n    tsNow = Settings.now();\n\n  let ts, o;\n\n  // assume we have the higher-order units\n  if (!isUndefined(obj.year)) {\n    for (const u of orderedUnits) {\n      if (isUndefined(obj[u])) {\n        obj[u] = defaultUnitValues[u];\n      }\n    }\n\n    const invalid = hasInvalidGregorianData(obj) || hasInvalidTimeData(obj);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    const offsetProvis = zone.offset(tsNow);\n    [ts, o] = objToTS(obj, offsetProvis, zone);\n  } else {\n    ts = tsNow;\n  }\n\n  return new DateTime({ ts, zone, loc, o });\n}\n\nfunction diffRelative(start, end, opts) {\n  const round = isUndefined(opts.round) ? true : opts.round,\n    format = (c, unit) => {\n      c = roundTo(c, round || opts.calendary ? 0 : 2, true);\n      const formatter = end.loc.clone(opts).relFormatter(opts);\n      return formatter.format(c, unit);\n    },\n    differ = (unit) => {\n      if (opts.calendary) {\n        if (!end.hasSame(start, unit)) {\n          return end.startOf(unit).diff(start.startOf(unit), unit).get(unit);\n        } else return 0;\n      } else {\n        return end.diff(start, unit).get(unit);\n      }\n    };\n\n  if (opts.unit) {\n    return format(differ(opts.unit), opts.unit);\n  }\n\n  for (const unit of opts.units) {\n    const count = differ(unit);\n    if (Math.abs(count) >= 1) {\n      return format(count, unit);\n    }\n  }\n  return format(start > end ? -0 : 0, opts.units[opts.units.length - 1]);\n}\n\nfunction lastOpts(argList) {\n  let opts = {},\n    args;\n  if (argList.length > 0 && typeof argList[argList.length - 1] === \"object\") {\n    opts = argList[argList.length - 1];\n    args = Array.from(argList).slice(0, argList.length - 1);\n  } else {\n    args = Array.from(argList);\n  }\n  return [opts, args];\n}\n\n/**\n * A DateTime is an immutable data structure representing a specific date and time and accompanying methods. It contains class and instance methods for creating, parsing, interrogating, transforming, and formatting them.\n *\n * A DateTime comprises of:\n * * A timestamp. Each DateTime instance refers to a specific millisecond of the Unix epoch.\n * * A time zone. Each instance is considered in the context of a specific zone (by default the local system's zone).\n * * Configuration properties that effect how output strings are formatted, such as `locale`, `numberingSystem`, and `outputCalendar`.\n *\n * Here is a brief overview of the most commonly used functionality it provides:\n *\n * * **Creation**: To create a DateTime from its components, use one of its factory class methods: {@link DateTime#local}, {@link DateTime#utc}, and (most flexibly) {@link DateTime#fromObject}. To create one from a standard string format, use {@link DateTime#fromISO}, {@link DateTime#fromHTTP}, and {@link DateTime#fromRFC2822}. To create one from a custom string format, use {@link DateTime#fromFormat}. To create one from a native JS date, use {@link DateTime#fromJSDate}.\n * * **Gregorian calendar and time**: To examine the Gregorian properties of a DateTime individually (i.e as opposed to collectively through {@link DateTime#toObject}), use the {@link DateTime#year}, {@link DateTime#month},\n * {@link DateTime#day}, {@link DateTime#hour}, {@link DateTime#minute}, {@link DateTime#second}, {@link DateTime#millisecond} accessors.\n * * **Week calendar**: For ISO week calendar attributes, see the {@link DateTime#weekYear}, {@link DateTime#weekNumber}, and {@link DateTime#weekday} accessors.\n * * **Configuration** See the {@link DateTime#locale} and {@link DateTime#numberingSystem} accessors.\n * * **Transformation**: To transform the DateTime into other DateTimes, use {@link DateTime#set}, {@link DateTime#reconfigure}, {@link DateTime#setZone}, {@link DateTime#setLocale}, {@link DateTime.plus}, {@link DateTime#minus}, {@link DateTime#endOf}, {@link DateTime#startOf}, {@link DateTime#toUTC}, and {@link DateTime#toLocal}.\n * * **Output**: To convert the DateTime to other representations, use the {@link DateTime#toRelative}, {@link DateTime#toRelativeCalendar}, {@link DateTime#toJSON}, {@link DateTime#toISO}, {@link DateTime#toHTTP}, {@link DateTime#toObject}, {@link DateTime#toRFC2822}, {@link DateTime#toString}, {@link DateTime#toLocaleString}, {@link DateTime#toFormat}, {@link DateTime#toMillis} and {@link DateTime#toJSDate}.\n *\n * There's plenty others documented below. In addition, for more information on subtler topics like internationalization, time zones, alternative calendars, validity, and so on, see the external documentation.\n */\nexport default class DateTime {\n  /**\n   * @access private\n   */\n  constructor(config) {\n    const zone = config.zone || Settings.defaultZone;\n\n    let invalid =\n      config.invalid ||\n      (Number.isNaN(config.ts) ? new Invalid(\"invalid input\") : null) ||\n      (!zone.isValid ? unsupportedZone(zone) : null);\n    /**\n     * @access private\n     */\n    this.ts = isUndefined(config.ts) ? Settings.now() : config.ts;\n\n    let c = null,\n      o = null;\n    if (!invalid) {\n      const unchanged = config.old && config.old.ts === this.ts && config.old.zone.equals(zone);\n\n      if (unchanged) {\n        [c, o] = [config.old.c, config.old.o];\n      } else {\n        const ot = zone.offset(this.ts);\n        c = tsToObj(this.ts, ot);\n        invalid = Number.isNaN(c.year) ? new Invalid(\"invalid input\") : null;\n        c = invalid ? null : c;\n        o = invalid ? null : ot;\n      }\n    }\n\n    /**\n     * @access private\n     */\n    this._zone = zone;\n    /**\n     * @access private\n     */\n    this.loc = config.loc || Locale.create();\n    /**\n     * @access private\n     */\n    this.invalid = invalid;\n    /**\n     * @access private\n     */\n    this.weekData = null;\n    /**\n     * @access private\n     */\n    this.c = c;\n    /**\n     * @access private\n     */\n    this.o = o;\n    /**\n     * @access private\n     */\n    this.isLuxonDateTime = true;\n  }\n\n  // CONSTRUCT\n\n  /**\n   * Create a DateTime for the current instant, in the system's time zone.\n   *\n   * Use Settings to override these default values if needed.\n   * @example DateTime.now().toISO() //~> now in the ISO format\n   * @return {DateTime}\n   */\n  static now() {\n    return new DateTime({});\n  }\n\n  /**\n   * Create a local DateTime\n   * @param {number} [year] - The calendar year. If omitted (as in, call `local()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month, 1-indexed\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @example DateTime.local()                                  //~> now\n   * @example DateTime.local({ zone: \"America/New_York\" })      //~> now, in US east coast time\n   * @example DateTime.local(2017)                              //~> 2017-01-01T00:00:00\n   * @example DateTime.local(2017, 3)                           //~> 2017-03-01T00:00:00\n   * @example DateTime.local(2017, 3, 12, { locale: \"fr\" })     //~> 2017-03-12T00:00:00, with a French locale\n   * @example DateTime.local(2017, 3, 12, 5)                    //~> 2017-03-12T05:00:00\n   * @example DateTime.local(2017, 3, 12, 5, { zone: \"utc\" })   //~> 2017-03-12T05:00:00, in UTC\n   * @example DateTime.local(2017, 3, 12, 5, 45)                //~> 2017-03-12T05:45:00\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10)            //~> 2017-03-12T05:45:10\n   * @example DateTime.local(2017, 3, 12, 5, 45, 10, 765)       //~> 2017-03-12T05:45:10.765\n   * @return {DateTime}\n   */\n  static local() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime in UTC\n   * @param {number} [year] - The calendar year. If omitted (as in, call `utc()` with no arguments), the current time will be used\n   * @param {number} [month=1] - The month, 1-indexed\n   * @param {number} [day=1] - The day of the month\n   * @param {number} [hour=0] - The hour of the day, in 24-hour time\n   * @param {number} [minute=0] - The minute of the hour, meaning a number between 0 and 59\n   * @param {number} [second=0] - The second of the minute, meaning a number between 0 and 59\n   * @param {number} [millisecond=0] - The millisecond of the second, meaning a number between 0 and 999\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} [options.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [options.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.utc()                                              //~> now\n   * @example DateTime.utc(2017)                                          //~> 2017-01-01T00:00:00Z\n   * @example DateTime.utc(2017, 3)                                       //~> 2017-03-01T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12)                                   //~> 2017-03-12T00:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5)                                //~> 2017-03-12T05:00:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45)                            //~> 2017-03-12T05:45:00Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, { locale: \"fr\" })          //~> 2017-03-12T05:45:00Z with a French locale\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10)                        //~> 2017-03-12T05:45:10Z\n   * @example DateTime.utc(2017, 3, 12, 5, 45, 10, 765, { locale: \"fr\" }) //~> 2017-03-12T05:45:10.765Z with a French locale\n   * @return {DateTime}\n   */\n  static utc() {\n    const [opts, args] = lastOpts(arguments),\n      [year, month, day, hour, minute, second, millisecond] = args;\n\n    opts.zone = FixedOffsetZone.utcInstance;\n    return quickDT({ year, month, day, hour, minute, second, millisecond }, opts);\n  }\n\n  /**\n   * Create a DateTime from a JavaScript Date object. Uses the default zone.\n   * @param {Date} date - a JavaScript Date object\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @return {DateTime}\n   */\n  static fromJSDate(date, options = {}) {\n    const ts = isDate(date) ? date.valueOf() : NaN;\n    if (Number.isNaN(ts)) {\n      return DateTime.invalid(\"invalid input\");\n    }\n\n    const zoneToUse = normalizeZone(options.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    return new DateTime({\n      ts: ts,\n      zone: zoneToUse,\n      loc: Locale.fromObject(options),\n    });\n  }\n\n  /**\n   * Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} milliseconds - a number of milliseconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromMillis(milliseconds, options = {}) {\n    if (!isNumber(milliseconds)) {\n      throw new InvalidArgumentError(\n        `fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`\n      );\n    } else if (milliseconds < -MAX_DATE || milliseconds > MAX_DATE) {\n      // this isn't perfect because because we can still end up out of range because of additional shifting, but it's a start\n      return DateTime.invalid(\"Timestamp out of range\");\n    } else {\n      return new DateTime({\n        ts: milliseconds,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone.\n   * @param {number} seconds - a number of seconds since 1970 UTC\n   * @param {Object} options - configuration options for the DateTime\n   * @param {string|Zone} [options.zone='local'] - the zone to place the DateTime into\n   * @param {string} [options.locale] - a locale to set on the resulting DateTime instance\n   * @param {string} options.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} options.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromSeconds(seconds, options = {}) {\n    if (!isNumber(seconds)) {\n      throw new InvalidArgumentError(\"fromSeconds requires a numerical input\");\n    } else {\n      return new DateTime({\n        ts: seconds * 1000,\n        zone: normalizeZone(options.zone, Settings.defaultZone),\n        loc: Locale.fromObject(options),\n      });\n    }\n  }\n\n  /**\n   * Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults.\n   * @param {Object} obj - the object to create the DateTime from\n   * @param {number} obj.year - a year, such as 1987\n   * @param {number} obj.month - a month, 1-12\n   * @param {number} obj.day - a day of the month, 1-31, depending on the month\n   * @param {number} obj.ordinal - day of the year, 1-365 or 366\n   * @param {number} obj.weekYear - an ISO week year\n   * @param {number} obj.weekNumber - an ISO week number, between 1 and 52 or 53, depending on the year\n   * @param {number} obj.weekday - an ISO weekday, 1-7, where 1 is Monday and 7 is Sunday\n   * @param {number} obj.hour - hour of the day, 0-23\n   * @param {number} obj.minute - minute of the hour, 0-59\n   * @param {number} obj.second - second of the minute, 0-59\n   * @param {number} obj.millisecond - millisecond of the second, 0-999\n   * @param {Object} opts - options for creating this DateTime\n   * @param {string|Zone} [opts.zone='local'] - interpret the numbers in the context of a particular zone. Can take any value taken as the first argument to setZone()\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromObject({ year: 1982, month: 5, day: 25}).toISODate() //=> '1982-05-25'\n   * @example DateTime.fromObject({ year: 1982 }).toISODate() //=> '1982-01-01'\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }) //~> today at 10:26:06\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'utc' }),\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'local' })\n   * @example DateTime.fromObject({ hour: 10, minute: 26, second: 6 }, { zone: 'America/New_York' })\n   * @example DateTime.fromObject({ weekYear: 2016, weekNumber: 2, weekday: 3 }).toISODate() //=> '2016-01-13'\n   * @return {DateTime}\n   */\n  static fromObject(obj, opts = {}) {\n    obj = obj || {};\n    const zoneToUse = normalizeZone(opts.zone, Settings.defaultZone);\n    if (!zoneToUse.isValid) {\n      return DateTime.invalid(unsupportedZone(zoneToUse));\n    }\n\n    const tsNow = Settings.now(),\n      offsetProvis = zoneToUse.offset(tsNow),\n      normalized = normalizeObject(obj, normalizeUnit),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber,\n      loc = Locale.fromObject(opts);\n\n    // cases:\n    // just a weekday -> this week's instance of that weekday, no worries\n    // (gregorian data or ordinal) + (weekYear or weekNumber) -> error\n    // (gregorian month or day) + ordinal -> error\n    // otherwise just use weeks or ordinals or gregorian, depending on what's specified\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    const useWeekData = definiteWeekDef || (normalized.weekday && !containsGregor);\n\n    // configure ourselves to deal with gregorian dates or week stuff\n    let units,\n      defaultValues,\n      objNow = tsToObj(tsNow, offsetProvis);\n    if (useWeekData) {\n      units = orderedWeekUnits;\n      defaultValues = defaultWeekUnitValues;\n      objNow = gregorianToWeek(objNow);\n    } else if (containsOrdinal) {\n      units = orderedOrdinalUnits;\n      defaultValues = defaultOrdinalUnitValues;\n      objNow = gregorianToOrdinal(objNow);\n    } else {\n      units = orderedUnits;\n      defaultValues = defaultUnitValues;\n    }\n\n    // set default values for missing stuff\n    let foundFirst = false;\n    for (const u of units) {\n      const v = normalized[u];\n      if (!isUndefined(v)) {\n        foundFirst = true;\n      } else if (foundFirst) {\n        normalized[u] = defaultValues[u];\n      } else {\n        normalized[u] = objNow[u];\n      }\n    }\n\n    // make sure the values we have are in range\n    const higherOrderInvalid = useWeekData\n        ? hasInvalidWeekData(normalized)\n        : containsOrdinal\n        ? hasInvalidOrdinalData(normalized)\n        : hasInvalidGregorianData(normalized),\n      invalid = higherOrderInvalid || hasInvalidTimeData(normalized);\n\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    }\n\n    // compute the actual time\n    const gregorian = useWeekData\n        ? weekToGregorian(normalized)\n        : containsOrdinal\n        ? ordinalToGregorian(normalized)\n        : normalized,\n      [tsFinal, offsetFinal] = objToTS(gregorian, offsetProvis, zoneToUse),\n      inst = new DateTime({\n        ts: tsFinal,\n        zone: zoneToUse,\n        o: offsetFinal,\n        loc,\n      });\n\n    // gregorian data + weekday serves only to validate\n    if (normalized.weekday && containsGregor && obj.weekday !== inst.weekday) {\n      return DateTime.invalid(\n        \"mismatched weekday\",\n        `you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`\n      );\n    }\n\n    return inst;\n  }\n\n  /**\n   * Create a DateTime from an ISO 8601 string\n   * @param {string} text - the ISO string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the time to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} [opts.outputCalendar] - the output calendar to set on the resulting DateTime instance\n   * @param {string} [opts.numberingSystem] - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00')\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123+06:00', {setZone: true})\n   * @example DateTime.fromISO('2016-05-25T09:08:34.123', {zone: 'utc'})\n   * @example DateTime.fromISO('2016-W05-4')\n   * @return {DateTime}\n   */\n  static fromISO(text, opts = {}) {\n    const [vals, parsedZone] = parseISODate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"ISO 8601\", text);\n  }\n\n  /**\n   * Create a DateTime from an RFC 2822 string\n   * @param {string} text - the RFC 2822 string\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since the offset is always specified in the string itself, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with a fixed-offset zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23:12 GMT')\n   * @example DateTime.fromRFC2822('Fri, 25 Nov 2016 13:23:12 +0600')\n   * @example DateTime.fromRFC2822('25 Nov 2016 13:23 Z')\n   * @return {DateTime}\n   */\n  static fromRFC2822(text, opts = {}) {\n    const [vals, parsedZone] = parseRFC2822Date(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"RFC 2822\", text);\n  }\n\n  /**\n   * Create a DateTime from an HTTP header date\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @param {string} text - the HTTP header date\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - convert the time to this zone. Since HTTP dates are always in UTC, this has no effect on the interpretation of string, merely the zone the resulting DateTime is expressed in.\n   * @param {boolean} [opts.setZone=false] - override the zone with the fixed-offset zone specified in the string. For HTTP dates, this is always UTC, so this option is equivalent to setting the `zone` option to 'utc', but this option is included for consistency with similar methods.\n   * @param {string} [opts.locale='system's locale'] - a locale to set on the resulting DateTime instance\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @param {string} opts.numberingSystem - the numbering system to set on the resulting DateTime instance\n   * @example DateTime.fromHTTP('Sun, 06 Nov 1994 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sunday, 06-Nov-94 08:49:37 GMT')\n   * @example DateTime.fromHTTP('Sun Nov  6 08:49:37 1994')\n   * @return {DateTime}\n   */\n  static fromHTTP(text, opts = {}) {\n    const [vals, parsedZone] = parseHTTPDate(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"HTTP\", opts);\n  }\n\n  /**\n   * Create a DateTime from an input string and format string.\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/parsing?id=table-of-tokens).\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see the link below for the formats)\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @return {DateTime}\n   */\n  static fromFormat(text, fmt, opts = {}) {\n    if (isUndefined(text) || isUndefined(fmt)) {\n      throw new InvalidArgumentError(\"fromFormat requires an input string and a format\");\n    }\n\n    const { locale = null, numberingSystem = null } = opts,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      }),\n      [vals, parsedZone, invalid] = parseFromTokens(localeToUse, text, fmt);\n    if (invalid) {\n      return DateTime.invalid(invalid);\n    } else {\n      return parseDataToDateTime(vals, parsedZone, opts, `format ${fmt}`, text);\n    }\n  }\n\n  /**\n   * @deprecated use fromFormat instead\n   */\n  static fromString(text, fmt, opts = {}) {\n    return DateTime.fromFormat(text, fmt, opts);\n  }\n\n  /**\n   * Create a DateTime from a SQL date, time, or datetime\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale\n   * @param {string} text - the string to parse\n   * @param {Object} opts - options to affect the creation\n   * @param {string|Zone} [opts.zone='local'] - use this zone if no offset is specified in the input string itself. Will also convert the DateTime to this zone\n   * @param {boolean} [opts.setZone=false] - override the zone with a zone specified in the string itself, if it specifies one\n   * @param {string} [opts.locale='en-US'] - a locale string to use when parsing. Will also set the DateTime to this locale\n   * @param {string} opts.numberingSystem - the numbering system to use when parsing. Will also set the resulting DateTime to this numbering system\n   * @param {string} opts.outputCalendar - the output calendar to set on the resulting DateTime instance\n   * @example DateTime.fromSQL('2017-05-15')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342+06:00')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles')\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342 America/Los_Angeles', { setZone: true })\n   * @example DateTime.fromSQL('2017-05-15 09:12:34.342', { zone: 'America/Los_Angeles' })\n   * @example DateTime.fromSQL('09:12:34.342')\n   * @return {DateTime}\n   */\n  static fromSQL(text, opts = {}) {\n    const [vals, parsedZone] = parseSQL(text);\n    return parseDataToDateTime(vals, parsedZone, opts, \"SQL\", text);\n  }\n\n  /**\n   * Create an invalid DateTime.\n   * @param {string} reason - simple string of why this DateTime is invalid. Should not contain parameters or anything else data-dependent\n   * @param {string} [explanation=null] - longer explanation, may include parameters and other useful debugging information\n   * @return {DateTime}\n   */\n  static invalid(reason, explanation = null) {\n    if (!reason) {\n      throw new InvalidArgumentError(\"need to specify a reason the DateTime is invalid\");\n    }\n\n    const invalid = reason instanceof Invalid ? reason : new Invalid(reason, explanation);\n\n    if (Settings.throwOnInvalid) {\n      throw new InvalidDateTimeError(invalid);\n    } else {\n      return new DateTime({ invalid });\n    }\n  }\n\n  /**\n   * Check if an object is a DateTime. Works across context boundaries\n   * @param {object} o\n   * @return {boolean}\n   */\n  static isDateTime(o) {\n    return (o && o.isLuxonDateTime) || false;\n  }\n\n  // INFO\n\n  /**\n   * Get the value of unit.\n   * @param {string} unit - a unit such as 'minute' or 'day'\n   * @example DateTime.local(2017, 7, 4).get('month'); //=> 7\n   * @example DateTime.local(2017, 7, 4).get('day'); //=> 4\n   * @return {number}\n   */\n  get(unit) {\n    return this[unit];\n  }\n\n  /**\n   * Returns whether the DateTime is valid. Invalid DateTimes occur when:\n   * * The DateTime was created from invalid calendar information, such as the 13th month or February 30\n   * * The DateTime was created by an operation on another invalid date\n   * @type {boolean}\n   */\n  get isValid() {\n    return this.invalid === null;\n  }\n\n  /**\n   * Returns an error code if this DateTime is invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidReason() {\n    return this.invalid ? this.invalid.reason : null;\n  }\n\n  /**\n   * Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid\n   * @type {string}\n   */\n  get invalidExplanation() {\n    return this.invalid ? this.invalid.explanation : null;\n  }\n\n  /**\n   * Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get locale() {\n    return this.isValid ? this.loc.locale : null;\n  }\n\n  /**\n   * Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get numberingSystem() {\n    return this.isValid ? this.loc.numberingSystem : null;\n  }\n\n  /**\n   * Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime\n   *\n   * @type {string}\n   */\n  get outputCalendar() {\n    return this.isValid ? this.loc.outputCalendar : null;\n  }\n\n  /**\n   * Get the time zone associated with this DateTime.\n   * @type {Zone}\n   */\n  get zone() {\n    return this._zone;\n  }\n\n  /**\n   * Get the name of the time zone.\n   * @type {string}\n   */\n  get zoneName() {\n    return this.isValid ? this.zone.name : null;\n  }\n\n  /**\n   * Get the year\n   * @example DateTime.local(2017, 5, 25).year //=> 2017\n   * @type {number}\n   */\n  get year() {\n    return this.isValid ? this.c.year : NaN;\n  }\n\n  /**\n   * Get the quarter\n   * @example DateTime.local(2017, 5, 25).quarter //=> 2\n   * @type {number}\n   */\n  get quarter() {\n    return this.isValid ? Math.ceil(this.c.month / 3) : NaN;\n  }\n\n  /**\n   * Get the month (1-12).\n   * @example DateTime.local(2017, 5, 25).month //=> 5\n   * @type {number}\n   */\n  get month() {\n    return this.isValid ? this.c.month : NaN;\n  }\n\n  /**\n   * Get the day of the month (1-30ish).\n   * @example DateTime.local(2017, 5, 25).day //=> 25\n   * @type {number}\n   */\n  get day() {\n    return this.isValid ? this.c.day : NaN;\n  }\n\n  /**\n   * Get the hour of the day (0-23).\n   * @example DateTime.local(2017, 5, 25, 9).hour //=> 9\n   * @type {number}\n   */\n  get hour() {\n    return this.isValid ? this.c.hour : NaN;\n  }\n\n  /**\n   * Get the minute of the hour (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30).minute //=> 30\n   * @type {number}\n   */\n  get minute() {\n    return this.isValid ? this.c.minute : NaN;\n  }\n\n  /**\n   * Get the second of the minute (0-59).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52).second //=> 52\n   * @type {number}\n   */\n  get second() {\n    return this.isValid ? this.c.second : NaN;\n  }\n\n  /**\n   * Get the millisecond of the second (0-999).\n   * @example DateTime.local(2017, 5, 25, 9, 30, 52, 654).millisecond //=> 654\n   * @type {number}\n   */\n  get millisecond() {\n    return this.isValid ? this.c.millisecond : NaN;\n  }\n\n  /**\n   * Get the week year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 12, 31).weekYear //=> 2015\n   * @type {number}\n   */\n  get weekYear() {\n    return this.isValid ? possiblyCachedWeekData(this).weekYear : NaN;\n  }\n\n  /**\n   * Get the week number of the week year (1-52ish).\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2017, 5, 25).weekNumber //=> 21\n   * @type {number}\n   */\n  get weekNumber() {\n    return this.isValid ? possiblyCachedWeekData(this).weekNumber : NaN;\n  }\n\n  /**\n   * Get the day of the week.\n   * 1 is Monday and 7 is Sunday\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2014, 11, 31).weekday //=> 4\n   * @type {number}\n   */\n  get weekday() {\n    return this.isValid ? possiblyCachedWeekData(this).weekday : NaN;\n  }\n\n  /**\n   * Get the ordinal (meaning the day of the year)\n   * @example DateTime.local(2017, 5, 25).ordinal //=> 145\n   * @type {number|DateTime}\n   */\n  get ordinal() {\n    return this.isValid ? gregorianToOrdinal(this.c).ordinal : NaN;\n  }\n\n  /**\n   * Get the human readable short month name, such as 'Oct'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthShort //=> Oct\n   * @type {string}\n   */\n  get monthShort() {\n    return this.isValid ? Info.months(\"short\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable long month name, such as 'October'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).monthLong //=> October\n   * @type {string}\n   */\n  get monthLong() {\n    return this.isValid ? Info.months(\"long\", { locObj: this.loc })[this.month - 1] : null;\n  }\n\n  /**\n   * Get the human readable short weekday, such as 'Mon'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayShort //=> Mon\n   * @type {string}\n   */\n  get weekdayShort() {\n    return this.isValid ? Info.weekdays(\"short\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the human readable long weekday, such as 'Monday'.\n   * Defaults to the system's locale if no locale has been specified\n   * @example DateTime.local(2017, 10, 30).weekdayLong //=> Monday\n   * @type {string}\n   */\n  get weekdayLong() {\n    return this.isValid ? Info.weekdays(\"long\", { locObj: this.loc })[this.weekday - 1] : null;\n  }\n\n  /**\n   * Get the UTC offset of this DateTime in minutes\n   * @example DateTime.now().offset //=> -240\n   * @example DateTime.utc().offset //=> 0\n   * @type {number}\n   */\n  get offset() {\n    return this.isValid ? +this.o : NaN;\n  }\n\n  /**\n   * Get the short human name for the zone's current offset, for example \"EST\" or \"EDT\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameShort() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"short\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the long human name for the zone's current offset, for example \"Eastern Standard Time\" or \"Eastern Daylight Time\".\n   * Defaults to the system's locale if no locale has been specified\n   * @type {string}\n   */\n  get offsetNameLong() {\n    if (this.isValid) {\n      return this.zone.offsetName(this.ts, {\n        format: \"long\",\n        locale: this.locale,\n      });\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get whether this zone's offset ever changes, as in a DST.\n   * @type {boolean}\n   */\n  get isOffsetFixed() {\n    return this.isValid ? this.zone.isUniversal : null;\n  }\n\n  /**\n   * Get whether the DateTime is in a DST.\n   * @type {boolean}\n   */\n  get isInDST() {\n    if (this.isOffsetFixed) {\n      return false;\n    } else {\n      return (\n        this.offset > this.set({ month: 1 }).offset || this.offset > this.set({ month: 5 }).offset\n      );\n    }\n  }\n\n  /**\n   * Returns true if this DateTime is in a leap year, false otherwise\n   * @example DateTime.local(2016).isInLeapYear //=> true\n   * @example DateTime.local(2013).isInLeapYear //=> false\n   * @type {boolean}\n   */\n  get isInLeapYear() {\n    return isLeapYear(this.year);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's month\n   * @example DateTime.local(2016, 2).daysInMonth //=> 29\n   * @example DateTime.local(2016, 3).daysInMonth //=> 31\n   * @type {number}\n   */\n  get daysInMonth() {\n    return daysInMonth(this.year, this.month);\n  }\n\n  /**\n   * Returns the number of days in this DateTime's year\n   * @example DateTime.local(2016).daysInYear //=> 366\n   * @example DateTime.local(2013).daysInYear //=> 365\n   * @type {number}\n   */\n  get daysInYear() {\n    return this.isValid ? daysInYear(this.year) : NaN;\n  }\n\n  /**\n   * Returns the number of weeks in this DateTime's year\n   * @see https://en.wikipedia.org/wiki/ISO_week_date\n   * @example DateTime.local(2004).weeksInWeekYear //=> 53\n   * @example DateTime.local(2013).weeksInWeekYear //=> 52\n   * @type {number}\n   */\n  get weeksInWeekYear() {\n    return this.isValid ? weeksInWeekYear(this.weekYear) : NaN;\n  }\n\n  /**\n   * Returns the resolved Intl options for this DateTime.\n   * This is useful in understanding the behavior of formatting methods\n   * @param {Object} opts - the same options as toLocaleString\n   * @return {Object}\n   */\n  resolvedLocaleOptions(opts = {}) {\n    const { locale, numberingSystem, calendar } = Formatter.create(\n      this.loc.clone(opts),\n      opts\n    ).resolvedOptions(this);\n    return { locale, numberingSystem, outputCalendar: calendar };\n  }\n\n  // TRANSFORM\n\n  /**\n   * \"Set\" the DateTime's zone to UTC. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to {@link DateTime#setZone}('utc')\n   * @param {number} [offset=0] - optionally, an offset from UTC in minutes\n   * @param {Object} [opts={}] - options to pass to `setZone()`\n   * @return {DateTime}\n   */\n  toUTC(offset = 0, opts = {}) {\n    return this.setZone(FixedOffsetZone.instance(offset), opts);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.\n   *\n   * Equivalent to `setZone('local')`\n   * @return {DateTime}\n   */\n  toLocal() {\n    return this.setZone(Settings.defaultZone);\n  }\n\n  /**\n   * \"Set\" the DateTime's zone to specified zone. Returns a newly-constructed DateTime.\n   *\n   * By default, the setter keeps the underlying time the same (as in, the same timestamp), but the new instance will report different local times and consider DSTs when making computations, as with {@link DateTime#plus}. You may wish to use {@link DateTime#toLocal} and {@link DateTime#toUTC} which provide simple convenience wrappers for commonly used zones.\n   * @param {string|Zone} [zone='local'] - a zone identifier. As a string, that can be any IANA zone supported by the host environment, or a fixed-offset name of the form 'UTC+3', or the strings 'local' or 'utc'. You may also supply an instance of a {@link DateTime#Zone} class.\n   * @param {Object} opts - options\n   * @param {boolean} [opts.keepLocalTime=false] - If true, adjust the underlying time so that the local time stays the same, but in the target zone. You should rarely need this.\n   * @return {DateTime}\n   */\n  setZone(zone, { keepLocalTime = false, keepCalendarTime = false } = {}) {\n    zone = normalizeZone(zone, Settings.defaultZone);\n    if (zone.equals(this.zone)) {\n      return this;\n    } else if (!zone.isValid) {\n      return DateTime.invalid(unsupportedZone(zone));\n    } else {\n      let newTS = this.ts;\n      if (keepLocalTime || keepCalendarTime) {\n        const offsetGuess = zone.offset(this.ts);\n        const asObj = this.toObject();\n        [newTS] = objToTS(asObj, offsetGuess, zone);\n      }\n      return clone(this, { ts: newTS, zone });\n    }\n  }\n\n  /**\n   * \"Set\" the locale, numberingSystem, or outputCalendar. Returns a newly-constructed DateTime.\n   * @param {Object} properties - the properties to set\n   * @example DateTime.local(2017, 5, 25).reconfigure({ locale: 'en-GB' })\n   * @return {DateTime}\n   */\n  reconfigure({ locale, numberingSystem, outputCalendar } = {}) {\n    const loc = this.loc.clone({ locale, numberingSystem, outputCalendar });\n    return clone(this, { loc });\n  }\n\n  /**\n   * \"Set\" the locale. Returns a newly-constructed DateTime.\n   * Just a convenient alias for reconfigure({ locale })\n   * @example DateTime.local(2017, 5, 25).setLocale('en-GB')\n   * @return {DateTime}\n   */\n  setLocale(locale) {\n    return this.reconfigure({ locale });\n  }\n\n  /**\n   * \"Set\" the values of specified units. Returns a newly-constructed DateTime.\n   * You can only set units with this method; for \"setting\" metadata, see {@link DateTime#reconfigure} and {@link DateTime#setZone}.\n   * @param {Object} values - a mapping of units to numbers\n   * @example dt.set({ year: 2017 })\n   * @example dt.set({ hour: 8, minute: 30 })\n   * @example dt.set({ weekday: 5 })\n   * @example dt.set({ year: 2005, ordinal: 234 })\n   * @return {DateTime}\n   */\n  set(values) {\n    if (!this.isValid) return this;\n\n    const normalized = normalizeObject(values, normalizeUnit),\n      settingWeekStuff =\n        !isUndefined(normalized.weekYear) ||\n        !isUndefined(normalized.weekNumber) ||\n        !isUndefined(normalized.weekday),\n      containsOrdinal = !isUndefined(normalized.ordinal),\n      containsGregorYear = !isUndefined(normalized.year),\n      containsGregorMD = !isUndefined(normalized.month) || !isUndefined(normalized.day),\n      containsGregor = containsGregorYear || containsGregorMD,\n      definiteWeekDef = normalized.weekYear || normalized.weekNumber;\n\n    if ((containsGregor || containsOrdinal) && definiteWeekDef) {\n      throw new ConflictingSpecificationError(\n        \"Can't mix weekYear/weekNumber units with year/month/day or ordinals\"\n      );\n    }\n\n    if (containsGregorMD && containsOrdinal) {\n      throw new ConflictingSpecificationError(\"Can't mix ordinal dates with month/day\");\n    }\n\n    let mixed;\n    if (settingWeekStuff) {\n      mixed = weekToGregorian({ ...gregorianToWeek(this.c), ...normalized });\n    } else if (!isUndefined(normalized.ordinal)) {\n      mixed = ordinalToGregorian({ ...gregorianToOrdinal(this.c), ...normalized });\n    } else {\n      mixed = { ...this.toObject(), ...normalized };\n\n      // if we didn't set the day but we ended up on an overflow date,\n      // use the last day of the right month\n      if (isUndefined(normalized.day)) {\n        mixed.day = Math.min(daysInMonth(mixed.year, mixed.month), mixed.day);\n      }\n    }\n\n    const [ts, o] = objToTS(mixed, this.o, this.zone);\n    return clone(this, { ts, o });\n  }\n\n  /**\n   * Add a period of time to this DateTime and return the resulting DateTime\n   *\n   * Adding hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds. Adding days, months, or years shifts the calendar, accounting for DSTs and leap years along the way. Thus, `dt.plus({ hours: 24 })` may result in a different time than `dt.plus({ days: 1 })` if there's a DST shift in between.\n   * @param {Duration|Object|number} duration - The amount to add. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   * @example DateTime.now().plus(123) //~> in 123 milliseconds\n   * @example DateTime.now().plus({ minutes: 15 }) //~> in 15 minutes\n   * @example DateTime.now().plus({ days: 1 }) //~> this time tomorrow\n   * @example DateTime.now().plus({ days: -1 }) //~> this time yesterday\n   * @example DateTime.now().plus({ hours: 3, minutes: 13 }) //~> in 3 hr, 13 min\n   * @example DateTime.now().plus(Duration.fromObject({ hours: 3, minutes: 13 })) //~> in 3 hr, 13 min\n   * @return {DateTime}\n   */\n  plus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration);\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * Subtract a period of time to this DateTime and return the resulting DateTime\n   * See {@link DateTime#plus}\n   * @param {Duration|Object|number} duration - The amount to subtract. Either a Luxon Duration, a number of milliseconds, the object argument to Duration.fromObject()\n   @return {DateTime}\n  */\n  minus(duration) {\n    if (!this.isValid) return this;\n    const dur = Duration.fromDurationLike(duration).negate();\n    return clone(this, adjustTime(this, dur));\n  }\n\n  /**\n   * \"Set\" this DateTime to the beginning of a unit of time.\n   * @param {string} unit - The unit to go to the beginning of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).startOf('month').toISODate(); //=> '2014-03-01'\n   * @example DateTime.local(2014, 3, 3).startOf('year').toISODate(); //=> '2014-01-01'\n   * @example DateTime.local(2014, 3, 3).startOf('week').toISODate(); //=> '2014-03-03', weeks always start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('day').toISOTime(); //=> '00:00.000-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).startOf('hour').toISOTime(); //=> '05:00:00.000-05:00'\n   * @return {DateTime}\n   */\n  startOf(unit) {\n    if (!this.isValid) return this;\n    const o = {},\n      normalizedUnit = Duration.normalizeUnit(unit);\n    switch (normalizedUnit) {\n      case \"years\":\n        o.month = 1;\n      // falls through\n      case \"quarters\":\n      case \"months\":\n        o.day = 1;\n      // falls through\n      case \"weeks\":\n      case \"days\":\n        o.hour = 0;\n      // falls through\n      case \"hours\":\n        o.minute = 0;\n      // falls through\n      case \"minutes\":\n        o.second = 0;\n      // falls through\n      case \"seconds\":\n        o.millisecond = 0;\n        break;\n      case \"milliseconds\":\n        break;\n      // no default, invalid units throw in normalizeUnit()\n    }\n\n    if (normalizedUnit === \"weeks\") {\n      o.weekday = 1;\n    }\n\n    if (normalizedUnit === \"quarters\") {\n      const q = Math.ceil(this.month / 3);\n      o.month = (q - 1) * 3 + 1;\n    }\n\n    return this.set(o);\n  }\n\n  /**\n   * \"Set\" this DateTime to the end (meaning the last millisecond) of a unit of time\n   * @param {string} unit - The unit to go to the end of. Can be 'year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', or 'millisecond'.\n   * @example DateTime.local(2014, 3, 3).endOf('month').toISO(); //=> '2014-03-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('year').toISO(); //=> '2014-12-31T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3).endOf('week').toISO(); // => '2014-03-09T23:59:59.999-05:00', weeks start on Mondays\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('day').toISO(); //=> '2014-03-03T23:59:59.999-05:00'\n   * @example DateTime.local(2014, 3, 3, 5, 30).endOf('hour').toISO(); //=> '2014-03-03T05:59:59.999-05:00'\n   * @return {DateTime}\n   */\n  endOf(unit) {\n    return this.isValid\n      ? this.plus({ [unit]: 1 })\n          .startOf(unit)\n          .minus(1)\n      : this;\n  }\n\n  // OUTPUT\n\n  /**\n   * Returns a string representation of this DateTime formatted according to the specified format string.\n   * **You may not want this.** See {@link DateTime#toLocaleString} for a more flexible formatting tool. For a table of tokens and their interpretations, see [here](https://moment.github.io/luxon/#/formatting?id=table-of-tokens).\n   * Defaults to en-US if no locale has been specified, regardless of the system's locale.\n   * @param {string} fmt - the format string\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toFormat('yyyy LLL dd') //=> '2017 Apr 22'\n   * @example DateTime.now().setLocale('fr').toFormat('yyyy LLL dd') //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat('yyyy LLL dd', { locale: \"fr\" }) //=> '2017 avr. 22'\n   * @example DateTime.now().toFormat(\"HH 'hours and' mm 'minutes'\") //=> '20 hours and 55 minutes'\n   * @return {string}\n   */\n  toFormat(fmt, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this, fmt)\n      : INVALID;\n  }\n\n  /**\n   * Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon, such as `DateTime.DATE_FULL` or `DateTime.TIME_SIMPLE`.\n   * The exact behavior of this method is browser-specific, but in general it will return an appropriate representation\n   * of the DateTime in the assigned locale.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param formatOpts {Object} - Intl.DateTimeFormat constructor options and configuration options\n   * @param {Object} opts - opts to override the configuration options on this DateTime\n   * @example DateTime.now().toLocaleString(); //=> 4/20/2017\n   * @example DateTime.now().setLocale('en-gb').toLocaleString(); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString({ locale: 'en-gb' }); //=> '20/04/2017'\n   * @example DateTime.now().toLocaleString(DateTime.DATE_FULL); //=> 'April 20, 2017'\n   * @example DateTime.now().toLocaleString(DateTime.TIME_SIMPLE); //=> '11:32 AM'\n   * @example DateTime.now().toLocaleString(DateTime.DATETIME_SHORT); //=> '4/20/2017, 11:32 AM'\n   * @example DateTime.now().toLocaleString({ weekday: 'long', month: 'long', day: '2-digit' }); //=> 'Thursday, April 20'\n   * @example DateTime.now().toLocaleString({ weekday: 'short', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }); //=> 'Thu, Apr 20, 11:27 AM'\n   * @example DateTime.now().toLocaleString({ hour: '2-digit', minute: '2-digit', hourCycle: 'h23' }); //=> '11:32'\n   * @return {string}\n   */\n  toLocaleString(formatOpts = Formats.DATE_SHORT, opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), formatOpts).formatDateTime(this)\n      : INVALID;\n  }\n\n  /**\n   * Returns an array of format \"parts\", meaning individual tokens along with metadata. This is allows callers to post-process individual sections of the formatted output.\n   * Defaults to the system's locale if no locale has been specified\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/formatToParts\n   * @param opts {Object} - Intl.DateTimeFormat constructor options, same as `toLocaleString`.\n   * @example DateTime.now().toLocaleParts(); //=> [\n   *                                   //=>   { type: 'day', value: '25' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'month', value: '05' },\n   *                                   //=>   { type: 'literal', value: '/' },\n   *                                   //=>   { type: 'year', value: '1982' }\n   *                                   //=> ]\n   */\n  toLocaleParts(opts = {}) {\n    return this.isValid\n      ? Formatter.create(this.loc.clone(opts), opts).formatDateTimeParts(this)\n      : [];\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISO() //=> '1982-05-25T00:00:00.000Z'\n   * @example DateTime.now().toISO() //=> '2017-04-22T20:47:05.335-04:00'\n   * @example DateTime.now().toISO({ includeOffset: false }) //=> '2017-04-22T20:47:05.335'\n   * @example DateTime.now().toISO({ format: 'basic' }) //=> '20170422T204705.335-0400'\n   * @return {string}\n   */\n  toISO(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toISODate(opts)}T${this.toISOTime(opts)}`;\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's date component\n   * @param {Object} opts - options\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc(1982, 5, 25).toISODate() //=> '1982-05-25'\n   * @example DateTime.utc(1982, 5, 25).toISODate({ format: 'basic' }) //=> '19820525'\n   * @return {string}\n   */\n  toISODate({ format = \"extended\" } = {}) {\n    let fmt = format === \"basic\" ? \"yyyyMMdd\" : \"yyyy-MM-dd\";\n    if (this.year > 9999) {\n      fmt = \"+\" + fmt;\n    }\n\n    return toTechFormat(this, fmt);\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's week date\n   * @example DateTime.utc(1982, 5, 25).toISOWeekDate() //=> '1982-W21-2'\n   * @return {string}\n   */\n  toISOWeekDate() {\n    return toTechFormat(this, \"kkkk-'W'WW-c\");\n  }\n\n  /**\n   * Returns an ISO 8601-compliant string representation of this DateTime's time component\n   * @param {Object} opts - options\n   * @param {boolean} [opts.suppressMilliseconds=false] - exclude milliseconds from the format if they're 0\n   * @param {boolean} [opts.suppressSeconds=false] - exclude seconds from the format if they're 0\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @param {boolean} [opts.includePrefix=false] - include the `T` prefix\n   * @param {string} [opts.format='extended'] - choose between the basic and extended format\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime() //=> '07:34:19.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34, seconds: 0, milliseconds: 0 }).toISOTime({ suppressSeconds: true }) //=> '07:34Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ format: 'basic' }) //=> '073419.361Z'\n   * @example DateTime.utc().set({ hour: 7, minute: 34 }).toISOTime({ includePrefix: true }) //=> 'T07:34:19.361Z'\n   * @return {string}\n   */\n  toISOTime({\n    suppressMilliseconds = false,\n    suppressSeconds = false,\n    includeOffset = true,\n    includePrefix = false,\n    format = \"extended\",\n  } = {}) {\n    return toTechTimeFormat(this, {\n      suppressSeconds,\n      suppressMilliseconds,\n      includeOffset,\n      includePrefix,\n      format,\n    });\n  }\n\n  /**\n   * Returns an RFC 2822-compatible string representation of this DateTime, always in UTC\n   * @example DateTime.utc(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 +0000'\n   * @example DateTime.local(2014, 7, 13).toRFC2822() //=> 'Sun, 13 Jul 2014 00:00:00 -0400'\n   * @return {string}\n   */\n  toRFC2822() {\n    return toTechFormat(this, \"EEE, dd LLL yyyy HH:mm:ss ZZZ\", false);\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in HTTP headers.\n   * Specifically, the string conforms to RFC 1123.\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1\n   * @example DateTime.utc(2014, 7, 13).toHTTP() //=> 'Sun, 13 Jul 2014 00:00:00 GMT'\n   * @example DateTime.utc(2014, 7, 13, 19).toHTTP() //=> 'Sun, 13 Jul 2014 19:00:00 GMT'\n   * @return {string}\n   */\n  toHTTP() {\n    return toTechFormat(this.toUTC(), \"EEE, dd LLL yyyy HH:mm:ss 'GMT'\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Date\n   * @example DateTime.utc(2014, 7, 13).toSQLDate() //=> '2014-07-13'\n   * @return {string}\n   */\n  toSQLDate() {\n    return toTechFormat(this, \"yyyy-MM-dd\");\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL Time\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @example DateTime.utc().toSQL() //=> '05:15:16.345'\n   * @example DateTime.now().toSQL() //=> '05:15:16.345 -04:00'\n   * @example DateTime.now().toSQL({ includeOffset: false }) //=> '05:15:16.345'\n   * @example DateTime.now().toSQL({ includeZone: false }) //=> '05:15:16.345 America/New_York'\n   * @return {string}\n   */\n  toSQLTime({ includeOffset = true, includeZone = false } = {}) {\n    return toTechTimeFormat(this, {\n      includeOffset,\n      includeZone,\n      spaceZone: true,\n    });\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for use in SQL DateTime\n   * @param {Object} opts - options\n   * @param {boolean} [opts.includeZone=false] - include the zone, such as 'America/New_York'. Overrides includeOffset.\n   * @param {boolean} [opts.includeOffset=true] - include the offset, such as 'Z' or '-04:00'\n   * @example DateTime.utc(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 Z'\n   * @example DateTime.local(2014, 7, 13).toSQL() //=> '2014-07-13 00:00:00.000 -04:00'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeOffset: false }) //=> '2014-07-13 00:00:00.000'\n   * @example DateTime.local(2014, 7, 13).toSQL({ includeZone: true }) //=> '2014-07-13 00:00:00.000 America/New_York'\n   * @return {string}\n   */\n  toSQL(opts = {}) {\n    if (!this.isValid) {\n      return null;\n    }\n\n    return `${this.toSQLDate()} ${this.toSQLTime(opts)}`;\n  }\n\n  /**\n   * Returns a string representation of this DateTime appropriate for debugging\n   * @return {string}\n   */\n  toString() {\n    return this.isValid ? this.toISO() : INVALID;\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime. Alias of {@link DateTime#toMillis}\n   * @return {number}\n   */\n  valueOf() {\n    return this.toMillis();\n  }\n\n  /**\n   * Returns the epoch milliseconds of this DateTime.\n   * @return {number}\n   */\n  toMillis() {\n    return this.isValid ? this.ts : NaN;\n  }\n\n  /**\n   * Returns the epoch seconds of this DateTime.\n   * @return {number}\n   */\n  toSeconds() {\n    return this.isValid ? this.ts / 1000 : NaN;\n  }\n\n  /**\n   * Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.\n   * @return {string}\n   */\n  toJSON() {\n    return this.toISO();\n  }\n\n  /**\n   * Returns a BSON serializable equivalent to this DateTime.\n   * @return {Date}\n   */\n  toBSON() {\n    return this.toJSDate();\n  }\n\n  /**\n   * Returns a JavaScript object with this DateTime's year, month, day, and so on.\n   * @param opts - options for generating the object\n   * @param {boolean} [opts.includeConfig=false] - include configuration attributes in the output\n   * @example DateTime.now().toObject() //=> { year: 2017, month: 4, day: 22, hour: 20, minute: 49, second: 42, millisecond: 268 }\n   * @return {Object}\n   */\n  toObject(opts = {}) {\n    if (!this.isValid) return {};\n\n    const base = { ...this.c };\n\n    if (opts.includeConfig) {\n      base.outputCalendar = this.outputCalendar;\n      base.numberingSystem = this.loc.numberingSystem;\n      base.locale = this.loc.locale;\n    }\n    return base;\n  }\n\n  /**\n   * Returns a JavaScript Date equivalent to this DateTime.\n   * @return {Date}\n   */\n  toJSDate() {\n    return new Date(this.isValid ? this.ts : NaN);\n  }\n\n  // COMPARE\n\n  /**\n   * Return the difference between two DateTimes as a Duration.\n   * @param {DateTime} otherDateTime - the DateTime to compare this one to\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or array of units (such as 'hours' or 'days') to include in the duration.\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @example\n   * var i1 = DateTime.fromISO('1982-05-25T09:45'),\n   *     i2 = DateTime.fromISO('1983-10-14T10:30');\n   * i2.diff(i1).toObject() //=> { milliseconds: 43807500000 }\n   * i2.diff(i1, 'hours').toObject() //=> { hours: 12168.75 }\n   * i2.diff(i1, ['months', 'days']).toObject() //=> { months: 16, days: 19.03125 }\n   * i2.diff(i1, ['months', 'days', 'hours']).toObject() //=> { months: 16, days: 19, hours: 0.75 }\n   * @return {Duration}\n   */\n  diff(otherDateTime, unit = \"milliseconds\", opts = {}) {\n    if (!this.isValid || !otherDateTime.isValid) {\n      return Duration.invalid(\"created by diffing an invalid DateTime\");\n    }\n\n    const durOpts = { locale: this.locale, numberingSystem: this.numberingSystem, ...opts };\n\n    const units = maybeArray(unit).map(Duration.normalizeUnit),\n      otherIsLater = otherDateTime.valueOf() > this.valueOf(),\n      earlier = otherIsLater ? this : otherDateTime,\n      later = otherIsLater ? otherDateTime : this,\n      diffed = diff(earlier, later, units, durOpts);\n\n    return otherIsLater ? diffed.negate() : diffed;\n  }\n\n  /**\n   * Return the difference between this DateTime and right now.\n   * See {@link DateTime#diff}\n   * @param {string|string[]} [unit=['milliseconds']] - the unit or units units (such as 'hours' or 'days') to include in the duration\n   * @param {Object} opts - options that affect the creation of the Duration\n   * @param {string} [opts.conversionAccuracy='casual'] - the conversion system to use\n   * @return {Duration}\n   */\n  diffNow(unit = \"milliseconds\", opts = {}) {\n    return this.diff(DateTime.now(), unit, opts);\n  }\n\n  /**\n   * Return an Interval spanning between this DateTime and another DateTime\n   * @param {DateTime} otherDateTime - the other end point of the Interval\n   * @return {Interval}\n   */\n  until(otherDateTime) {\n    return this.isValid ? Interval.fromDateTimes(this, otherDateTime) : this;\n  }\n\n  /**\n   * Return whether this DateTime is in the same unit of time as another DateTime.\n   * Higher-order units must also be identical for this function to return `true`.\n   * Note that time zones are **ignored** in this comparison, which compares the **local** calendar time. Use {@link DateTime#setZone} to convert one of the dates if needed.\n   * @param {DateTime} otherDateTime - the other DateTime\n   * @param {string} unit - the unit of time to check sameness on\n   * @example DateTime.now().hasSame(otherDT, 'day'); //~> true if otherDT is in the same current calendar day\n   * @return {boolean}\n   */\n  hasSame(otherDateTime, unit) {\n    if (!this.isValid) return false;\n\n    const inputMs = otherDateTime.valueOf();\n    const otherZoneDateTime = this.setZone(otherDateTime.zone, { keepLocalTime: true });\n    return otherZoneDateTime.startOf(unit) <= inputMs && inputMs <= otherZoneDateTime.endOf(unit);\n  }\n\n  /**\n   * Equality check\n   * Two DateTimes are equal iff they represent the same millisecond, have the same zone and location, and are both valid.\n   * To compare just the millisecond values, use `+dt1 === +dt2`.\n   * @param {DateTime} other - the other DateTime\n   * @return {boolean}\n   */\n  equals(other) {\n    return (\n      this.isValid &&\n      other.isValid &&\n      this.valueOf() === other.valueOf() &&\n      this.zone.equals(other.zone) &&\n      this.loc.equals(other.loc)\n    );\n  }\n\n  /**\n   * Returns a string representation of a this time relative to now, such as \"in two days\". Can only internationalize if your\n   * platform supports Intl.RelativeTimeFormat. Rounds down by default.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} [options.style=\"long\"] - the style of units, must be \"long\", \"short\", or \"narrow\"\n   * @param {string|string[]} options.unit - use a specific unit or array of units; if omitted, or an array, the method will pick the best unit. Use an array or one of \"years\", \"quarters\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", or \"seconds\"\n   * @param {boolean} [options.round=true] - whether to round the numbers in the output.\n   * @param {number} [options.padding=0] - padding in milliseconds. This allows you to round up the result if it fits inside the threshold. Don't use in combination with {round: false} because the decimal output will include the padding.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelative() //=> \"in 1 day\"\n   * @example DateTime.now().setLocale(\"es\").toRelative({ days: 1 }) //=> \"dentro de 1 d\u00EDa\"\n   * @example DateTime.now().plus({ days: 1 }).toRelative({ locale: \"fr\" }) //=> \"dans 23 heures\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative() //=> \"2 days ago\"\n   * @example DateTime.now().minus({ days: 2 }).toRelative({ unit: \"hours\" }) //=> \"48 hours ago\"\n   * @example DateTime.now().minus({ hours: 36 }).toRelative({ round: false }) //=> \"1.5 days ago\"\n   */\n  toRelative(options = {}) {\n    if (!this.isValid) return null;\n    const base = options.base || DateTime.fromObject({}, { zone: this.zone }),\n      padding = options.padding ? (this < base ? -options.padding : options.padding) : 0;\n    let units = [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"];\n    let unit = options.unit;\n    if (Array.isArray(options.unit)) {\n      units = options.unit;\n      unit = undefined;\n    }\n    return diffRelative(base, this.plus(padding), {\n      ...options,\n      numeric: \"always\",\n      units,\n      unit,\n    });\n  }\n\n  /**\n   * Returns a string representation of this date relative to today, such as \"yesterday\" or \"next month\".\n   * Only internationalizes on platforms that supports Intl.RelativeTimeFormat.\n   * @param {Object} options - options that affect the output\n   * @param {DateTime} [options.base=DateTime.now()] - the DateTime to use as the basis to which this time is compared. Defaults to now.\n   * @param {string} options.locale - override the locale of this DateTime\n   * @param {string} options.unit - use a specific unit; if omitted, the method will pick the unit. Use one of \"years\", \"quarters\", \"months\", \"weeks\", or \"days\"\n   * @param {string} options.numberingSystem - override the numberingSystem of this DateTime. The Intl system may choose not to honor this\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar() //=> \"tomorrow\"\n   * @example DateTime.now().setLocale(\"es\").plus({ days: 1 }).toRelative() //=> \"\"ma\u00F1ana\"\n   * @example DateTime.now().plus({ days: 1 }).toRelativeCalendar({ locale: \"fr\" }) //=> \"demain\"\n   * @example DateTime.now().minus({ days: 2 }).toRelativeCalendar() //=> \"2 days ago\"\n   */\n  toRelativeCalendar(options = {}) {\n    if (!this.isValid) return null;\n\n    return diffRelative(options.base || DateTime.fromObject({}, { zone: this.zone }), this, {\n      ...options,\n      numeric: \"auto\",\n      units: [\"years\", \"months\", \"days\"],\n      calendary: true,\n    });\n  }\n\n  /**\n   * Return the min of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the minimum\n   * @return {DateTime} the min DateTime, or undefined if called with no argument\n   */\n  static min(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"min requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.min);\n  }\n\n  /**\n   * Return the max of several date times\n   * @param {...DateTime} dateTimes - the DateTimes from which to choose the maximum\n   * @return {DateTime} the max DateTime, or undefined if called with no argument\n   */\n  static max(...dateTimes) {\n    if (!dateTimes.every(DateTime.isDateTime)) {\n      throw new InvalidArgumentError(\"max requires all arguments be DateTimes\");\n    }\n    return bestBy(dateTimes, (i) => i.valueOf(), Math.max);\n  }\n\n  // MISC\n\n  /**\n   * Explain how a string would be parsed by fromFormat()\n   * @param {string} text - the string to parse\n   * @param {string} fmt - the format the string is expected to be in (see description)\n   * @param {Object} options - options taken by fromFormat()\n   * @return {Object}\n   */\n  static fromFormatExplain(text, fmt, options = {}) {\n    const { locale = null, numberingSystem = null } = options,\n      localeToUse = Locale.fromOpts({\n        locale,\n        numberingSystem,\n        defaultToEN: true,\n      });\n    return explainFromTokens(localeToUse, text, fmt);\n  }\n\n  /**\n   * @deprecated use fromFormatExplain instead\n   */\n  static fromStringExplain(text, fmt, options = {}) {\n    return DateTime.fromFormatExplain(text, fmt, options);\n  }\n\n  // FORMAT PRESETS\n\n  /**\n   * {@link DateTime#toLocaleString} format like 10/14/1983\n   * @type {Object}\n   */\n  static get DATE_SHORT() {\n    return Formats.DATE_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED() {\n    return Formats.DATE_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, Oct 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_MED_WITH_WEEKDAY() {\n    return Formats.DATE_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_FULL() {\n    return Formats.DATE_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Tuesday, October 14, 1983'\n   * @type {Object}\n   */\n  static get DATE_HUGE() {\n    return Formats.DATE_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_SIMPLE() {\n    return Formats.TIME_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SECONDS() {\n    return Formats.TIME_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_SHORT_OFFSET() {\n    return Formats.TIME_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get TIME_WITH_LONG_OFFSET() {\n    return Formats.TIME_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_SIMPLE() {\n    return Formats.TIME_24_SIMPLE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SECONDS() {\n    return Formats.TIME_24_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 EDT', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_SHORT_OFFSET() {\n    return Formats.TIME_24_WITH_SHORT_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '09:30:23 Eastern Daylight Time', always 24-hour.\n   * @type {Object}\n   */\n  static get TIME_24_WITH_LONG_OFFSET() {\n    return Formats.TIME_24_WITH_LONG_OFFSET;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT() {\n    return Formats.DATETIME_SHORT;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like '10/14/1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_SHORT_WITH_SECONDS() {\n    return Formats.DATETIME_SHORT_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED() {\n    return Formats.DATETIME_MED;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Oct 14, 1983, 9:30:33 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_SECONDS() {\n    return Formats.DATETIME_MED_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Fri, 14 Oct 1983, 9:30 AM'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_MED_WITH_WEEKDAY() {\n    return Formats.DATETIME_MED_WITH_WEEKDAY;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL() {\n    return Formats.DATETIME_FULL;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'October 14, 1983, 9:30:33 AM EDT'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_FULL_WITH_SECONDS() {\n    return Formats.DATETIME_FULL_WITH_SECONDS;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE() {\n    return Formats.DATETIME_HUGE;\n  }\n\n  /**\n   * {@link DateTime#toLocaleString} format like 'Friday, October 14, 1983, 9:30:33 AM Eastern Daylight Time'. Only 12-hour if the locale is.\n   * @type {Object}\n   */\n  static get DATETIME_HUGE_WITH_SECONDS() {\n    return Formats.DATETIME_HUGE_WITH_SECONDS;\n  }\n}\n\n/**\n * @private\n */\nexport function friendlyDateTime(dateTimeish) {\n  if (DateTime.isDateTime(dateTimeish)) {\n    return dateTimeish;\n  } else if (dateTimeish && dateTimeish.valueOf && isNumber(dateTimeish.valueOf())) {\n    return DateTime.fromJSDate(dateTimeish);\n  } else if (dateTimeish && typeof dateTimeish === \"object\") {\n    return DateTime.fromObject(dateTimeish);\n  } else {\n    throw new InvalidArgumentError(\n      `Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`\n    );\n  }\n}\n", "import DateTime from \"./datetime.js\";\nimport Duration from \"./duration.js\";\nimport Interval from \"./interval.js\";\nimport Info from \"./info.js\";\nimport Zone from \"./zone.js\";\nimport FixedOffsetZone from \"./zones/fixedOffsetZone.js\";\nimport IANAZone from \"./zones/IANAZone.js\";\nimport InvalidZone from \"./zones/invalidZone.js\";\nimport SystemZone from \"./zones/systemZone.js\";\nimport Settings from \"./settings.js\";\n\nconst VERSION = \"2.1.1\";\n\nexport {\n  VERSION,\n  DateTime,\n  Duration,\n  Interval,\n  Info,\n  Zone,\n  FixedOffsetZone,\n  IANAZone,\n  InvalidZone,\n  SystemZone,\n  Settings,\n};\n", "const niceErrors = {\n    0: `Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'`,\n    1(annotationType, key: PropertyKey) {\n        return `Cannot apply '${annotationType}' to '${key.toString()}': Field not found.`\n    },\n    /*\n    2(prop) {\n        return `invalid decorator for '${prop.toString()}'`\n    },\n    3(prop) {\n        return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`\n    },\n    4(prop) {\n        return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`\n    },\n    */\n    5: \"'keys()' can only be used on observable objects, arrays, sets and maps\",\n    6: \"'values()' can only be used on observable objects, arrays, sets and maps\",\n    7: \"'entries()' can only be used on observable objects, arrays and maps\",\n    8: \"'set()' can only be used on observable objects, arrays and maps\",\n    9: \"'remove()' can only be used on observable objects, arrays and maps\",\n    10: \"'has()' can only be used on observable objects, arrays and maps\",\n    11: \"'get()' can only be used on observable objects, arrays and maps\",\n    12: `Invalid annotation`,\n    13: `Dynamic observable objects cannot be frozen`,\n    14: \"Intercept handlers should return nothing or a change object\",\n    15: `Observable arrays cannot be frozen`,\n    16: `Modification exception: the internal structure of an observable array was changed.`,\n    17(index, length) {\n        return `[mobx.array] Index out of bounds, ${index} is larger than ${length}`\n    },\n    18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\",\n    19(other) {\n        return \"Cannot initialize from classes that inherit from Map: \" + other.constructor.name\n    },\n    20(other) {\n        return \"Cannot initialize map from \" + other\n    },\n    21(dataStructure) {\n        return `Cannot convert to map from '${dataStructure}'`\n    },\n    22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\",\n    23: \"It is not possible to get index atoms from arrays\",\n    24(thing) {\n        return \"Cannot obtain administration from \" + thing\n    },\n    25(property, name) {\n        return `the entry '${property}' does not exist in the observable map '${name}'`\n    },\n    26: \"please specify a property\",\n    27(property, name) {\n        return `no observable property '${property.toString()}' found on the observable object '${name}'`\n    },\n    28(thing) {\n        return \"Cannot obtain atom from \" + thing\n    },\n    29: \"Expecting some object\",\n    30: \"invalid action stack. did you forget to finish an action?\",\n    31: \"missing option for computed: get\",\n    32(name, derivation) {\n        return `Cycle detected in computation ${name}: ${derivation}`\n    },\n    33(name) {\n        return `The setter of computed value '${name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`\n    },\n    34(name) {\n        return `[ComputedValue '${name}'] It is not possible to assign a new value to a computed value.`\n    },\n    35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\",\n    36: \"isolateGlobalState should be called before MobX is running any reactions\",\n    37(method) {\n        return `[mobx] \\`observableArray.${method}()\\` mutates the array in-place, which is not allowed inside a derivation. Use \\`array.slice().${method}()\\` instead`\n    },\n    38: \"'ownKeys()' can only be used on observable objects\",\n    39: \"'defineProperty()' can only be used on observable objects\"\n} as const\n\nconst errors: typeof niceErrors = __DEV__ ? niceErrors : ({} as any)\n\nexport function die(error: string | keyof typeof errors, ...args: any[]): never {\n    if (__DEV__) {\n        let e: any = typeof error === \"string\" ? error : errors[error]\n        if (typeof e === \"function\") e = e.apply(null, args as any)\n        throw new Error(`[MobX] ${e}`)\n    }\n    throw new Error(\n        typeof error === \"number\"\n            ? `[MobX] minified error nr: ${error}${\n                  args.length ? \" \" + args.map(String).join(\",\") : \"\"\n              }. Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts`\n            : `[MobX] ${error}`\n    )\n}\n", "declare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis\n    }\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n", "import { globalState, die } from \"../internal\"\n\n// We shorten anything used > 5 times\nexport const assign = Object.assign\nexport const getDescriptor = Object.getOwnPropertyDescriptor\nexport const defineProperty = Object.defineProperty\nexport const objectPrototype = Object.prototype\n\nexport const EMPTY_ARRAY = []\nObject.freeze(EMPTY_ARRAY)\n\nexport const EMPTY_OBJECT = {}\nObject.freeze(EMPTY_OBJECT)\n\nexport interface Lambda {\n    (): void\n    name?: string\n}\n\nconst hasProxy = typeof Proxy !== \"undefined\"\nconst plainObjectString = Object.toString()\n\nexport function assertProxies() {\n    if (!hasProxy) {\n        die(\n            __DEV__\n                ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\"\n                : \"Proxy not available\"\n        )\n    }\n}\n\nexport function warnAboutProxyRequirement(msg: string) {\n    if (__DEV__ && globalState.verifyProxies) {\n        die(\n            \"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" +\n                msg\n        )\n    }\n}\n\nexport function getNextId() {\n    return ++globalState.mobxGuid\n}\n\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nexport function once(func: Lambda): Lambda {\n    let invoked = false\n    return function () {\n        if (invoked) return\n        invoked = true\n        return (func as any).apply(this, arguments)\n    }\n}\n\nexport const noop = () => {}\n\nexport function isFunction(fn: any): fn is Function {\n    return typeof fn === \"function\"\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\"\n}\n\nexport function isStringish(value: any): value is string | number | symbol {\n    const t = typeof value\n    switch (t) {\n        case \"string\":\n        case \"symbol\":\n        case \"number\":\n            return true\n    }\n    return false\n}\n\nexport function isObject(value: any): value is Object {\n    return value !== null && typeof value === \"object\"\n}\n\nexport function isPlainObject(value) {\n    if (!isObject(value)) return false\n    const proto = Object.getPrototypeOf(value)\n    if (proto == null) return true\n    return proto.constructor?.toString() === plainObjectString\n}\n\n// https://stackoverflow.com/a/37865170\nexport function isGenerator(obj: any): boolean {\n    const constructor = obj?.constructor\n    if (!constructor) return false\n    if (\"GeneratorFunction\" === constructor.name || \"GeneratorFunction\" === constructor.displayName)\n        return true\n    return false\n}\n\nexport function addHiddenProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport function addHiddenFinalProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    })\n}\n\nexport function createInstanceofPredicate<T>(\n    name: string,\n    theClass: new (...args: any[]) => T\n): (x: any) => x is T {\n    const propName = \"isMobX\" + name\n    theClass.prototype[propName] = true\n    return function (x) {\n        return isObject(x) && x[propName] === true\n    } as any\n}\n\nexport function isES6Map(thing): boolean {\n    return thing instanceof Map\n}\n\nexport function isES6Set(thing): thing is Set<any> {\n    return thing instanceof Set\n}\n\nconst hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\"\n\n/**\n * Returns the following: own enumerable keys and symbols.\n */\nexport function getPlainObjectKeys(object) {\n    const keys = Object.keys(object)\n    // Not supported in IE, so there are not going to be symbol props anyway...\n    if (!hasGetOwnPropertySymbols) return keys\n    const symbols = Object.getOwnPropertySymbols(object)\n    if (!symbols.length) return keys\n    return [...keys, ...symbols.filter(s => objectPrototype.propertyIsEnumerable.call(object, s))]\n}\n\n// From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\nexport const ownKeys: (target: any) => PropertyKey[] =\n    typeof Reflect !== \"undefined\" && Reflect.ownKeys\n        ? Reflect.ownKeys\n        : hasGetOwnPropertySymbols\n        ? obj => Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj) as any)\n        : /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function stringifyKey(key: any): string {\n    if (typeof key === \"string\") return key\n    if (typeof key === \"symbol\") return key.toString()\n    return new String(key).toString()\n}\n\nexport function toPrimitive(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value\n}\n\nexport function hasProp(target: Object, prop: PropertyKey): boolean {\n    return objectPrototype.hasOwnProperty.call(target, prop)\n}\n\n// From Immer utils\nexport const getOwnPropertyDescriptors =\n    Object.getOwnPropertyDescriptors ||\n    function getOwnPropertyDescriptors(target: any) {\n        // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n        const res: any = {}\n        // Note: without polyfill for ownKeys, symbols won't be picked up\n        ownKeys(target).forEach(key => {\n            res[key] = getDescriptor(target, key)\n        })\n        return res\n    }\n", "import { Annotation, addHiddenProp, AnnotationsMap, hasProp, die, isOverride } from \"../internal\"\n\nexport const storedAnnotationsSymbol = Symbol(\"mobx-stored-annotations\")\n\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\nexport function createDecoratorAnnotation(annotation: Annotation): PropertyDecorator & Annotation {\n    function decorator(target, property) {\n        storeAnnotation(target, property, annotation)\n    }\n    return Object.assign(decorator, annotation)\n}\n\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\nexport function storeAnnotation(prototype: any, key: PropertyKey, annotation: Annotation) {\n    if (!hasProp(prototype, storedAnnotationsSymbol)) {\n        addHiddenProp(prototype, storedAnnotationsSymbol, {\n            // Inherit annotations\n            ...prototype[storedAnnotationsSymbol]\n        })\n    }\n    // @override must override something\n    if (__DEV__ && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        die(\n            `'${fieldName}' is decorated with 'override', ` +\n                `but no such decorated member was found on prototype.`\n        )\n    }\n    // Cannot re-decorate\n    assertNotDecorated(prototype, annotation, key)\n\n    // Ignore override\n    if (!isOverride(annotation)) {\n        prototype[storedAnnotationsSymbol][key] = annotation\n    }\n}\n\nfunction assertNotDecorated(prototype: object, annotation: Annotation, key: PropertyKey) {\n    if (__DEV__ && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        const currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '@${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already decorated with '@${currentAnnotationType}'.` +\n                `\\nRe-decorating fields is not allowed.` +\n                `\\nUse '@override' decorator for methods overriden by subclass.`\n        )\n    }\n}\n\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\nexport function collectStoredAnnotations(target): AnnotationsMap<any, any> {\n    if (!hasProp(target, storedAnnotationsSymbol)) {\n        if (__DEV__ && !target[storedAnnotationsSymbol]) {\n            die(\n                `No annotations were passed to makeObservable, but no decorated members have been found either`\n            )\n        }\n        // We need a copy as we will remove annotation from the list once it's applied.\n        addHiddenProp(target, storedAnnotationsSymbol, { ...target[storedAnnotationsSymbol] })\n    }\n    return target[storedAnnotationsSymbol]\n}\n", "import {\n    IDerivationState_,\n    IObservable,\n    IDerivation,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    noop,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    propagateChanged,\n    reportObserved,\n    startBatch,\n    Lambda\n} from \"../internal\"\n\nexport const $mobx = Symbol(\"mobx administration\")\n\nexport interface IAtom extends IObservable {\n    reportObserved()\n    reportChanged()\n}\n\nexport class Atom implements IAtom {\n    isPendingUnobservation_ = false // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n    isBeingObserved_ = false\n    observers_ = new Set<IDerivation>()\n\n    diffValue_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.NOT_TRACKING_\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(public name_ = __DEV__ ? \"Atom@\" + getNextId() : \"Atom\") {}\n\n    // onBecomeObservedListeners\n    public onBOL: Set<Lambda> | undefined\n    // onBecomeUnobservedListeners\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    public reportObserved(): boolean {\n        return reportObserved(this)\n    }\n\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    public reportChanged() {\n        startBatch()\n        propagateChanged(this)\n        endBatch()\n    }\n\n    toString() {\n        return this.name_\n    }\n}\n\nexport const isAtom = createInstanceofPredicate(\"Atom\", Atom)\n\nexport function createAtom(\n    name: string,\n    onBecomeObservedHandler: () => void = noop,\n    onBecomeUnobservedHandler: () => void = noop\n): IAtom {\n    const atom = new Atom(name)\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler)\n    }\n\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler)\n    }\n    return atom\n}\n", "import { deepEqual } from \"../internal\"\n\nexport interface IEqualsComparer<T> {\n    (a: T, b: T): boolean\n}\n\nfunction identityComparer(a: any, b: any): boolean {\n    return a === b\n}\n\nfunction structuralComparer(a: any, b: any): boolean {\n    return deepEqual(a, b)\n}\n\nfunction shallowComparer(a: any, b: any): boolean {\n    return deepEqual(a, b, 1)\n}\n\nfunction defaultComparer(a: any, b: any): boolean {\n    if (Object.is) return Object.is(a, b)\n\n    return a === b\n        ? a !== 0 || 1 / a === 1 / b\n        : a !== a && b !== b\n}\n\nexport const comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n}\n", "import {\n    deepEqual,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    isPlainObject,\n    observable,\n    die,\n    isAction,\n    autoAction,\n    flow,\n    isFlow,\n    isGenerator\n} from \"../internal\"\n\nexport interface IEnhancer<T> {\n    (newValue: T, oldValue: T | undefined, name: string): T\n}\n\nexport function deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v)) return v\n\n    // something that can be converted and mutated?\n    if (Array.isArray(v)) return observable.array(v, { name })\n    if (isPlainObject(v)) return observable.object(v, undefined, { name })\n    if (isES6Map(v)) return observable.map(v, { name })\n    if (isES6Set(v)) return observable.set(v, { name })\n    if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n        if (isGenerator(v)) {\n            return flow(v)\n        } else {\n            return autoAction(name, v)\n        }\n    }\n    return v\n}\n\nexport function shallowEnhancer(v, _, name): any {\n    if (v === undefined || v === null) return v\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v))\n        return v\n    if (Array.isArray(v)) return observable.array(v, { name, deep: false })\n    if (isPlainObject(v)) return observable.object(v, undefined, { name, deep: false })\n    if (isES6Map(v)) return observable.map(v, { name, deep: false })\n    if (isES6Set(v)) return observable.set(v, { name, deep: false })\n\n    if (__DEV__)\n        die(\n            \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\"\n        )\n}\n\nexport function referenceEnhancer(newValue?) {\n    // never turn into an observable\n    return newValue\n}\n\nexport function refStructEnhancer(v, oldValue): any {\n    if (__DEV__ && isObservable(v))\n        die(`observable.struct should not be used with observable values`)\n    if (deepEqual(v, oldValue)) return oldValue\n    return v\n}\n", "import {\n    die,\n    Annotation,\n    hasProp,\n    createDecoratorAnnotation,\n    ObservableObjectAdministration,\n    MakeResult\n} from \"../internal\"\n\nconst OVERRIDE = \"override\"\n\nexport const override: Annotation & PropertyDecorator = createDecoratorAnnotation({\n    annotationType_: OVERRIDE,\n    make_,\n    extend_\n})\n\nexport function isOverride(annotation: Annotation): boolean {\n    return annotation.annotationType_ === OVERRIDE\n}\n\nfunction make_(adm: ObservableObjectAdministration, key): MakeResult {\n    // Must not be plain object\n    if (__DEV__ && adm.isPlainObject_) {\n        die(\n            `Cannot apply '${this.annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${this.annotationType_}' cannot be used on plain objects.`\n        )\n    }\n    // Must override something\n    if (__DEV__ && !hasProp(adm.appliedAnnotations_!, key)) {\n        die(\n            `'${adm.name_}.${key.toString()}' is annotated with '${this.annotationType_}', ` +\n                `but no such annotated member was found on prototype.`\n        )\n    }\n    return MakeResult.Cancel\n}\n\nfunction extend_(adm, key, descriptor, proxyTrap): boolean {\n    die(`'${this.annotationType_}' can only be used with 'makeObservable'`)\n}\n", "import {\n    ObservableObjectAdministration,\n    createAction,\n    isAction,\n    defineProperty,\n    die,\n    isFunction,\n    Annotation,\n    globalState,\n    MakeResult\n} from \"../internal\"\n\nexport function createActionAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // bound\n    if (this.options_?.bound) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Break\n    }\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    if (isAction(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false)\n    defineProperty(source, key, actionDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor)\n    return adm.defineProperty_(key, actionDescriptor, proxyTrap)\n}\n\nfunction assertActionDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n            `\\n'${annotationType_}' can only be used on properties with a function value.`\n        )\n    }\n}\n\nexport function createActionDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n) {\n    assertActionDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (annotation.options_?.bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: createAction(\n            annotation.options_?.name ?? key.toString(),\n            value,\n            annotation.options_?.autoAction ?? false,\n            // https://github.com/mobxjs/mobx/discussions/3140\n            annotation.options_?.bound ? (adm.proxy_ ?? adm.target_) : undefined,\n        ),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    Annotation,\n    defineProperty,\n    die,\n    flow,\n    isFlow,\n    isFunction,\n    globalState,\n    MakeResult\n} from \"../internal\"\n\nexport function createFlowAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    // bound - must annotate protos to support super.flow()\n    if (this.options_?.bound && !isFlow(adm.target_[key])) {\n        if (this.extend_(adm, key, descriptor, false) === null) return MakeResult.Cancel\n    }\n    if (isFlow(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false)\n    defineProperty(source, key, flowDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, this.options_?.bound)\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap)\n}\n\nfunction assertFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a generator function value.`\n        )\n    }\n}\n\nfunction createFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    bound: boolean,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n): PropertyDescriptor {\n    assertFlowDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: flow(value),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n", "import { ObservableObjectAdministration, die, Annotation, MakeResult } from \"../internal\"\n\nexport function createComputedAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertComputedDescriptor(adm, this, key, descriptor)\n    return adm.defineComputedProperty_(\n        key,\n        {\n            ...this.options_,\n            get: descriptor.get,\n            set: descriptor.set\n        },\n        proxyTrap\n    )\n}\n\nfunction assertComputedDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { get }: PropertyDescriptor\n) {\n    if (__DEV__ && !get) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on getter(+setter) properties.`\n        )\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    deepEnhancer,\n    die,\n    Annotation,\n    MakeResult\n} from \"../internal\"\n\nexport function createObservableAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertObservableDescriptor(adm, this, key, descriptor)\n    return adm.defineObservableProperty_(\n        key,\n        descriptor.value,\n        this.options_?.enhancer ?? deepEnhancer,\n        proxyTrap\n    )\n}\n\nfunction assertObservableDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n) {\n    if (__DEV__ && !(\"value\" in descriptor)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' cannot be used on getter/setter properties`\n        )\n    }\n}\n", "import {\n    ObservableObjectAdministration,\n    observable,\n    Annotation,\n    defineProperty,\n    createAction,\n    globalState,\n    flow,\n    computed,\n    autoAction,\n    isGenerator,\n    MakeResult\n} from \"../internal\"\n\nconst AUTO = \"true\"\n\nexport const autoAnnotation: Annotation = createAutoAnnotation()\n\nexport function createAutoAnnotation(options?: object): Annotation {\n    return {\n        annotationType_: AUTO,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.make_(adm, key, descriptor, source)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.make_\n        const set = createAction(key.toString(), descriptor.set) as (v: any) => void\n        // own\n        if (source === adm.target_) {\n            return adm.defineProperty_(key, {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set\n            }) === null\n                ? MakeResult.Cancel\n                : MakeResult.Continue\n        }\n        // proto\n        defineProperty(source, key, {\n            configurable: true,\n            set\n        })\n        return MakeResult.Continue\n    }\n    // function on proto -> autoAction/flow\n    if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n        if (isGenerator(descriptor.value)) {\n            const flowAnnotation = this.options_?.autoBind ? flow.bound : flow\n            return flowAnnotation.make_(adm, key, descriptor, source)\n        }\n        const actionAnnotation = this.options_?.autoBind ? autoAction.bound : autoAction\n        return actionAnnotation.make_(adm, key, descriptor, source)\n    }\n    // other -> observable\n    // Copy props from proto as well, see test:\n    // \"decorate should work with Object.create\"\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return observableAnnotation.make_(adm, key, descriptor, source)\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.extend_(adm, key, descriptor, proxyTrap)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.extend_\n        return adm.defineProperty_(\n            key,\n            {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set: createAction(key.toString(), descriptor.set) as (v: any) => void\n            },\n            proxyTrap\n        )\n    }\n    // other -> observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    return observableAnnotation.extend_(adm, key, descriptor, proxyTrap)\n}\n", "import {\n    IEnhancer,\n    IEqualsComparer,\n    IObservableArray,\n    IObservableMapInitialValues,\n    IObservableSetInitialValues,\n    IObservableValue,\n    ObservableMap,\n    ObservableSet,\n    ObservableValue,\n    asDynamicObservableObject,\n    createObservableArray,\n    deepEnhancer,\n    extendObservable,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isPlainObject,\n    referenceEnhancer,\n    Annotation,\n    shallowEnhancer,\n    refStructEnhancer,\n    AnnotationsMap,\n    asObservableObject,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    createLegacyArray,\n    globalState,\n    assign,\n    isStringish,\n    createObservableAnnotation,\n    createAutoAnnotation\n} from \"../internal\"\n\nexport const OBSERVABLE = \"observable\"\nexport const OBSERVABLE_REF = \"observable.ref\"\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\"\nexport const OBSERVABLE_STRUCT = \"observable.struct\"\n\nexport type CreateObservableOptions = {\n    name?: string\n    equals?: IEqualsComparer<any>\n    deep?: boolean\n    defaultDecorator?: Annotation\n    proxy?: boolean\n    autoBind?: boolean\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nexport const defaultCreateObservableOptions: CreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n}\nObject.freeze(defaultCreateObservableOptions)\n\nexport function asCreateObservableOptions(thing: any): CreateObservableOptions {\n    return thing || defaultCreateObservableOptions\n}\n\nconst observableAnnotation = createObservableAnnotation(OBSERVABLE)\nconst observableRefAnnotation = createObservableAnnotation(OBSERVABLE_REF, {\n    enhancer: referenceEnhancer\n})\nconst observableShallowAnnotation = createObservableAnnotation(OBSERVABLE_SHALLOW, {\n    enhancer: shallowEnhancer\n})\nconst observableStructAnnotation = createObservableAnnotation(OBSERVABLE_STRUCT, {\n    enhancer: refStructEnhancer\n})\nconst observableDecoratorAnnotation = createDecoratorAnnotation(observableAnnotation)\n\nexport function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any> {\n    return options.deep === true\n        ? deepEnhancer\n        : options.deep === false\n        ? referenceEnhancer\n        : getEnhancerFromAnnotation(options.defaultDecorator)\n}\n\nexport function getAnnotationFromOptions(\n    options?: CreateObservableOptions\n): Annotation | undefined {\n    return options ? options.defaultDecorator ?? createAutoAnnotation(options) : undefined\n}\n\nexport function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any> {\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer\n}\n\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v: any, arg2?: any, arg3?: any) {\n    // @observable someProp;\n    if (isStringish(arg2)) {\n        storeAnnotation(v, arg2, observableAnnotation)\n        return\n    }\n\n    // already observable - ignore\n    if (isObservable(v)) return v\n\n    // plain object\n    if (isPlainObject(v)) return observable.object(v, arg2, arg3)\n\n    // Array\n    if (Array.isArray(v)) return observable.array(v, arg2)\n\n    // Map\n    if (isES6Map(v)) return observable.map(v, arg2)\n\n    // Set\n    if (isES6Set(v)) return observable.set(v, arg2)\n\n    // other object - ignore\n    if (typeof v === \"object\" && v !== null) return v\n\n    // anything else\n    return observable.box(v, arg2)\n}\nObject.assign(createObservable, observableDecoratorAnnotation)\n\nexport interface IObservableFactory extends Annotation, PropertyDecorator {\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>\n    <T extends object>(\n        value: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T\n\n    box: <T = any>(value?: T, options?: CreateObservableOptions) => IObservableValue<T>\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>\n    set: <T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ) => ObservableSet<T>\n    map: <K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ) => ObservableMap<K, V>\n    object: <T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ) => T\n\n    /**\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\n     */\n    ref: Annotation & PropertyDecorator\n    /**\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\n     */\n    shallow: Annotation & PropertyDecorator\n    deep: Annotation & PropertyDecorator\n    struct: Annotation & PropertyDecorator\n}\n\nconst observableFactories: IObservableFactory = {\n    box<T = any>(value?: T, options?: CreateObservableOptions): IObservableValue<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals)\n    },\n    array<T = any>(initialValues?: T[], options?: CreateObservableOptions): IObservableArray<T> {\n        const o = asCreateObservableOptions(options)\n        return (globalState.useProxies === false || o.proxy === false\n            ? createLegacyArray\n            : createObservableArray)(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    map<K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ): ObservableMap<K, V> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableMap<K, V>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    set<T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ): ObservableSet<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableSet<T>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    object<T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T {\n        return extendObservable(\n            globalState.useProxies === false || options?.proxy === false\n                ? asObservableObject({}, options)\n                : asDynamicObservableObject({}, options),\n            props,\n            decorators\n        )\n    },\n    ref: createDecoratorAnnotation(observableRefAnnotation),\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\n    deep: observableDecoratorAnnotation,\n    struct: createDecoratorAnnotation(observableStructAnnotation)\n} as any\n\n// eslint-disable-next-line\nexport var observable: IObservableFactory = assign(createObservable, observableFactories)\n", "import {\n    ComputedValue,\n    IComputedValueOptions,\n    Annotation,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    isStringish,\n    isPlainObject,\n    isFunction,\n    die,\n    IComputedValue,\n    createComputedAnnotation,\n    comparer\n} from \"../internal\"\n\nexport const COMPUTED = \"computed\"\nexport const COMPUTED_STRUCT = \"computed.struct\"\n\nexport interface IComputedFactory extends Annotation, PropertyDecorator {\n    // @computed(opts)\n    <T>(options: IComputedValueOptions<T>): Annotation & PropertyDecorator\n    // computed(fn, opts)\n    <T>(func: () => T, options?: IComputedValueOptions<T>): IComputedValue<T>\n\n    struct: Annotation & PropertyDecorator\n}\n\nconst computedAnnotation = createComputedAnnotation(COMPUTED)\nconst computedStructAnnotation = createComputedAnnotation(COMPUTED_STRUCT, {\n    equals: comparer.structural\n})\n\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nexport const computed: IComputedFactory = function computed(arg1, arg2) {\n    if (isStringish(arg2)) {\n        // @computed\n        return storeAnnotation(arg1, arg2, computedAnnotation)\n    }\n    if (isPlainObject(arg1)) {\n        // @computed({ options })\n        return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1))\n    }\n\n    // computed(expr, options?)\n    if (__DEV__) {\n        if (!isFunction(arg1)) die(\"First argument to `computed` should be an expression.\")\n        if (isFunction(arg2))\n            die(\n                \"A setter as second argument is no longer supported, use `{ set: fn }` option instead\"\n            )\n    }\n    const opts: IComputedValueOptions<any> = isPlainObject(arg2) ? arg2 : {}\n    opts.get = arg1\n    opts.name ||= arg1.name || \"\" /* for generated name */\n\n    return new ComputedValue(opts)\n} as any\n\nObject.assign(computed, computedAnnotation)\n\ncomputed.struct = createDecoratorAnnotation(computedStructAnnotation)\n", "import {\n    IDerivation,\n    endBatch,\n    globalState,\n    isSpyEnabled,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    untrackedEnd,\n    untrackedStart,\n    isFunction,\n    allowStateReadsStart,\n    allowStateReadsEnd,\n    ACTION,\n    EMPTY_ARRAY,\n    die,\n    getDescriptor\n} from \"../internal\"\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0\nlet nextActionId = 1\nconst isFunctionNameConfigurable = getDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// we can safely recycle this object\nconst tmpNameDescriptor: PropertyDescriptor = {\n    value: \"action\",\n    configurable: true,\n    writable: false,\n    enumerable: false\n}\n\nexport function createAction(\n    actionName: string,\n    fn: Function,\n    autoAction: boolean = false,\n    ref?: Object\n): Function {\n    if (__DEV__) {\n        if (!isFunction(fn)) die(\"`action` can only be invoked on functions\")\n        if (typeof actionName !== \"string\" || !actionName)\n            die(`actions should have valid names, got: '${actionName}'`)\n    }\n    function res() {\n        return executeAction(actionName, autoAction, fn, ref || this, arguments)\n    }\n    res.isMobxAction = true\n    if (isFunctionNameConfigurable) {\n        tmpNameDescriptor.value = actionName\n        Object.defineProperty(res, \"name\", tmpNameDescriptor)\n    }\n    return res\n}\n\nexport function executeAction(\n    actionName: string,\n    canRunAsDerivation: boolean,\n    fn: Function,\n    scope?: any,\n    args?: IArguments\n) {\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args)\n    try {\n        return fn.apply(scope, args)\n    } catch (err) {\n        runInfo.error_ = err\n        throw err\n    } finally {\n        _endAction(runInfo)\n    }\n}\n\nexport interface IActionRunInfo {\n    prevDerivation_: IDerivation | null\n    prevAllowStateChanges_: boolean\n    prevAllowStateReads_: boolean\n    notifySpy_: boolean\n    startTime_: number\n    error_?: any\n    parentActionId_: number\n    actionId_: number\n    runAsAction_?: boolean\n}\n\nexport function _startAction(\n    actionName: string,\n    canRunAsDerivation: boolean, // true for autoAction\n    scope: any,\n    args?: IArguments\n): IActionRunInfo {\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName\n    let startTime_: number = 0\n    if (__DEV__ && notifySpy_) {\n        startTime_ = Date.now()\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY\n        spyReportStart({\n            type: ACTION,\n            name: actionName,\n            object: scope,\n            arguments: flattenedArgs\n        })\n    }\n    const prevDerivation_ = globalState.trackingDerivation\n    const runAsAction = !canRunAsDerivation || !prevDerivation_\n    startBatch()\n    let prevAllowStateChanges_ = globalState.allowStateChanges // by default preserve previous allow\n    if (runAsAction) {\n        untrackedStart()\n        prevAllowStateChanges_ = allowStateChangesStart(true)\n    }\n    const prevAllowStateReads_ = allowStateReadsStart(true)\n    const runInfo = {\n        runAsAction_: runAsAction,\n        prevDerivation_,\n        prevAllowStateChanges_,\n        prevAllowStateReads_,\n        notifySpy_,\n        startTime_,\n        actionId_: nextActionId++,\n        parentActionId_: currentActionId\n    }\n    currentActionId = runInfo.actionId_\n    return runInfo\n}\n\nexport function _endAction(runInfo: IActionRunInfo) {\n    if (currentActionId !== runInfo.actionId_) {\n        die(30)\n    }\n    currentActionId = runInfo.parentActionId_\n\n    if (runInfo.error_ !== undefined) {\n        globalState.suppressReactionErrors = true\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_)\n    allowStateReadsEnd(runInfo.prevAllowStateReads_)\n    endBatch()\n    if (runInfo.runAsAction_) untrackedEnd(runInfo.prevDerivation_)\n    if (__DEV__ && runInfo.notifySpy_) {\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ })\n    }\n    globalState.suppressReactionErrors = false\n}\n\nexport function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T {\n    const prev = allowStateChangesStart(allowStateChanges)\n    try {\n        return func()\n    } finally {\n        allowStateChangesEnd(prev)\n    }\n}\n\nexport function allowStateChangesStart(allowStateChanges: boolean) {\n    const prev = globalState.allowStateChanges\n    globalState.allowStateChanges = allowStateChanges\n    return prev\n}\n\nexport function allowStateChangesEnd(prev: boolean) {\n    globalState.allowStateChanges = prev\n}\n", "import {\n    Atom,\n    IEnhancer,\n    IInterceptable,\n    IEqualsComparer,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    checkIfStateModificationsAreAllowed,\n    comparer,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    toPrimitive,\n    globalState,\n    IUNCHANGED,\n    UPDATE\n} from \"../internal\"\n\nexport interface IValueWillChange<T> {\n    object: IObservableValue<T>\n    type: \"update\"\n    newValue: T\n}\n\nexport type IValueDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"value\"\n    object: IObservableValue<T>\n    debugObjectName: string\n    newValue: unknown\n    oldValue: unknown\n}\nexport type IBoxDidChange<T = any> =\n    | {\n          type: \"create\"\n          observableKind: \"value\"\n          object: IObservableValue<T>\n          debugObjectName: string\n          newValue: unknown\n      }\n    | IValueDidChange<T>\n\nexport interface IObservableValue<T> {\n    get(): T\n    set(value: T): void\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nconst CREATE = \"create\"\n\nexport class ObservableValue<T>\n    extends Atom\n    implements IObservableValue<T>, IInterceptable<IValueWillChange<T>>, IListenable {\n    hasUnreportedChange_ = false\n    interceptors_\n    changeListeners_\n    value_\n    dehancer: any\n\n    constructor(\n        value: T,\n        public enhancer: IEnhancer<T>,\n        public name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\",\n        notifySpy = true,\n        private equals: IEqualsComparer<any> = comparer.default\n    ) {\n        super(name_)\n        this.value_ = enhancer(value, undefined, name_)\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({\n                type: CREATE,\n                object: this,\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                newValue: \"\" + this.value_\n            })\n        }\n    }\n\n    private dehanceValue(value: T): T {\n        if (this.dehancer !== undefined) return this.dehancer(value)\n        return value\n    }\n\n    public set(newValue: T) {\n        const oldValue = this.value_\n        newValue = this.prepareNewValue_(newValue) as any\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            if (__DEV__ && notifySpy) {\n                spyReportStart({\n                    type: UPDATE,\n                    object: this,\n                    observableKind: \"value\",\n                    debugObjectName: this.name_,\n                    newValue,\n                    oldValue\n                })\n            }\n            this.setNewValue_(newValue)\n            if (__DEV__ && notifySpy) spyReportEnd()\n        }\n    }\n\n    private prepareNewValue_(newValue): T | IUNCHANGED {\n        checkIfStateModificationsAreAllowed(this)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IValueWillChange<T>>(this, {\n                object: this,\n                type: UPDATE,\n                newValue\n            })\n            if (!change) return globalState.UNCHANGED\n            newValue = change.newValue\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value_, this.name_)\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue\n    }\n\n    setNewValue_(newValue: T) {\n        const oldValue = this.value_\n        this.value_ = newValue\n        this.reportChanged()\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: UPDATE,\n                object: this,\n                newValue,\n                oldValue\n            })\n        }\n    }\n\n    public get(): T {\n        this.reportObserved()\n        return this.dehanceValue(this.value_)\n    }\n\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        if (fireImmediately)\n            listener({\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                object: this,\n                type: UPDATE,\n                newValue: this.value_,\n                oldValue: undefined\n            })\n        return registerListener(this, listener)\n    }\n\n    raw() {\n        // used by MST ot get undehanced value\n        return this.value_\n    }\n\n    toJSON() {\n        return this.get()\n    }\n\n    toString() {\n        return `${this.name_}[${this.value_}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue) as (\n    x: any\n) => x is IObservableValue<any>\n", "import {\n    CaughtException,\n    IDerivation,\n    IDerivationState_,\n    IEqualsComparer,\n    IObservable,\n    Lambda,\n    TraceMode,\n    autorun,\n    clearObserving,\n    comparer,\n    createAction,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    propagateChangeConfirmed,\n    propagateMaybeChanged,\n    reportObserved,\n    shouldCompute,\n    spyReport,\n    startBatch,\n    toPrimitive,\n    trackDerivedFunction,\n    untrackedEnd,\n    untrackedStart,\n    UPDATE,\n    die,\n    allowStateChangesStart,\n    allowStateChangesEnd\n} from \"../internal\"\n\nexport interface IComputedValue<T> {\n    get(): T\n    set(value: T): void\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nexport interface IComputedValueOptions<T> {\n    get?: () => T\n    set?: (value: T) => void\n    name?: string\n    equals?: IEqualsComparer<T>\n    context?: any\n    requiresReaction?: boolean\n    keepAlive?: boolean\n}\n\nexport type IComputedDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"computed\"\n    object: unknown\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nexport class ComputedValue<T> implements IObservable, IComputedValue<T>, IDerivation {\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_ = null // during tracking it's an array with new observed observers\n    isBeingObserved_ = false\n    isPendingUnobservation_: boolean = false\n    observers_ = new Set<IDerivation>()\n    diffValue_ = 0\n    runId_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    unboundDepsCount_ = 0\n    protected value_: T | undefined | CaughtException = new CaughtException(null)\n    name_: string\n    triggeredBy_?: string\n    isComputing_: boolean = false // to check for cycles\n    isRunningSetter_: boolean = false\n    derivation: () => T // N.B: unminified as it is used by MST\n    setter_?: (value: T) => void\n    isTracing_: TraceMode = TraceMode.NONE\n    scope_: Object | undefined\n    private equals_: IEqualsComparer<any>\n    private requiresReaction_: boolean\n    keepAlive_: boolean\n\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options: IComputedValueOptions<T>) {\n        if (!options.get) die(31)\n        this.derivation = options.get!\n        this.name_ = options.name || (__DEV__ ? \"ComputedValue@\" + getNextId() : \"ComputedValue\")\n        if (options.set) {\n            this.setter_ = createAction(\n                __DEV__ ? this.name_ + \"-setter\" : \"ComputedValue-setter\",\n                options.set\n            ) as any\n        }\n        this.equals_ =\n            options.equals ||\n            ((options as any).compareStructural || (options as any).struct\n                ? comparer.structural\n                : comparer.default)\n        this.scope_ = options.context\n        this.requiresReaction_ = !!options.requiresReaction\n        this.keepAlive_ = !!options.keepAlive\n    }\n\n    onBecomeStale_() {\n        propagateMaybeChanged(this)\n    }\n\n    public onBOL: Set<Lambda> | undefined\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    public get(): T {\n        if (this.isComputing_) die(32, this.name_, this.derivation)\n        if (\n            globalState.inBatch === 0 &&\n            // !globalState.trackingDerivatpion &&\n            this.observers_.size === 0 &&\n            !this.keepAlive_\n        ) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead_()\n                startBatch() // See perf test 'computed memoization'\n                this.value_ = this.computeValue_(false)\n                endBatch()\n            }\n        } else {\n            reportObserved(this)\n            if (shouldCompute(this)) {\n                let prevTrackingContext = globalState.trackingContext\n                if (this.keepAlive_ && !prevTrackingContext) globalState.trackingContext = this\n                if (this.trackAndCompute()) propagateChangeConfirmed(this)\n                globalState.trackingContext = prevTrackingContext\n            }\n        }\n        const result = this.value_!\n\n        if (isCaughtException(result)) throw result.cause\n        return result\n    }\n\n    public set(value: T) {\n        if (this.setter_) {\n            if (this.isRunningSetter_) die(33, this.name_)\n            this.isRunningSetter_ = true\n            try {\n                this.setter_.call(this.scope_, value)\n            } finally {\n                this.isRunningSetter_ = false\n            }\n        } else die(34, this.name_)\n    }\n\n    trackAndCompute(): boolean {\n        // N.B: unminified as it is used by MST\n        const oldValue = this.value_\n        const wasSuspended =\n            /* see #1208 */ this.dependenciesState_ === IDerivationState_.NOT_TRACKING_\n        const newValue = this.computeValue_(true)\n\n        const changed =\n            wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals_(oldValue, newValue)\n\n        if (changed) {\n            this.value_ = newValue\n\n            if (__DEV__ && isSpyEnabled()) {\n                spyReport({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    object: this.scope_,\n                    type: \"update\",\n                    oldValue,\n                    newValue\n                } as IComputedDidChange)\n            }\n        }\n\n        return changed\n    }\n\n    computeValue_(track: boolean) {\n        this.isComputing_ = true\n        // don't allow state changes during computation\n        const prev = allowStateChangesStart(false)\n        let res: T | CaughtException\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope_)\n        } else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope_)\n            } else {\n                try {\n                    res = this.derivation.call(this.scope_)\n                } catch (e) {\n                    res = new CaughtException(e)\n                }\n            }\n        }\n        allowStateChangesEnd(prev)\n        this.isComputing_ = false\n        return res\n    }\n\n    suspend_() {\n        if (!this.keepAlive_) {\n            clearObserving(this)\n            this.value_ = undefined // don't hold on to computed value!\n            if (__DEV__ && this.isTracing_ !== TraceMode.NONE) {\n                console.log(\n                    `[mobx.trace] Computed value '${this.name_}' was suspended and it will recompute on the next access.`\n                )\n            }\n        }\n    }\n\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        let firstTime = true\n        let prevValue: T | undefined = undefined\n        return autorun(() => {\n            // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n            let newValue = this.get()\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart()\n                listener({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    type: UPDATE,\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                })\n                untrackedEnd(prevU)\n            }\n            firstTime = false\n            prevValue = newValue\n        })\n    }\n\n    warnAboutUntrackedRead_() {\n        if (!__DEV__) return\n        if (this.isTracing_ !== TraceMode.NONE) {\n            console.log(\n                `[mobx.trace] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n        if (globalState.computedRequiresReaction || this.requiresReaction_) {\n            console.warn(\n                `[mobx] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n    }\n\n    toString() {\n        return `${this.name_}[${this.derivation.toString()}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue)\n", "import {\n    IAtom,\n    IDepTreeNode,\n    IObservable,\n    addObserver,\n    globalState,\n    isComputedValue,\n    removeObserver\n} from \"../internal\"\n\nexport enum IDerivationState_ {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    NOT_TRACKING_ = -1,\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    UP_TO_DATE_ = 0,\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    POSSIBLY_STALE_ = 1,\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    STALE_ = 2\n}\n\nexport enum TraceMode {\n    NONE,\n    LOG,\n    BREAK\n}\n\n/**\n * A derivation is everything that can be derived from the state (all the atoms) in a pure manner.\n * See https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n */\nexport interface IDerivation extends IDepTreeNode {\n    observing_: IObservable[]\n    newObserving_: null | IObservable[]\n    dependenciesState_: IDerivationState_\n    /**\n     * Id of the current run of a derivation. Each time the derivation is tracked\n     * this number is increased by one. This number is globally unique\n     */\n    runId_: number\n    /**\n     * amount of dependencies used by the derivation in this run, which has not been bound yet.\n     */\n    unboundDepsCount_: number\n    onBecomeStale_(): void\n    isTracing_: TraceMode\n\n    /**\n     *  warn if the derivation has no dependencies after creation/update\n     */\n    requiresObservable_?: boolean\n}\n\nexport class CaughtException {\n    constructor(public cause: any) {\n        // Empty\n    }\n}\n\nexport function isCaughtException(e: any): e is CaughtException {\n    return e instanceof CaughtException\n}\n\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nexport function shouldCompute(derivation: IDerivation): boolean {\n    switch (derivation.dependenciesState_) {\n        case IDerivationState_.UP_TO_DATE_:\n            return false\n        case IDerivationState_.NOT_TRACKING_:\n        case IDerivationState_.STALE_:\n            return true\n        case IDerivationState_.POSSIBLY_STALE_: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true)\n            const prevUntracked = untrackedStart() // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing_,\n                l = obs.length\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i]\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get()\n                    } else {\n                        try {\n                            obj.get()\n                        } catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked)\n                            allowStateReadsEnd(prevAllowStateReads)\n                            return true\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if ((derivation.dependenciesState_ as any) === IDerivationState_.STALE_) {\n                        untrackedEnd(prevUntracked)\n                        allowStateReadsEnd(prevAllowStateReads)\n                        return true\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation)\n            untrackedEnd(prevUntracked)\n            allowStateReadsEnd(prevAllowStateReads)\n            return false\n        }\n    }\n}\n\nexport function isComputingDerivation() {\n    return globalState.trackingDerivation !== null // filter out actions inside computations\n}\n\nexport function checkIfStateModificationsAreAllowed(atom: IAtom) {\n    if (!__DEV__) {\n        return\n    }\n    const hasObservers = atom.observers_.size > 0\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === \"always\"))\n        console.warn(\n            \"[MobX] \" +\n                (globalState.enforceActions\n                    ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \"\n                    : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") +\n                atom.name_\n        )\n}\n\nexport function checkIfStateReadsAreAllowed(observable: IObservable) {\n    if (__DEV__ && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n        console.warn(\n            `[mobx] Observable '${observable.name_}' being read outside a reactive context.`\n        )\n    }\n}\n\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nexport function trackDerivedFunction<T>(derivation: IDerivation, f: () => T, context: any) {\n    const prevAllowStateReads = allowStateReadsStart(true)\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation)\n    derivation.newObserving_ = new Array(derivation.observing_.length + 100)\n    derivation.unboundDepsCount_ = 0\n    derivation.runId_ = ++globalState.runId\n    const prevTracking = globalState.trackingDerivation\n    globalState.trackingDerivation = derivation\n    globalState.inBatch++\n    let result\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context)\n    } else {\n        try {\n            result = f.call(context)\n        } catch (e) {\n            result = new CaughtException(e)\n        }\n    }\n    globalState.inBatch--\n    globalState.trackingDerivation = prevTracking\n    bindDependencies(derivation)\n\n    warnAboutDerivationWithoutDependencies(derivation)\n    allowStateReadsEnd(prevAllowStateReads)\n    return result\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation: IDerivation) {\n    if (!__DEV__) return\n\n    if (derivation.observing_.length !== 0) return\n\n    if (globalState.reactionRequiresObservable || derivation.requiresObservable_) {\n        console.warn(\n            `[mobx] Derivation '${derivation.name_}' is created/updated without reading any observable value.`\n        )\n    }\n}\n\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation: IDerivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing_\n    const observing = (derivation.observing_ = derivation.newObserving_!)\n    let lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_\n\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0,\n        l = derivation.unboundDepsCount_\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i]\n        if (dep.diffValue_ === 0) {\n            dep.diffValue_ = 1\n            if (i0 !== i) observing[i0] = dep\n            i0++\n        }\n\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (((dep as any) as IDerivation).dependenciesState_ > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = ((dep as any) as IDerivation).dependenciesState_\n        }\n    }\n    observing.length = i0\n\n    derivation.newObserving_ = null // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length\n    while (l--) {\n        const dep = prevObserving[l]\n        if (dep.diffValue_ === 0) {\n            removeObserver(dep, derivation)\n        }\n        dep.diffValue_ = 0\n    }\n\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0]\n        if (dep.diffValue_ === 1) {\n            dep.diffValue_ = 0\n            addObserver(dep, derivation)\n        }\n    }\n\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n        derivation.dependenciesState_ = lowestNewObservingDerivationState\n        derivation.onBecomeStale_()\n    }\n}\n\nexport function clearObserving(derivation: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing_\n    derivation.observing_ = []\n    let i = obs.length\n    while (i--) removeObserver(obs[i], derivation)\n\n    derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_\n}\n\nexport function untracked<T>(action: () => T): T {\n    const prev = untrackedStart()\n    try {\n        return action()\n    } finally {\n        untrackedEnd(prev)\n    }\n}\n\nexport function untrackedStart(): IDerivation | null {\n    const prev = globalState.trackingDerivation\n    globalState.trackingDerivation = null\n    return prev\n}\n\nexport function untrackedEnd(prev: IDerivation | null) {\n    globalState.trackingDerivation = prev\n}\n\nexport function allowStateReadsStart(allowStateReads: boolean) {\n    const prev = globalState.allowStateReads\n    globalState.allowStateReads = allowStateReads\n    return prev\n}\n\nexport function allowStateReadsEnd(prev: boolean) {\n    globalState.allowStateReads = prev\n}\n\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nexport function changeDependenciesStateTo0(derivation: IDerivation) {\n    if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) return\n    derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_\n\n    const obs = derivation.observing_\n    let i = obs.length\n    while (i--) obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n}\n", "import { IDerivation, IObservable, Reaction, die, getGlobal } from \"../internal\"\nimport { ComputedValue } from \"./computedvalue\"\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys: (keyof MobXGlobals)[] = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\",\n    \"useProxies\"\n]\n\nexport type IUNCHANGED = {}\n\nexport class MobXGlobals {\n    /**\n     * MobXGlobals version.\n     * MobX compatiblity with other versions loaded in memory as long as this version matches.\n     * It indicates that the global state still stores similar information\n     *\n     * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n     * internal state storage of MobX, and can be the same across many different package versions\n     */\n    version = 6\n\n    /**\n     * globally unique token to signal unchanged\n     */\n    UNCHANGED: IUNCHANGED = {}\n\n    /**\n     * Currently running derivation\n     */\n    trackingDerivation: IDerivation | null = null\n\n    /**\n     * Currently running reaction. This determines if we currently have a reactive context.\n     * (Tracking derivation is also set for temporal tracking of computed values inside actions,\n     * but trackingReaction can only be set by a form of Reaction)\n     */\n    trackingContext: Reaction | ComputedValue<any> | null = null\n\n    /**\n     * Each time a derivation is tracked, it is assigned a unique run-id\n     */\n    runId = 0\n\n    /**\n     * 'guid' for general purpose. Will be persisted amongst resets.\n     */\n    mobxGuid = 0\n\n    /**\n     * Are we in a batch block? (and how many of them)\n     */\n    inBatch: number = 0\n\n    /**\n     * Observables that don't have observers anymore, and are about to be\n     * suspended, unless somebody else accesses it in the same batch\n     *\n     * @type {IObservable[]}\n     */\n    pendingUnobservations: IObservable[] = []\n\n    /**\n     * List of scheduled, not yet executed, reactions.\n     */\n    pendingReactions: Reaction[] = []\n\n    /**\n     * Are we currently processing reactions?\n     */\n    isRunningReactions = false\n\n    /**\n     * Is it allowed to change observables at this point?\n     * In general, MobX doesn't allow that when running computations and React.render.\n     * To ensure that those functions stay pure.\n     */\n    allowStateChanges = false\n\n    /**\n     * Is it allowed to read observables at this point?\n     * Used to hold the state needed for `observableRequiresReaction`\n     */\n    allowStateReads = true\n\n    /**\n     * If strict mode is enabled, state changes are by default not allowed\n     */\n    enforceActions: boolean | \"always\" = true\n\n    /**\n     * Spy callbacks\n     */\n    spyListeners: { (change: any): void }[] = []\n\n    /**\n     * Globally attached error handlers that react specifically to errors in reactions\n     */\n    globalReactionErrorHandlers: ((error: any, derivation: IDerivation) => void)[] = []\n\n    /**\n     * Warn if computed values are accessed outside a reactive context\n     */\n    computedRequiresReaction = false\n\n    /**\n     * (Experimental)\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable = false\n\n    /**\n     * (Experimental)\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction = false\n\n    /*\n     * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n     * the stack when an exception occurs while debugging.\n     */\n    disableErrorBoundaries = false\n\n    /*\n     * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n     * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n     */\n    suppressReactionErrors = false\n\n    useProxies = true\n    /*\n     * print warnings about code that would fail if proxies weren't available\n     */\n    verifyProxies = false\n\n    /**\n     * False forces all object's descriptors to\n     * writable: true\n     * configurable: true\n     */\n    safeDescriptors = true\n}\n\nlet canMergeGlobalState = true\nlet isolateCalled = false\n\nexport let globalState: MobXGlobals = (function () {\n    let global = getGlobal()\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) canMergeGlobalState = false\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version)\n        canMergeGlobalState = false\n\n    if (!canMergeGlobalState) {\n        // Because this is a IIFE we need to let isolateCalled a chance to change\n        // so we run it after the event loop completed at least 1 iteration\n        setTimeout(() => {\n            if (!isolateCalled) {\n                die(35)\n            }\n        }, 1)\n        return new MobXGlobals()\n    } else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1\n        if (!global.__mobxGlobals.UNCHANGED) global.__mobxGlobals.UNCHANGED = {} // make merge backward compatible\n        return global.__mobxGlobals\n    } else {\n        global.__mobxInstanceCount = 1\n        return (global.__mobxGlobals = new MobXGlobals())\n    }\n})()\n\nexport function isolateGlobalState() {\n    if (\n        globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions\n    )\n        die(36)\n    isolateCalled = true\n    if (canMergeGlobalState) {\n        let global = getGlobal()\n        if (--global.__mobxInstanceCount === 0) global.__mobxGlobals = undefined\n        globalState = new MobXGlobals()\n    }\n}\n\nexport function getGlobalState(): any {\n    return globalState\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nexport function resetGlobalState() {\n    const defaultGlobals = new MobXGlobals()\n    for (let key in defaultGlobals)\n        if (persistentKeys.indexOf(key as any) === -1) globalState[key] = defaultGlobals[key]\n    globalState.allowStateChanges = !globalState.enforceActions\n}\n", "import {\n    Lambda,\n    ComputedValue,\n    IDependencyTree,\n    IDerivation,\n    IDerivationState_,\n    TraceMode,\n    getDependencyTree,\n    globalState,\n    runReactions,\n    checkIfStateReadsAreAllowed\n} from \"../internal\"\n\nexport interface IDepTreeNode {\n    name_: string\n    observing_?: IObservable[]\n}\n\nexport interface IObservable extends IDepTreeNode {\n    diffValue_: number\n    /**\n     * Id of the derivation *run* that last accessed this observable.\n     * If this id equals the *run* id of the current derivation,\n     * the dependency is already established\n     */\n    lastAccessedBy_: number\n    isBeingObserved_: boolean\n\n    lowestObserverState_: IDerivationState_ // Used to avoid redundant propagations\n    isPendingUnobservation_: boolean // Used to push itself to global.pendingUnobservations at most once per batch.\n\n    observers_: Set<IDerivation>\n\n    onBUO(): void\n    onBO(): void\n\n    onBUOL: Set<Lambda> | undefined\n    onBOL: Set<Lambda> | undefined\n}\n\nexport function hasObservers(observable: IObservable): boolean {\n    return observable.observers_ && observable.observers_.size > 0\n}\n\nexport function getObservers(observable: IObservable): Set<IDerivation> {\n    return observable.observers_\n}\n\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nexport function addObserver(observable: IObservable, node: IDerivation) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n\n    observable.observers_.add(node)\n    if (observable.lowestObserverState_ > node.dependenciesState_)\n        observable.lowestObserverState_ = node.dependenciesState_\n\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\n\nexport function removeObserver(observable: IObservable, node: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers_.delete(node)\n    if (observable.observers_.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable)\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\n\nexport function queueForUnobservation(observable: IObservable) {\n    if (observable.isPendingUnobservation_ === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation_ = true\n        globalState.pendingUnobservations.push(observable)\n    }\n}\n\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nexport function startBatch() {\n    globalState.inBatch++\n}\n\nexport function endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions()\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i]\n            observable.isPendingUnobservation_ = false\n            if (observable.observers_.size === 0) {\n                if (observable.isBeingObserved_) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved_ = false\n                    observable.onBUO()\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend_()\n                }\n            }\n        }\n        globalState.pendingUnobservations = []\n    }\n}\n\nexport function reportObserved(observable: IObservable): boolean {\n    checkIfStateReadsAreAllowed(observable)\n\n    const derivation = globalState.trackingDerivation\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId_ !== observable.lastAccessedBy_) {\n            observable.lastAccessedBy_ = derivation.runId_\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving_![derivation.unboundDepsCount_++] = observable\n            if (!observable.isBeingObserved_ && globalState.trackingContext) {\n                observable.isBeingObserved_ = true\n                observable.onBO()\n            }\n        }\n        return true\n    } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable)\n    }\n\n    return false\n}\n\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n\n// Called by Atom when its value changes\nexport function propagateChanged(observable: IObservable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) return\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n            d.onBecomeStale_()\n        }\n        d.dependenciesState_ = IDerivationState_.STALE_\n    })\n    // invariantLOS(observable, \"changed end\");\n}\n\n// Called by ComputedValue when it recalculate and its value changed\nexport function propagateChangeConfirmed(observable: IObservable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) return\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n            d.dependenciesState_ = IDerivationState_.STALE_\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n        } else if (\n            d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n        ) {\n            observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n        }\n    })\n    // invariantLOS(observable, \"confirmed end\");\n}\n\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nexport function propagateMaybeChanged(observable: IObservable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) return\n    observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_\n            d.onBecomeStale_()\n        }\n    })\n    // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation: IDerivation, observable: IObservable) {\n    console.log(\n        `[mobx.trace] '${derivation.name_}' is invalidated due to a change in: '${observable.name_}'`\n    )\n    if (derivation.isTracing_ === TraceMode.BREAK) {\n        const lines = []\n        printDepTree(getDependencyTree(derivation), lines, 1)\n\n        // prettier-ignore\n        new Function(\n`debugger;\n/*\nTracing '${derivation.name_}'\n\nYou are entering this break point because derivation '${derivation.name_}' is being traced and '${observable.name_}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)()\n    }\n}\n\nfunction printDepTree(tree: IDependencyTree, lines: string[], depth: number) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\")\n        return\n    }\n    lines.push(`${\"\\t\".repeat(depth - 1)}${tree.name}`)\n    if (tree.dependencies) tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1))\n}\n", "import {\n    $mobx,\n    IDerivation,\n    IDerivationState_,\n    IObservable,\n    Lambda,\n    TraceMode,\n    clearObserving,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    shouldCompute,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    trace,\n    trackDerivedFunction\n} from \"../internal\"\n\n/**\n * Reactions are a special kind of derivations. Several things distinguishes them from normal reactive computations\n *\n * 1) They will always run, whether they are used by other computations or not.\n * This means that they are very suitable for triggering side effects like logging, updating the DOM and making network requests.\n * 2) They are not observable themselves\n * 3) They will always run after any 'normal' derivations\n * 4) They are allowed to change the state and thereby triggering themselves again, as long as they make sure the state propagates to a stable state in a reasonable amount of iterations.\n *\n * The state machine of a Reaction is as follows:\n *\n * 1) after creating, the reaction should be started by calling `runReaction` or by scheduling it (see also `autorun`)\n * 2) the `onInvalidate` handler should somehow result in a call to `this.track(someFunction)`\n * 3) all observables accessed in `someFunction` will be observed by this reaction.\n * 4) as soon as some of the dependencies has changed the Reaction will be rescheduled for another run (after the current mutation or transaction). `isScheduled` will yield true once a dependency is stale and during this period\n * 5) `onInvalidate` will be called, and we are back at step 1.\n *\n */\n\nexport interface IReactionPublic {\n    dispose(): void\n    trace(enterBreakPoint?: boolean): void\n}\n\nexport interface IReactionDisposer {\n    (): void\n    $mobx: Reaction\n}\n\nexport class Reaction implements IDerivation, IReactionPublic {\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_: IObservable[] = []\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    diffValue_ = 0\n    runId_ = 0\n    unboundDepsCount_ = 0\n    isDisposed_ = false\n    isScheduled_ = false\n    isTrackPending_ = false\n    isRunning_ = false\n    isTracing_: TraceMode = TraceMode.NONE\n\n    constructor(\n        public name_: string = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\",\n        private onInvalidate_: () => void,\n        private errorHandler_?: (error: any, derivation: IDerivation) => void,\n        public requiresObservable_ = false\n    ) {}\n\n    onBecomeStale_() {\n        this.schedule_()\n    }\n\n    schedule_() {\n        if (!this.isScheduled_) {\n            this.isScheduled_ = true\n            globalState.pendingReactions.push(this)\n            runReactions()\n        }\n    }\n\n    isScheduled() {\n        return this.isScheduled_\n    }\n\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction_() {\n        if (!this.isDisposed_) {\n            startBatch()\n            this.isScheduled_ = false\n            const prev = globalState.trackingContext\n            globalState.trackingContext = this\n            if (shouldCompute(this)) {\n                this.isTrackPending_ = true\n\n                try {\n                    this.onInvalidate_()\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name_,\n                            type: \"scheduled-reaction\"\n                        })\n                    }\n                } catch (e) {\n                    this.reportExceptionInDerivation_(e)\n                }\n            }\n            globalState.trackingContext = prev\n            endBatch()\n        }\n    }\n\n    track(fn: () => void) {\n        if (this.isDisposed_) {\n            return\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch()\n        const notify = isSpyEnabled()\n        let startTime\n        if (__DEV__ && notify) {\n            startTime = Date.now()\n            spyReportStart({\n                name: this.name_,\n                type: \"reaction\"\n            })\n        }\n        this.isRunning_ = true\n        const prevReaction = globalState.trackingContext // reactions could create reactions...\n        globalState.trackingContext = this\n        const result = trackDerivedFunction(this, fn, undefined)\n        globalState.trackingContext = prevReaction\n        this.isRunning_ = false\n        this.isTrackPending_ = false\n        if (this.isDisposed_) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this)\n        }\n        if (isCaughtException(result)) this.reportExceptionInDerivation_(result.cause)\n        if (__DEV__ && notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            })\n        }\n        endBatch()\n    }\n\n    reportExceptionInDerivation_(error: any) {\n        if (this.errorHandler_) {\n            this.errorHandler_(error, this)\n            return\n        }\n\n        if (globalState.disableErrorBoundaries) throw error\n\n        const message = __DEV__\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\n            : `[mobx] uncaught error in '${this}'`\n        if (!globalState.suppressReactionErrors) {\n            console.error(message, error)\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        } else if (__DEV__) console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`) // prettier-ignore\n\n        if (__DEV__ && isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name_,\n                message,\n                error: \"\" + error\n            })\n        }\n\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this))\n    }\n\n    dispose() {\n        if (!this.isDisposed_) {\n            this.isDisposed_ = true\n            if (!this.isRunning_) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch()\n                clearObserving(this)\n                endBatch()\n            }\n        }\n    }\n\n    getDisposer_(): IReactionDisposer {\n        const r = this.dispose.bind(this) as IReactionDisposer\n        r[$mobx] = this\n        return r\n    }\n\n    toString() {\n        return `Reaction[${this.name_}]`\n    }\n\n    trace(enterBreakPoint: boolean = false) {\n        trace(this, enterBreakPoint)\n    }\n}\n\nexport function onReactionError(handler: (error: any, derivation: IDerivation) => void): Lambda {\n    globalState.globalReactionErrorHandlers.push(handler)\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler)\n        if (idx >= 0) globalState.globalReactionErrorHandlers.splice(idx, 1)\n    }\n}\n\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100\n\nlet reactionScheduler: (fn: () => void) => void = f => f()\n\nexport function runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions) return\n    reactionScheduler(runReactionsHelper)\n}\n\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true\n    const allReactions = globalState.pendingReactions\n    let iterations = 0\n\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\n                __DEV__\n                    ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                          ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\n                    : `[mobx] cycle in reaction: ${allReactions[0]}`\n            )\n            allReactions.splice(0) // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0)\n        for (let i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction_()\n    }\n    globalState.isRunningReactions = false\n}\n\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction)\n\nexport function setReactionScheduler(fn: (f: () => void) => void) {\n    const baseScheduler = reactionScheduler\n    reactionScheduler = f => fn(() => baseScheduler(f))\n}\n", "import { IComputedDidChange } from \"./computedvalue\"\nimport { IValueDidChange, IBoxDidChange } from \"./../types/observablevalue\"\nimport { IObjectDidChange } from \"./../types/observableobject\"\nimport { IArrayDidChange } from \"./../types/observablearray\"\nimport { Lambda, globalState, once, ISetDidChange, IMapDidChange } from \"../internal\"\n\nexport function isSpyEnabled() {\n    return __DEV__ && !!globalState.spyListeners.length\n}\n\nexport type PureSpyEvent =\n    | { type: \"action\"; name: string; object: unknown; arguments: unknown[] }\n    | { type: \"scheduled-reaction\"; name: string }\n    | { type: \"reaction\"; name: string }\n    | { type: \"error\"; name: string; message: string; error: string }\n    | IComputedDidChange<unknown>\n    | IObjectDidChange<unknown>\n    | IArrayDidChange<unknown>\n    | IMapDidChange<unknown, unknown>\n    | ISetDidChange<unknown>\n    | IValueDidChange<unknown>\n    | IBoxDidChange<unknown>\n    | { type: \"report-end\"; spyReportEnd: true; time?: number }\n\ntype SpyEvent = PureSpyEvent & { spyReportStart?: true }\n\nexport function spyReport(event: SpyEvent) {\n    if (!__DEV__) return // dead code elimination can do the rest\n    if (!globalState.spyListeners.length) return\n    const listeners = globalState.spyListeners\n    for (let i = 0, l = listeners.length; i < l; i++) listeners[i](event)\n}\n\nexport function spyReportStart(event: PureSpyEvent) {\n    if (!__DEV__) return\n    const change = { ...event, spyReportStart: true as const }\n    spyReport(change)\n}\n\nconst END_EVENT: SpyEvent = { type: \"report-end\", spyReportEnd: true }\n\nexport function spyReportEnd(change?: { time?: number }) {\n    if (!__DEV__) return\n    if (change) spyReport({ ...change, type: \"report-end\", spyReportEnd: true })\n    else spyReport(END_EVENT)\n}\n\nexport function spy(listener: (change: SpyEvent) => void): Lambda {\n    if (!__DEV__) {\n        console.warn(`[mobx.spy] Is a no-op in production builds`)\n        return function () {}\n    } else {\n        globalState.spyListeners.push(listener)\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener)\n        })\n    }\n}\n", "import {\n    createAction,\n    executeAction,\n    Annotation,\n    storeAnnotation,\n    die,\n    isFunction,\n    isStringish,\n    createDecoratorAnnotation,\n    createActionAnnotation\n} from \"../internal\"\n\nexport const ACTION = \"action\"\nexport const ACTION_BOUND = \"action.bound\"\nexport const AUTOACTION = \"autoAction\"\nexport const AUTOACTION_BOUND = \"autoAction.bound\"\n\nconst DEFAULT_ACTION_NAME = \"<unnamed action>\"\n\nconst actionAnnotation = createActionAnnotation(ACTION)\nconst actionBoundAnnotation = createActionAnnotation(ACTION_BOUND, {\n    bound: true\n})\nconst autoActionAnnotation = createActionAnnotation(AUTOACTION, {\n    autoAction: true\n})\nconst autoActionBoundAnnotation = createActionAnnotation(AUTOACTION_BOUND, {\n    autoAction: true,\n    bound: true\n})\n\nexport interface IActionFactory extends Annotation, PropertyDecorator {\n    // nameless actions\n    <T extends Function | undefined | null>(fn: T): T\n    // named actions\n    <T extends Function | undefined | null>(name: string, fn: T): T\n\n    // named decorator\n    (customName: string): PropertyDecorator & Annotation\n\n    // decorator (name no longer supported)\n    bound: Annotation & PropertyDecorator\n}\n\nfunction createActionFactory(autoAction: boolean): IActionFactory {\n    const res: IActionFactory = function action(arg1, arg2?): any {\n        // action(fn() {})\n        if (isFunction(arg1))\n            return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction)\n        // action(\"name\", fn() {})\n        if (isFunction(arg2)) return createAction(arg1, arg2, autoAction)\n        // @action\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation)\n        }\n        // action(\"name\") & @action(\"name\")\n        if (isStringish(arg1)) {\n            return createDecoratorAnnotation(\n                createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n                    name: arg1,\n                    autoAction\n                })\n            )\n        }\n\n        if (__DEV__) die(\"Invalid arguments for `action`\")\n    } as IActionFactory\n    return res\n}\n\nexport const action: IActionFactory = createActionFactory(false)\nObject.assign(action, actionAnnotation)\nexport const autoAction: IActionFactory = createActionFactory(true)\nObject.assign(autoAction, autoActionAnnotation)\n\naction.bound = createDecoratorAnnotation(actionBoundAnnotation)\nautoAction.bound = createDecoratorAnnotation(autoActionBoundAnnotation)\n\nexport function runInAction<T>(fn: () => T): T {\n    return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined)\n}\n\nexport function isAction(thing: any) {\n    return isFunction(thing) && thing.isMobxAction === true\n}\n", "import {\n    EMPTY_OBJECT,\n    IEqualsComparer,\n    IReactionDisposer,\n    IReactionPublic,\n    Lambda,\n    Reaction,\n    action,\n    comparer,\n    getNextId,\n    isAction,\n    isFunction,\n    isPlainObject,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IAutorunOptions {\n    delay?: number\n    name?: string\n    /**\n     * Experimental.\n     * Warns if the view doesn't track observables\n     */\n    requiresObservable?: boolean\n    scheduler?: (callback: () => void) => any\n    onError?: (error: any) => void\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nexport function autorun(\n    view: (r: IReactionPublic) => any,\n    opts: IAutorunOptions = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(view)) die(\"Autorun expects a function as first argument\")\n        if (isAction(view)) die(\"Autorun does not accept actions since actions are untrackable\")\n    }\n\n    const name: string =\n        opts?.name ?? (__DEV__ ? (view as any).name || \"Autorun@\" + getNextId() : \"Autorun\")\n    const runSync = !opts.scheduler && !opts.delay\n    let reaction: Reaction\n\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(\n            name,\n            function (this: Reaction) {\n                this.track(reactionRunner)\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    } else {\n        const scheduler = createSchedulerFromOptions(opts)\n        // debounced autorun\n        let isScheduled = false\n\n        reaction = new Reaction(\n            name,\n            () => {\n                if (!isScheduled) {\n                    isScheduled = true\n                    scheduler(() => {\n                        isScheduled = false\n                        if (!reaction.isDisposed_) reaction.track(reactionRunner)\n                    })\n                }\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    }\n\n    function reactionRunner() {\n        view(reaction)\n    }\n\n    reaction.schedule_()\n    return reaction.getDisposer_()\n}\n\nexport type IReactionOptions<T, FireImmediately extends boolean> = IAutorunOptions & {\n    fireImmediately?: FireImmediately\n    equals?: IEqualsComparer<T>\n}\n\nconst run = (f: Lambda) => f()\n\nfunction createSchedulerFromOptions(opts: IAutorunOptions) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n        ? (f: Lambda) => setTimeout(f, opts.delay!)\n        : run\n}\n\nexport function reaction<T, FireImmediately extends boolean = false>(\n    expression: (r: IReactionPublic) => T,\n    effect: (\n        arg: T,\n        prev: FireImmediately extends true ? T | undefined : T,\n        r: IReactionPublic\n    ) => void,\n    opts: IReactionOptions<T, FireImmediately> = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(expression) || !isFunction(effect))\n            die(\"First and second argument to reaction should be functions\")\n        if (!isPlainObject(opts)) die(\"Third argument of reactions should be an object\")\n    }\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\")\n    const effectAction = action(\n        name,\n        opts.onError ? wrapErrorHandler(opts.onError, effect) : effect\n    )\n    const runSync = !opts.scheduler && !opts.delay\n    const scheduler = createSchedulerFromOptions(opts)\n\n    let firstTime = true\n    let isScheduled = false\n    let value: T\n    let oldValue: T | undefined\n\n    const equals: IEqualsComparer<T> = (opts as any).compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default\n\n    const r = new Reaction(\n        name,\n        () => {\n            if (firstTime || runSync) {\n                reactionRunner()\n            } else if (!isScheduled) {\n                isScheduled = true\n                scheduler!(reactionRunner)\n            }\n        },\n        opts.onError,\n        opts.requiresObservable\n    )\n\n    function reactionRunner() {\n        isScheduled = false\n        if (r.isDisposed_) return\n        let changed: boolean = false\n        r.track(() => {\n            const nextValue = allowStateChanges(false, () => expression(r))\n            changed = firstTime || !equals(value, nextValue)\n            oldValue = value\n            value = nextValue\n        })\n\n        // This casting is nesessary as TS cannot infer proper type in current funciton implementation\n        type OldValue = FireImmediately extends true ? T | undefined : T\n        if (firstTime && opts.fireImmediately!) effectAction(value, oldValue as OldValue, r)\n        else if (!firstTime && changed) effectAction(value, oldValue as OldValue, r)\n        firstTime = false\n    }\n\n    r.schedule_()\n    return r.getDisposer_()\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments)\n        } catch (e) {\n            errorHandler.call(this, e)\n        }\n    }\n}\n", "import {\n    IComputedValue,\n    IObservable,\n    IObservableArray,\n    Lambda,\n    ObservableMap,\n    getAtom,\n    ObservableSet,\n    isFunction,\n    IObservableValue\n} from \"../internal\"\n\nconst ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"\n\nexport function onBecomeObserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3)\n}\n\nexport function onBecomeUnobserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3)\n}\n\nfunction interceptHook(hook: \"onBO\" | \"onBUO\", thing, arg2, arg3) {\n    const atom: IObservable =\n        typeof arg3 === \"function\" ? getAtom(thing, arg2) : (getAtom(thing) as any)\n    const cb = isFunction(arg3) ? arg3 : arg2\n    const listenersKey = `${hook}L` as \"onBOL\" | \"onBUOL\"\n\n    if (atom[listenersKey]) {\n        atom[listenersKey]!.add(cb)\n    } else {\n        atom[listenersKey] = new Set<Lambda>([cb])\n    }\n\n    return function () {\n        const hookListeners = atom[listenersKey]\n        if (hookListeners) {\n            hookListeners.delete(cb)\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey]\n            }\n        }\n    }\n}\n", "import { globalState, isolateGlobalState, setReactionScheduler } from \"../internal\"\n\nconst NEVER = \"never\"\nconst ALWAYS = \"always\"\nconst OBSERVED = \"observed\"\n// const IF_AVAILABLE = \"ifavailable\"\n\nexport function configure(options: {\n    enforceActions?: \"never\" | \"always\" | \"observed\"\n    computedRequiresReaction?: boolean\n    /**\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable?: boolean\n    /**\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction?: boolean\n    isolateGlobalState?: boolean\n    disableErrorBoundaries?: boolean\n    safeDescriptors?: boolean\n    reactionScheduler?: (f: () => void) => void\n    useProxies?: \"always\" | \"never\" | \"ifavailable\"\n}): void {\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState()\n    }\n    const { useProxies, enforceActions } = options\n    if (useProxies !== undefined) {\n        globalState.useProxies =\n            useProxies === ALWAYS\n                ? true\n                : useProxies === NEVER\n                ? false\n                : typeof Proxy !== \"undefined\"\n    }\n    if (useProxies === \"ifavailable\") globalState.verifyProxies = true\n    if (enforceActions !== undefined) {\n        const ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED\n        globalState.enforceActions = ea\n        globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true\n    }\n    ;[\n        \"computedRequiresReaction\",\n        \"reactionRequiresObservable\",\n        \"observableRequiresReaction\",\n        \"disableErrorBoundaries\",\n        \"safeDescriptors\"\n    ].forEach(key => {\n        if (key in options) globalState[key] = !!options[key]\n    })\n    globalState.allowStateReads = !globalState.observableRequiresReaction\n    if (__DEV__ && globalState.disableErrorBoundaries === true) {\n        console.warn(\n            \"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\"\n        )\n    }\n    if (options.reactionScheduler) {\n        setReactionScheduler(options.reactionScheduler)\n    }\n}\n", "import {\n    CreateObservableOptions,\n    isObservableMap,\n    AnnotationsMap,\n    startBatch,\n    endBatch,\n    asObservableObject,\n    isPlainObject,\n    ObservableObjectAdministration,\n    isObservable,\n    die,\n    getOwnPropertyDescriptors,\n    $mobx,\n    ownKeys\n} from \"../internal\"\n\nexport function extendObservable<A extends Object, B extends Object>(\n    target: A,\n    properties: B,\n    annotations?: AnnotationsMap<B, never>,\n    options?: CreateObservableOptions\n): A & B {\n    if (__DEV__) {\n        if (arguments.length > 4) die(\"'extendObservable' expected 2-4 arguments\")\n        if (typeof target !== \"object\")\n            die(\"'extendObservable' expects an object as first argument\")\n        if (isObservableMap(target))\n            die(\"'extendObservable' should not be used on maps, use map.merge instead\")\n        if (!isPlainObject(properties))\n            die(`'extendObservable' only accepts plain objects as second argument`)\n        if (isObservable(properties) || isObservable(annotations))\n            die(`Extending an object with another observable (object) is not supported`)\n    }\n    // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n    const descriptors = getOwnPropertyDescriptors(properties)\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        ownKeys(descriptors).forEach(key => {\n            adm.extend_(\n                key,\n                descriptors[key as any],\n                // must pass \"undefined\" for { key: undefined }\n                !annotations ? true : key in annotations ? annotations[key] : true\n            )\n        })\n    } finally {\n        endBatch()\n    }\n    return target as any\n}\n", "import { IDepTreeNode, getAtom, getObservers, hasObservers } from \"../internal\"\n\nexport interface IDependencyTree {\n    name: string\n    dependencies?: IDependencyTree[]\n}\n\nexport interface IObserverTree {\n    name: string\n    observers?: IObserverTree[]\n}\n\nexport function getDependencyTree(thing: any, property?: string): IDependencyTree {\n    return nodeToDependencyTree(getAtom(thing, property))\n}\n\nfunction nodeToDependencyTree(node: IDepTreeNode): IDependencyTree {\n    const result: IDependencyTree = {\n        name: node.name_\n    }\n    if (node.observing_ && node.observing_.length > 0)\n        result.dependencies = unique(node.observing_).map(nodeToDependencyTree)\n    return result\n}\n\nexport function getObserverTree(thing: any, property?: string): IObserverTree {\n    return nodeToObserverTree(getAtom(thing, property))\n}\n\nfunction nodeToObserverTree(node: IDepTreeNode): IObserverTree {\n    const result: IObserverTree = {\n        name: node.name_\n    }\n    if (hasObservers(node as any))\n        result.observers = Array.from(<any>getObservers(node as any)).map(<any>nodeToObserverTree)\n    return result\n}\n\nfunction unique<T>(list: T[]): T[] {\n    return Array.from(new Set(list))\n}\n", "import {\n    action,\n    noop,\n    die,\n    isFunction,\n    Annotation,\n    isStringish,\n    storeAnnotation,\n    createFlowAnnotation,\n    createDecoratorAnnotation\n} from \"../internal\"\n\nexport const FLOW = \"flow\"\n\nlet generatorId = 0\n\nexport function FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\"\n}\nFlowCancellationError.prototype = Object.create(Error.prototype)\n\nexport function isFlowCancellationError(error: Error) {\n    return error instanceof FlowCancellationError\n}\n\nexport type CancellablePromise<T> = Promise<T> & { cancel(): void }\n\ninterface Flow extends Annotation, PropertyDecorator {\n    <R, Args extends any[]>(\n        generator: (...args: Args) => Generator<any, R, any> | AsyncGenerator<any, R, any>\n    ): (...args: Args) => CancellablePromise<R>\n    bound: Annotation & PropertyDecorator\n}\n\nconst flowAnnotation = createFlowAnnotation(\"flow\")\nconst flowBoundAnnotation = createFlowAnnotation(\"flow.bound\", { bound: true })\n\nexport const flow: Flow = Object.assign(\n    function flow(arg1, arg2?) {\n        // @flow\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, flowAnnotation)\n        }\n        // flow(fn)\n        if (__DEV__ && arguments.length !== 1)\n            die(`Flow expects single argument with generator function`)\n        const generator = arg1\n        const name = generator.name || \"<unnamed flow>\"\n\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        const res = function () {\n            const ctx = this\n            const args = arguments\n            const runId = ++generatorId\n            const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args)\n            let rejector: (error: any) => void\n            let pendingPromise: CancellablePromise<any> | undefined = undefined\n\n            const promise = new Promise(function (resolve, reject) {\n                let stepId = 0\n                rejector = reject\n\n                function onFulfilled(res: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.next\n                        ).call(gen, res)\n                    } catch (e) {\n                        return reject(e)\n                    }\n\n                    next(ret)\n                }\n\n                function onRejected(err: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.throw!\n                        ).call(gen, err)\n                    } catch (e) {\n                        return reject(e)\n                    }\n                    next(ret)\n                }\n\n                function next(ret: any) {\n                    if (isFunction(ret?.then)) {\n                        // an async iterator\n                        ret.then(next, reject)\n                        return\n                    }\n                    if (ret.done) return resolve(ret.value)\n                    pendingPromise = Promise.resolve(ret.value) as any\n                    return pendingPromise!.then(onFulfilled, onRejected)\n                }\n\n                onFulfilled(undefined) // kick off the process\n            }) as any\n\n            promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n                try {\n                    if (pendingPromise) cancelPromise(pendingPromise)\n                    // Finally block can return (or yield) stuff..\n                    const res = gen.return!(undefined as any)\n                    // eat anything that promise would do, it's cancelled!\n                    const yieldedPromise = Promise.resolve(res.value)\n                    yieldedPromise.then(noop, noop)\n                    cancelPromise(yieldedPromise) // maybe it can be cancelled :)\n                    // reject our original promise\n                    rejector(new FlowCancellationError())\n                } catch (e) {\n                    rejector(e) // there could be a throwing finally block\n                }\n            })\n            return promise\n        }\n        res.isMobXFlow = true\n        return res\n    } as any,\n    flowAnnotation\n)\n\nflow.bound = createDecoratorAnnotation(flowBoundAnnotation)\n\nfunction cancelPromise(promise) {\n    if (isFunction(promise.cancel)) promise.cancel()\n}\n\nexport function flowResult<T>(\n    result: T\n): T extends Generator<any, infer R, any>\n    ? CancellablePromise<R>\n    : T extends CancellablePromise<any>\n    ? T\n    : never {\n    return result as any // just tricking TypeScript :)\n}\n\nexport function isFlow(fn: any): boolean {\n    return fn?.isMobXFlow === true\n}\n", "import {\n    IObservableArray,\n    IObservableValue,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isObservableValue,\n    ObservableSet,\n    die,\n    isStringish\n} from \"../internal\"\n\nexport type ReadInterceptor<T> = (value: any) => T\n\n/** Experimental feature right now, tested indirectly via Mobx-State-Tree */\nexport function interceptReads<T>(value: IObservableValue<T>, handler: ReadInterceptor<T>): Lambda\nexport function interceptReads<T>(\n    observableArray: IObservableArray<T>,\n    handler: ReadInterceptor<T>\n): Lambda\nexport function interceptReads<K, V>(\n    observableMap: ObservableMap<K, V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads<V>(\n    observableSet: ObservableSet<V>,\n    handler: ReadInterceptor<V>\n): Lambda\nexport function interceptReads(\n    object: Object,\n    property: string,\n    handler: ReadInterceptor<any>\n): Lambda\nexport function interceptReads(thing, propOrHandler?, handler?): Lambda {\n    let target\n    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n        target = getAdministration(thing)\n    } else if (isObservableObject(thing)) {\n        if (__DEV__ && !isStringish(propOrHandler))\n            return die(\n                `InterceptReads can only be used with a specific property, not with an object in general`\n            )\n        target = getAdministration(thing, propOrHandler)\n    } else if (__DEV__) {\n        return die(`Expected observable map, object or array as first array`)\n    }\n    if (__DEV__ && target.dehancer !== undefined)\n        return die(`An intercept reader was already established`)\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler\n    return () => {\n        target.dehancer = undefined\n    }\n}\n", "import {\n    IArrayWillChange,\n    IArrayWillSplice,\n    IInterceptor,\n    IMapWillChange,\n    IObjectWillChange,\n    IObservableArray,\n    IObservableValue,\n    IValueWillChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetWillChange,\n    isFunction\n} from \"../internal\"\n\nexport function intercept<T>(\n    value: IObservableValue<T>,\n    handler: IInterceptor<IValueWillChange<T>>\n): Lambda\nexport function intercept<T>(\n    observableArray: IObservableArray<T>,\n    handler: IInterceptor<IArrayWillChange<T> | IArrayWillSplice<T>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V>,\n    handler: IInterceptor<IMapWillChange<K, V>>\n): Lambda\nexport function intercept<V>(\n    observableMap: ObservableSet<V>,\n    handler: IInterceptor<ISetWillChange<V>>\n): Lambda\nexport function intercept<K, V>(\n    observableMap: ObservableMap<K, V>,\n    property: K,\n    handler: IInterceptor<IValueWillChange<V>>\n): Lambda\nexport function intercept(object: object, handler: IInterceptor<IObjectWillChange>): Lambda\nexport function intercept<T extends object, K extends keyof T>(\n    object: T,\n    property: K,\n    handler: IInterceptor<IValueWillChange<any>>\n): Lambda\nexport function intercept(thing, propOrHandler?, handler?): Lambda {\n    if (isFunction(handler)) return interceptProperty(thing, propOrHandler, handler)\n    else return interceptInterceptable(thing, propOrHandler)\n}\n\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration(thing).intercept_(handler)\n}\n\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration(thing, property).intercept_(handler)\n}\n", "import { $mobx, getAtom, isComputedValue, isObservableObject, die, isStringish } from \"../internal\"\n\nexport function _isComputed(value, property?: PropertyKey): boolean {\n    if (property === undefined) {\n        return isComputedValue(value)\n    }\n    if (isObservableObject(value) === false) return false\n    if (!value[$mobx].values_.has(property)) return false\n    const atom = getAtom(value, property)\n    return isComputedValue(atom)\n}\n\nexport function isComputed(value: any): boolean {\n    if (__DEV__ && arguments.length > 1)\n        return die(\n            `isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property`\n        )\n    return _isComputed(value)\n}\n\nexport function isComputedProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName))\n        return die(`isComputed expected a property name as second argument`)\n    return _isComputed(value, propName)\n}\n", "import {\n    $mobx,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    die,\n    isStringish\n} from \"../internal\"\n\nfunction _isObservable(value, property?: PropertyKey): boolean {\n    if (!value) return false\n    if (property !== undefined) {\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value)))\n            return die(\n                \"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\"\n            )\n        if (isObservableObject(value)) {\n            return value[$mobx].values_.has(property)\n        }\n        return false\n    }\n    // For first check, see #701\n    return (\n        isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value)\n    )\n}\n\nexport function isObservable(value: any): boolean {\n    if (__DEV__ && arguments.length !== 1)\n        die(\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`\n        )\n    return _isObservable(value)\n}\n\nexport function isObservableProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) return die(`expected a property name as second argument`)\n    return _isObservable(value, propName)\n}\n", "import {\n    $mobx,\n    IIsObservableObject,\n    IObservableArray,\n    ObservableMap,\n    ObservableSet,\n    ObservableObjectAdministration,\n    endBatch,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    startBatch,\n    die\n} from \"../internal\"\n\nexport function keys<K>(map: ObservableMap<K, any>): ReadonlyArray<K>\nexport function keys<T>(ar: IObservableArray<T>): ReadonlyArray<number>\nexport function keys<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function keys<T extends Object>(obj: T): ReadonlyArray<PropertyKey>\nexport function keys(obj: any): any {\n    if (isObservableObject(obj)) {\n        return (((obj as any) as IIsObservableObject)[\n            $mobx\n        ] as ObservableObjectAdministration).keys_()\n    }\n    if (isObservableMap(obj) || isObservableSet(obj)) {\n        return Array.from(obj.keys())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((_, index) => index)\n    }\n    die(5)\n}\n\nexport function values<K, T>(map: ObservableMap<K, T>): ReadonlyArray<T>\nexport function values<T>(set: ObservableSet<T>): ReadonlyArray<T>\nexport function values<T>(ar: IObservableArray<T>): ReadonlyArray<T>\nexport function values<T = any>(obj: T): ReadonlyArray<T extends object ? T[keyof T] : any>\nexport function values(obj: any): string[] {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => obj[key])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => obj.get(key))\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.values())\n    }\n    if (isObservableArray(obj)) {\n        return obj.slice()\n    }\n    die(6)\n}\n\nexport function entries<K, T>(map: ObservableMap<K, T>): ReadonlyArray<[K, T]>\nexport function entries<T>(set: ObservableSet<T>): ReadonlyArray<[T, T]>\nexport function entries<T>(ar: IObservableArray<T>): ReadonlyArray<[number, T]>\nexport function entries<T = any>(\n    obj: T\n): ReadonlyArray<[string, T extends object ? T[keyof T] : any]>\nexport function entries(obj: any): any {\n    if (isObservableObject(obj)) {\n        return keys(obj).map(key => [key, obj[key]])\n    }\n    if (isObservableMap(obj)) {\n        return keys(obj).map(key => [key, obj.get(key)])\n    }\n    if (isObservableSet(obj)) {\n        return Array.from(obj.entries())\n    }\n    if (isObservableArray(obj)) {\n        return obj.map((key, index) => [index, key])\n    }\n    die(7)\n}\n\nexport function set<V>(obj: ObservableMap<PropertyKey, V>, values: { [key: string]: V })\nexport function set<K, V>(obj: ObservableMap<K, V>, key: K, value: V)\nexport function set<T>(obj: ObservableSet<T>, value: T)\nexport function set<T>(obj: IObservableArray<T>, index: number, value: T)\nexport function set<T extends Object>(obj: T, values: { [key: string]: any })\nexport function set<T extends Object>(obj: T, key: PropertyKey, value: any)\nexport function set(obj: any, key: any, value?: any): void {\n    if (arguments.length === 2 && !isObservableSet(obj)) {\n        startBatch()\n        const values = key\n        try {\n            for (let key in values) set(obj, key, values[key])\n        } finally {\n            endBatch()\n        }\n        return\n    }\n    if (isObservableObject(obj)) {\n        ;((obj as any) as IIsObservableObject)[$mobx].set_(key, value)\n    } else if (isObservableMap(obj)) {\n        obj.set(key, value)\n    } else if (isObservableSet(obj)) {\n        obj.add(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") key = parseInt(key, 10)\n        if (key < 0) die(`Invalid index: '${key}'`)\n        startBatch()\n        if (key >= obj.length) obj.length = key + 1\n        obj[key] = value\n        endBatch()\n    } else die(8)\n}\n\nexport function remove<K, V>(obj: ObservableMap<K, V>, key: K)\nexport function remove<T>(obj: ObservableSet<T>, key: T)\nexport function remove<T>(obj: IObservableArray<T>, index: number)\nexport function remove<T extends Object>(obj: T, key: string)\nexport function remove(obj: any, key: any): void {\n    if (isObservableObject(obj)) {\n        ;((obj as any) as IIsObservableObject)[$mobx].delete_(key)\n    } else if (isObservableMap(obj)) {\n        obj.delete(key)\n    } else if (isObservableSet(obj)) {\n        obj.delete(key)\n    } else if (isObservableArray(obj)) {\n        if (typeof key !== \"number\") key = parseInt(key, 10)\n        obj.splice(key, 1)\n    } else {\n        die(9)\n    }\n}\n\nexport function has<K>(obj: ObservableMap<K, any>, key: K): boolean\nexport function has<T>(obj: ObservableSet<T>, key: T): boolean\nexport function has<T>(obj: IObservableArray<T>, index: number): boolean\nexport function has<T extends Object>(obj: T, key: string): boolean\nexport function has(obj: any, key: any): boolean {\n    if (isObservableObject(obj)) {\n        return ((obj as any) as IIsObservableObject)[$mobx].has_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.has(key)\n    } else if (isObservableSet(obj)) {\n        return obj.has(key)\n    } else if (isObservableArray(obj)) {\n        return key >= 0 && key < obj.length\n    }\n    die(10)\n}\n\nexport function get<K, V>(obj: ObservableMap<K, V>, key: K): V | undefined\nexport function get<T>(obj: IObservableArray<T>, index: number): T | undefined\nexport function get<T extends Object>(obj: T, key: string): any\nexport function get(obj: any, key: any): any {\n    if (!has(obj, key)) return undefined\n    if (isObservableObject(obj)) {\n        return ((obj as any) as IIsObservableObject)[$mobx].get_(key)\n    } else if (isObservableMap(obj)) {\n        return obj.get(key)\n    } else if (isObservableArray(obj)) {\n        return obj[key]\n    }\n    die(11)\n}\n\nexport function apiDefineProperty(obj: Object, key: PropertyKey, descriptor: PropertyDescriptor) {\n    if (isObservableObject(obj)) {\n        return ((obj as any) as IIsObservableObject)[$mobx].defineProperty_(key, descriptor)\n    }\n    die(39)\n}\n\nexport function apiOwnKeys(obj: Object) {\n    if (isObservableObject(obj)) {\n        return ((obj as any) as IIsObservableObject)[$mobx].ownKeys_()\n    }\n    die(38)\n}\n", "import {\n    IArrayDidChange,\n    IComputedValue,\n    IMapDidChange,\n    IObjectDidChange,\n    IObservableArray,\n    IObservableValue,\n    IValueDidChange,\n    Lambda,\n    ObservableMap,\n    getAdministration,\n    ObservableSet,\n    ISetDidChange,\n    isFunction\n} from \"../internal\"\n\nexport function observe<T>(\n    value: IObservableValue<T> | IComputedValue<T>,\n    listener: (change: IValueDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T>(\n    observableArray: IObservableArray<T>,\n    listener: (change: IArrayDidChange<T>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<V>(\n    observableMap: ObservableSet<V>,\n    listener: (change: ISetDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V>,\n    listener: (change: IMapDidChange<K, V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<K, V>(\n    observableMap: ObservableMap<K, V>,\n    property: K,\n    listener: (change: IValueDidChange<V>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(\n    object: Object,\n    listener: (change: IObjectDidChange) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe<T, K extends keyof T>(\n    object: T,\n    property: K,\n    listener: (change: IValueDidChange<T[K]>) => void,\n    fireImmediately?: boolean\n): Lambda\nexport function observe(thing, propOrCb?, cbOrFire?, fireImmediately?): Lambda {\n    if (isFunction(cbOrFire))\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately)\n    else return observeObservable(thing, propOrCb, cbOrFire)\n}\n\nfunction observeObservable(thing, listener, fireImmediately: boolean) {\n    return getAdministration(thing).observe_(listener, fireImmediately)\n}\n\nfunction observeObservableProperty(thing, property, listener, fireImmediately: boolean) {\n    return getAdministration(thing, property).observe_(listener, fireImmediately)\n}\n", "import {\n    isObservable,\n    isObservableArray,\n    isObservableValue,\n    isObservableMap,\n    isObservableSet,\n    isComputedValue,\n    die,\n    apiOwnKeys,\n    objectPrototype\n} from \"../internal\"\n\nfunction cache<K, V>(map: Map<any, any>, key: K, value: V): V {\n    map.set(key, value)\n    return value\n}\n\nfunction toJSHelper(source, __alreadySeen: Map<any, any>) {\n    if (\n        source == null ||\n        typeof source !== \"object\" ||\n        source instanceof Date ||\n        !isObservable(source)\n    )\n        return source\n\n    if (isObservableValue(source) || isComputedValue(source))\n        return toJSHelper(source.get(), __alreadySeen)\n    if (__alreadySeen.has(source)) {\n        return __alreadySeen.get(source)\n    }\n    if (isObservableArray(source)) {\n        const res = cache(__alreadySeen, source, new Array(source.length))\n        source.forEach((value, idx) => {\n            res[idx] = toJSHelper(value, __alreadySeen)\n        })\n        return res\n    }\n    if (isObservableSet(source)) {\n        const res = cache(__alreadySeen, source, new Set())\n        source.forEach(value => {\n            res.add(toJSHelper(value, __alreadySeen))\n        })\n        return res\n    }\n    if (isObservableMap(source)) {\n        const res = cache(__alreadySeen, source, new Map())\n        source.forEach((value, key) => {\n            res.set(key, toJSHelper(value, __alreadySeen))\n        })\n        return res\n    } else {\n        // must be observable object\n        const res = cache(__alreadySeen, source, {})\n        apiOwnKeys(source).forEach((key: any) => {\n            if (objectPrototype.propertyIsEnumerable.call(source, key)) {\n                res[key] = toJSHelper(source[key], __alreadySeen)\n            }\n        })\n        return res\n    }\n}\n\n/**\n * Basically, a deep clone, so that no reactive property will exist anymore.\n */\nexport function toJS<T>(source: T, options?: any): T {\n    if (__DEV__ && options) die(\"toJS no longer supports options\")\n    return toJSHelper(source, new Map())\n}\n", "import { TraceMode, die, getAtom, globalState } from \"../internal\"\n\nexport function trace(thing?: any, prop?: string, enterBreakPoint?: boolean): void\nexport function trace(thing?: any, enterBreakPoint?: boolean): void\nexport function trace(enterBreakPoint?: boolean): void\nexport function trace(...args: any[]): void {\n    if (!__DEV__) die(`trace() is not available in production builds`)\n    let enterBreakPoint = false\n    if (typeof args[args.length - 1] === \"boolean\") enterBreakPoint = args.pop()\n    const derivation = getAtomFromArgs(args)\n    if (!derivation) {\n        return die(\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`\n        )\n    }\n    if (derivation.isTracing_ === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name_}' tracing enabled`)\n    }\n    derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG\n}\n\nfunction getAtomFromArgs(args): any {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation\n        case 1:\n            return getAtom(args[0])\n        case 2:\n            return getAtom(args[0], args[1])\n    }\n}\n", "import { endBatch, startBatch } from \"../internal\"\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nexport function transaction<T>(action: () => T, thisArg = undefined): T {\n    startBatch()\n    try {\n        return action.apply(thisArg)\n    } finally {\n        endBatch()\n    }\n}\n", "import {\n    $mobx,\n    IReactionDisposer,\n    Lambda,\n    autorun,\n    createAction,\n    getNextId,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IWhenOptions {\n    name?: string\n    timeout?: number\n    onError?: (error: any) => void\n}\n\nexport function when(\n    predicate: () => boolean,\n    opts?: IWhenOptions\n): Promise<void> & { cancel(): void }\nexport function when(\n    predicate: () => boolean,\n    effect: Lambda,\n    opts?: IWhenOptions\n): IReactionDisposer\nexport function when(predicate: any, arg1?: any, arg2?: any): any {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\n        return whenPromise(predicate, arg1)\n    return _when(predicate, arg1, arg2 || {})\n}\n\nfunction _when(predicate: () => boolean, effect: Lambda, opts: IWhenOptions): IReactionDisposer {\n    let timeoutHandle: any\n    if (typeof opts.timeout === \"number\") {\n        const error = new Error(\"WHEN_TIMEOUT\")\n        timeoutHandle = setTimeout(() => {\n            if (!disposer[$mobx].isDisposed_) {\n                disposer()\n                if (opts.onError) opts.onError(error)\n                else throw error\n            }\n        }, opts.timeout)\n    }\n\n    opts.name = __DEV__ ? opts.name || \"When@\" + getNextId() : \"When\"\n    const effectAction = createAction(\n        __DEV__ ? opts.name + \"-effect\" : \"When-effect\",\n        effect as Function\n    )\n    // eslint-disable-next-line\n    var disposer = autorun(r => {\n        // predicate should not change state\n        let cond = allowStateChanges(false, predicate)\n        if (cond) {\n            r.dispose()\n            if (timeoutHandle) clearTimeout(timeoutHandle)\n            effectAction()\n        }\n    }, opts)\n    return disposer\n}\n\nfunction whenPromise(\n    predicate: () => boolean,\n    opts?: IWhenOptions\n): Promise<void> & { cancel(): void } {\n    if (__DEV__ && opts && opts.onError)\n        return die(`the options 'onError' and 'promise' cannot be combined`)\n    let cancel\n    const res = new Promise((resolve, reject) => {\n        let disposer = _when(predicate, resolve, { ...opts, onError: reject })\n        cancel = () => {\n            disposer()\n            reject(new Error(\"WHEN_CANCELLED\"))\n        }\n    })\n    ;(res as any).cancel = cancel\n    return res as any\n}\n", "import {\n    $mobx,\n    IIsObservableObject,\n    ObservableObjectAdministration,\n    warnAboutProxyRequirement,\n    assertProxies,\n    die,\n    isStringish,\n    globalState,\n    CreateObservableOptions,\n    asObservableObject\n} from \"../internal\"\n\nfunction getAdm(target): ObservableObjectAdministration {\n    return target[$mobx]\n}\n\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps: ProxyHandler<any> = {\n    has(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__ && globalState.trackingDerivation)\n            warnAboutProxyRequirement(\n                \"detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.\"\n            )\n        return getAdm(target).has_(name)\n    },\n    get(target: IIsObservableObject, name: PropertyKey): any {\n        return getAdm(target).get_(name)\n    },\n    set(target: IIsObservableObject, name: PropertyKey, value: any): boolean {\n        if (!isStringish(name)) return false\n        if (__DEV__ && !getAdm(target).values_.has(name)) {\n            warnAboutProxyRequirement(\n                \"add a new observable property through direct assignment. Use 'set' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).set_(name, value, true) ?? true\n    },\n    deleteProperty(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"delete properties from an observable object. Use 'remove' from 'mobx' instead.\"\n            )\n        }\n        if (!isStringish(name)) return false\n        // null (intercepted) -> true (success)\n        return getAdm(target).delete_(name, true) ?? true\n    },\n    defineProperty(\n        target: IIsObservableObject,\n        name: PropertyKey,\n        descriptor: PropertyDescriptor\n    ): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"define property on an observable object. Use 'defineProperty' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).defineProperty_(name, descriptor) ?? true\n    },\n    ownKeys(target: IIsObservableObject): PropertyKey[] {\n        if (__DEV__ && globalState.trackingDerivation)\n            warnAboutProxyRequirement(\n                \"iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.\"\n            )\n        return getAdm(target).ownKeys_()\n    },\n    preventExtensions(target) {\n        die(13)\n    }\n}\n\nexport function asDynamicObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    assertProxies()\n    target = asObservableObject(target, options)\n    return (target[$mobx].proxy_ ??= new Proxy(target, objectProxyTraps))\n}\n", "import { Lambda, once, untrackedEnd, untrackedStart, die } from \"../internal\"\n\nexport type IInterceptor<T> = (change: T) => T | null\n\nexport interface IInterceptable<T> {\n    interceptors_: IInterceptor<T>[] | undefined\n}\n\nexport function hasInterceptors(interceptable: IInterceptable<any>) {\n    return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0\n}\n\nexport function registerInterceptor<T>(\n    interceptable: IInterceptable<T>,\n    handler: IInterceptor<T>\n): Lambda {\n    const interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = [])\n    interceptors.push(handler)\n    return once(() => {\n        const idx = interceptors.indexOf(handler)\n        if (idx !== -1) interceptors.splice(idx, 1)\n    })\n}\n\nexport function interceptChange<T>(\n    interceptable: IInterceptable<T | null>,\n    change: T | null\n): T | null {\n    const prevU = untrackedStart()\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors_ || [])]\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change)\n            if (change && !(change as any).type) die(14)\n            if (!change) break\n        }\n        return change\n    } finally {\n        untrackedEnd(prevU)\n    }\n}\n", "import { Lambda, once, untrackedEnd, untrackedStart } from \"../internal\"\n\nexport interface IListenable {\n    changeListeners_: Function[] | undefined\n}\n\nexport function hasListeners(listenable: IListenable) {\n    return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0\n}\n\nexport function registerListener(listenable: IListenable, handler: Function): Lambda {\n    const listeners = listenable.changeListeners_ || (listenable.changeListeners_ = [])\n    listeners.push(handler)\n    return once(() => {\n        const idx = listeners.indexOf(handler)\n        if (idx !== -1) listeners.splice(idx, 1)\n    })\n}\n\nexport function notifyListeners<T>(listenable: IListenable, change: T) {\n    const prevU = untrackedStart()\n    let listeners = listenable.changeListeners_\n    if (!listeners) return\n    listeners = listeners.slice()\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change)\n    }\n    untrackedEnd(prevU)\n}\n", "import {\n    $mobx,\n    asObservableObject,\n    AnnotationsMap,\n    endBatch,\n    startBatch,\n    CreateObservableOptions,\n    ObservableObjectAdministration,\n    collectStoredAnnotations,\n    isPlainObject,\n    isObservableObject,\n    die,\n    ownKeys,\n    extendObservable,\n    addHiddenProp,\n    storedAnnotationsSymbol\n} from \"../internal\"\n\n// Hack based on https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-322267089\n// We need this, because otherwise, AdditionalKeys is going to be inferred to be any\n// set of superfluous keys. But, we rather want to get a compile error unless AdditionalKeys is\n// _explicity_ passed as generic argument\n// Fixes: https://github.com/mobxjs/mobx/issues/2325#issuecomment-691070022\ntype NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport function makeObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    annotations?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        if (__DEV__ && annotations && target[storedAnnotationsSymbol]) {\n            die(\n                `makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.`\n            )\n        }\n        // Default to decorators\n        annotations ??= collectStoredAnnotations(target)\n\n        // Annotate\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations![key]))\n    } finally {\n        endBatch()\n    }\n    return target\n}\n\n// proto[keysSymbol] = new Set<PropertyKey>()\nconst keysSymbol = Symbol(\"mobx-keys\")\n\nexport function makeAutoObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    overrides?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    if (__DEV__) {\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target)))\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`)\n        if (isObservableObject(target))\n            die(`makeAutoObservable can only be used on objects not already made observable`)\n    }\n\n    // Optimization: avoid visiting protos\n    // Assumes that annotation.make_/.extend_ works the same for plain objects\n    if (isPlainObject(target)) {\n        return extendObservable(target, target, overrides, options)\n    }\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n\n    // Optimization: cache keys on proto\n    // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n    if (!target[keysSymbol]) {\n        const proto = Object.getPrototypeOf(target)\n        const keys = new Set([...ownKeys(target), ...ownKeys(proto)])\n        keys.delete(\"constructor\")\n        keys.delete($mobx)\n        addHiddenProp(proto, keysSymbol, keys)\n    }\n\n    startBatch()\n    try {\n        target[keysSymbol].forEach(key =>\n            adm.make_(\n                key,\n                // must pass \"undefined\" for { key: undefined }\n                !overrides ? true : key in overrides ? overrides[key] : true\n            )\n        )\n    } finally {\n        endBatch()\n    }\n    return target\n}\n", "import {\n    $mobx,\n    Atom,\n    EMPTY_ARRAY,\n    IAtom,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    addHiddenFinalProp,\n    checkIfStateModificationsAreAllowed,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    assertProxies,\n    reserveArrayBuffer,\n    hasProp,\n    die,\n    globalState\n} from \"../internal\"\n\nconst SPLICE = \"splice\"\nexport const UPDATE = \"update\"\nexport const MAX_SPLICE_SIZE = 10000 // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nexport interface IObservableArray<T = any> extends Array<T> {\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[]\n    clear(): T[]\n    replace(newItems: T[]): T[]\n    remove(value: T): boolean\n    toJSON(): T[]\n}\n\ninterface IArrayBaseChange<T> {\n    object: IObservableArray<T>\n    observableKind: \"array\"\n    debugObjectName: string\n    index: number\n}\n\nexport type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>\n\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\n    type: \"update\"\n    newValue: T\n    oldValue: T\n}\n\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\n    type: \"splice\"\n    added: T[]\n    addedCount: number\n    removed: T[]\n    removedCount: number\n}\n\nexport interface IArrayWillChange<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"update\"\n    newValue: T\n}\n\nexport interface IArrayWillSplice<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"splice\"\n    added: T[]\n    removedCount: number\n}\n\nconst arrayTraps = {\n    get(target, name) {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === $mobx) return adm\n        if (name === \"length\") return adm.getArrayLength_()\n        if (typeof name === \"string\" && !isNaN(name as any)) {\n            return adm.get_(parseInt(name))\n        }\n        if (hasProp(arrayExtensions, name)) {\n            return arrayExtensions[name]\n        }\n        return target[name]\n    },\n    set(target, name, value): boolean {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === \"length\") {\n            adm.setArrayLength_(value)\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value\n        } else {\n            // numeric string\n            adm.set_(parseInt(name), value)\n        }\n        return true\n    },\n    preventExtensions() {\n        die(15)\n    }\n}\n\nexport class ObservableArrayAdministration\n    implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable {\n    atom_: IAtom\n    readonly values_: any[] = [] // this is the prop that gets proxied, so can't replace it!\n    interceptors_\n    changeListeners_\n    enhancer_: (newV: any, oldV: any | undefined) => any\n    dehancer: any\n    proxy_!: IObservableArray<any>\n    lastKnownLength_ = 0\n\n    constructor(\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        enhancer: IEnhancer<any>,\n        public owned_: boolean,\n        public legacyMode_: boolean\n    ) {\n        this.atom_ = new Atom(name)\n        this.enhancer_ = (newV, oldV) =>\n            enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\")\n    }\n\n    dehanceValue_(value: any): any {\n        if (this.dehancer !== undefined) return this.dehancer(value)\n        return value\n    }\n\n    dehanceValues_(values: any[]): any[] {\n        if (this.dehancer !== undefined && values.length > 0)\n            return values.map(this.dehancer) as any\n        return values\n    }\n\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda {\n        return registerInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>(this, handler)\n    }\n\n    observe_(\n        listener: (changeData: IArrayDidChange<any>) => void,\n        fireImmediately = false\n    ): Lambda {\n        if (fireImmediately) {\n            listener(<IArraySplice<any>>{\n                observableKind: \"array\",\n                object: this.proxy_ as any,\n                debugObjectName: this.atom_.name_,\n                type: \"splice\",\n                index: 0,\n                added: this.values_.slice(),\n                addedCount: this.values_.length,\n                removed: [],\n                removedCount: 0\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    getArrayLength_(): number {\n        this.atom_.reportObserved()\n        return this.values_.length\n    }\n\n    setArrayLength_(newLength: number) {\n        if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) die(\"Out of range: \" + newLength)\n        let currentLength = this.values_.length\n        if (newLength === currentLength) return\n        else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength)\n            for (let i = 0; i < newLength - currentLength; i++) newItems[i] = undefined // No Array.fill everywhere...\n            this.spliceWithArray_(currentLength, 0, newItems)\n        } else this.spliceWithArray_(newLength, currentLength - newLength)\n    }\n\n    updateArrayLength_(oldLength: number, delta: number) {\n        if (oldLength !== this.lastKnownLength_) die(16)\n        this.lastKnownLength_ += delta\n        if (this.legacyMode_ && delta > 0) reserveArrayBuffer(oldLength + delta + 1)\n    }\n\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        const length = this.values_.length\n\n        if (index === undefined) index = 0\n        else if (index > length) index = length\n        else if (index < 0) index = Math.max(0, length + index)\n\n        if (arguments.length === 1) deleteCount = length - index\n        else if (deleteCount === undefined || deleteCount === null) deleteCount = 0\n        else deleteCount = Math.max(0, Math.min(deleteCount, length - index))\n\n        if (newItems === undefined) newItems = EMPTY_ARRAY\n\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IArrayWillSplice<any>>(this as any, {\n                object: this.proxy_ as any,\n                type: SPLICE,\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            })\n            if (!change) return EMPTY_ARRAY\n            deleteCount = change.removedCount\n            newItems = change.added\n        }\n\n        newItems =\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined))\n        if (this.legacyMode_ || __DEV__) {\n            const lengthDelta = newItems.length - deleteCount\n            this.updateArrayLength_(length, lengthDelta) // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems)\n\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice_(index, newItems, res)\n        return this.dehanceValues_(res)\n    }\n\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[] {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values_.splice(index, deleteCount, ...newItems)\n        } else {\n            const res = this.values_.slice(index, index + deleteCount)\n            let oldItems = this.values_.slice(index + deleteCount)\n            this.values_.length = index + newItems.length - deleteCount\n            for (let i = 0; i < newItems.length; i++) this.values_[index + i] = newItems[i]\n            for (let i = 0; i < oldItems.length; i++)\n                this.values_[index + newItems.length + i] = oldItems[i]\n            return res\n        }\n    }\n\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArrayDidChange | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      type: UPDATE,\n                      debugObjectName: this.atom_.name_,\n                      index,\n                      newValue,\n                      oldValue\n                  } as const)\n                : null\n\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (__DEV__ && notifySpy) spyReportStart(change!)\n        this.atom_.reportChanged()\n        if (notify) notifyListeners(this, change)\n        if (__DEV__ && notifySpy) spyReportEnd()\n    }\n\n    notifyArraySplice_(index: number, added: any[], removed: any[]) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArraySplice | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      debugObjectName: this.atom_.name_,\n                      type: SPLICE,\n                      index,\n                      removed,\n                      added,\n                      removedCount: removed.length,\n                      addedCount: added.length\n                  } as const)\n                : null\n\n        if (__DEV__ && notifySpy) spyReportStart(change!)\n        this.atom_.reportChanged()\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify) notifyListeners(this, change)\n        if (__DEV__ && notifySpy) spyReportEnd()\n    }\n\n    get_(index: number): any | undefined {\n        if (index < this.values_.length) {\n            this.atom_.reportObserved()\n            return this.dehanceValue_(this.values_[index])\n        }\n        console.warn(\n            __DEV__\n                ? `[mobx] Out of bounds read: ${index}`\n                : `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`\n        )\n    }\n\n    set_(index: number, newValue: any) {\n        const values = this.values_\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(this.atom_)\n            const oldValue = values[index]\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IArrayWillChange<any>>(this as any, {\n                    type: UPDATE,\n                    object: this.proxy_ as any, // since \"this\" is the real array we need to pass its proxy\n                    index,\n                    newValue\n                })\n                if (!change) return\n                newValue = change.newValue\n            }\n            newValue = this.enhancer_(newValue, oldValue)\n            const changed = newValue !== oldValue\n            if (changed) {\n                values[index] = newValue\n                this.notifyArrayChildUpdate_(index, newValue, oldValue)\n            }\n        } else if (index === values.length) {\n            // add a new item\n            this.spliceWithArray_(index, 0, [newValue])\n        } else {\n            // out of bounds\n            die(17, index, values.length)\n        }\n    }\n}\n\nexport function createObservableArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n    owned = false\n): IObservableArray<T> {\n    assertProxies()\n    const adm = new ObservableArrayAdministration(name, enhancer, owned, false)\n    addHiddenFinalProp(adm.values_, $mobx, adm)\n    const proxy = new Proxy(adm.values_, arrayTraps) as any\n    adm.proxy_ = proxy\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true)\n        adm.spliceWithArray_(0, 0, initialValues)\n        allowStateChangesEnd(prev)\n    }\n    return proxy\n}\n\n// eslint-disable-next-line\nexport var arrayExtensions = {\n    clear(): any[] {\n        return this.splice(0)\n    },\n\n    replace(newItems: any[]) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        return adm.spliceWithArray_(0, adm.values_.length, newItems)\n    },\n\n    // Used by JSON.stringify\n    toJSON(): any[] {\n        return this.slice()\n    },\n\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index: number, deleteCount?: number, ...newItems: any[]): any[] {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        switch (arguments.length) {\n            case 0:\n                return []\n            case 1:\n                return adm.spliceWithArray_(index)\n            case 2:\n                return adm.spliceWithArray_(index, deleteCount)\n        }\n        return adm.spliceWithArray_(index, deleteCount, newItems)\n    },\n\n    spliceWithArray(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        return (this[$mobx] as ObservableArrayAdministration).spliceWithArray_(\n            index,\n            deleteCount,\n            newItems\n        )\n    },\n\n    push(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(adm.values_.length, 0, items)\n        return adm.values_.length\n    },\n\n    pop() {\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0]\n    },\n\n    shift() {\n        return this.splice(0, 1)[0]\n    },\n\n    unshift(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(0, 0, items)\n        return adm.values_.length\n    },\n\n    reverse(): any[] {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        if (globalState.trackingDerivation) {\n            die(37, \"reverse\")\n        }\n        this.replace(this.slice().reverse())\n        return this\n    },\n\n    sort(): any[] {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (globalState.trackingDerivation) {\n            die(37, \"sort\")\n        }\n        const copy = this.slice()\n        copy.sort.apply(copy, arguments)\n        this.replace(copy)\n        return this\n    },\n\n    remove(value: any): boolean {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value)\n        if (idx > -1) {\n            this.splice(idx, 1)\n            return true\n        }\n        return false\n    }\n}\n\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\naddArrayExtension(\"concat\", simpleFunc)\naddArrayExtension(\"flat\", simpleFunc)\naddArrayExtension(\"includes\", simpleFunc)\naddArrayExtension(\"indexOf\", simpleFunc)\naddArrayExtension(\"join\", simpleFunc)\naddArrayExtension(\"lastIndexOf\", simpleFunc)\naddArrayExtension(\"slice\", simpleFunc)\naddArrayExtension(\"toString\", simpleFunc)\naddArrayExtension(\"toLocaleString\", simpleFunc)\n// map\naddArrayExtension(\"every\", mapLikeFunc)\naddArrayExtension(\"filter\", mapLikeFunc)\naddArrayExtension(\"find\", mapLikeFunc)\naddArrayExtension(\"findIndex\", mapLikeFunc)\naddArrayExtension(\"flatMap\", mapLikeFunc)\naddArrayExtension(\"forEach\", mapLikeFunc)\naddArrayExtension(\"map\", mapLikeFunc)\naddArrayExtension(\"some\", mapLikeFunc)\n// reduce\naddArrayExtension(\"reduce\", reduceLikeFunc)\naddArrayExtension(\"reduceRight\", reduceLikeFunc)\n\nfunction addArrayExtension(funcName, funcFactory) {\n    if (typeof Array.prototype[funcName] === \"function\") {\n        arrayExtensions[funcName] = funcFactory(funcName)\n    }\n}\n\n// Report and delegate to dehanced array\nfunction simpleFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction mapLikeFunc(funcName) {\n    return function (callback, thisArg) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName]((element, index) => {\n            return callback.call(thisArg, element, index, this)\n        })\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction reduceLikeFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        // #2432 - reduce behavior depends on arguments.length\n        const callback = arguments[0]\n        arguments[0] = (accumulator, currentValue, index) => {\n            return callback(accumulator, currentValue, index, this)\n        }\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\nconst isObservableArrayAdministration = createInstanceofPredicate(\n    \"ObservableArrayAdministration\",\n    ObservableArrayAdministration\n)\n\nexport function isObservableArray(thing): thing is IObservableArray<any> {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx])\n}\n", "import {\n    $mobx,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    checkIfStateModificationsAreAllowed,\n    createAtom,\n    createInstanceofPredicate,\n    deepEnhancer,\n    getNextId,\n    getPlainObjectKeys,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isES6Map,\n    isPlainObject,\n    isSpyEnabled,\n    makeIterable,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    stringifyKey,\n    transaction,\n    untracked,\n    onBecomeUnobserved,\n    globalState,\n    die,\n    isFunction,\n    UPDATE,\n    IAtom\n} from \"../internal\"\n\nexport interface IKeyValueMap<V = any> {\n    [key: string]: V\n}\n\nexport type IMapEntry<K = any, V = any> = [K, V]\nexport type IMapEntries<K = any, V = any> = IMapEntry<K, V>[]\n\nexport type IMapDidChange<K = any, V = any> = { observableKind: \"map\"; debugObjectName: string } & (\n    | {\n          object: ObservableMap<K, V>\n          name: K // actual the key or index, but this is based on the ancient .observe proposal for consistency\n          type: \"update\"\n          newValue: V\n          oldValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"add\"\n          newValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"delete\"\n          oldValue: V\n      }\n)\n\nexport interface IMapWillChange<K = any, V = any> {\n    object: ObservableMap<K, V>\n    type: \"update\" | \"add\" | \"delete\"\n    name: K\n    newValue?: V\n}\n\nconst ObservableMapMarker = {}\n\nexport const ADD = \"add\"\nexport const DELETE = \"delete\"\n\nexport type IObservableMapInitialValues<K = any, V = any> =\n    | IMapEntries<K, V>\n    | IKeyValueMap<V>\n    | Map<K, V>\n\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nexport class ObservableMap<K = any, V = any>\n    implements Map<K, V>, IInterceptable<IMapWillChange<K, V>>, IListenable {\n    [$mobx] = ObservableMapMarker\n    data_: Map<K, ObservableValue<V>>\n    hasMap_: Map<K, ObservableValue<boolean>> // hasMap, not hashMap >-).\n    keysAtom_: IAtom\n    interceptors_\n    changeListeners_\n    dehancer: any\n\n    constructor(\n        initialData?: IObservableMapInitialValues<K, V>,\n        public enhancer_: IEnhancer<V> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableMap@\" + getNextId() : \"ObservableMap\"\n    ) {\n        if (!isFunction(Map)) {\n            die(18)\n        }\n        this.keysAtom_ = createAtom(__DEV__ ? `${this.name_}.keys()` : \"ObservableMap.keys()\")\n        this.data_ = new Map()\n        this.hasMap_ = new Map()\n        this.merge(initialData)\n    }\n\n    private has_(key: K): boolean {\n        return this.data_.has(key)\n    }\n\n    has(key: K): boolean {\n        if (!globalState.trackingDerivation) return this.has_(key)\n\n        let entry = this.hasMap_.get(key)\n        if (!entry) {\n            const newEntry = (entry = new ObservableValue(\n                this.has_(key),\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableMap.key?\",\n                false\n            ))\n            this.hasMap_.set(key, newEntry)\n            onBecomeUnobserved(newEntry, () => this.hasMap_.delete(key))\n        }\n\n        return entry.get()\n    }\n\n    set(key: K, value: V) {\n        const hasKey = this.has_(key)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: hasKey ? UPDATE : ADD,\n                object: this,\n                newValue: value,\n                name: key\n            })\n            if (!change) return this\n            value = change.newValue!\n        }\n        if (hasKey) {\n            this.updateValue_(key, value)\n        } else {\n            this.addValue_(key, value)\n        }\n        return this\n    }\n\n    delete(key: K): boolean {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: DELETE,\n                object: this,\n                name: key\n            })\n            if (!change) return false\n        }\n        if (this.has_(key)) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: (<any>this.data_.get(key)).value_,\n                          name: key\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) spyReportStart(change!)\n            transaction(() => {\n                this.keysAtom_.reportChanged()\n                this.hasMap_.get(key)?.setNewValue_(false)\n                const observable = this.data_.get(key)!\n                observable.setNewValue_(undefined as any)\n                this.data_.delete(key)\n            })\n            if (notify) notifyListeners(this, change)\n            if (__DEV__ && notifySpy) spyReportEnd()\n            return true\n        }\n        return false\n    }\n\n    private updateValue_(key: K, newValue: V | undefined) {\n        const observable = this.data_.get(key)!\n        newValue = (observable as any).prepareNewValue_(newValue) as V\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: UPDATE,\n                          object: this,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n            if (__DEV__ && notifySpy) spyReportStart(change!)\n            observable.setNewValue_(newValue as V)\n            if (notify) notifyListeners(this, change)\n            if (__DEV__ && notifySpy) spyReportEnd()\n        }\n    }\n\n    private addValue_(key: K, newValue: V) {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        transaction(() => {\n            const observable = new ObservableValue(\n                newValue,\n                this.enhancer_,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}` : \"ObservableMap.key\",\n                false\n            )\n            this.data_.set(key, observable)\n            newValue = (observable as any).value_ // value might have been changed\n            this.hasMap_.get(key)?.setNewValue_(true)\n            this.keysAtom_.reportChanged()\n        })\n        const notifySpy = isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IMapDidChange<K, V> | null =\n            notify || notifySpy\n                ? {\n                      observableKind: \"map\",\n                      debugObjectName: this.name_,\n                      type: ADD,\n                      object: this,\n                      name: key,\n                      newValue\n                  }\n                : null\n        if (__DEV__ && notifySpy) spyReportStart(change!)\n        if (notify) notifyListeners(this, change)\n        if (__DEV__ && notifySpy) spyReportEnd()\n    }\n\n    get(key: K): V | undefined {\n        if (this.has(key)) return this.dehanceValue_(this.data_.get(key)!.get())\n        return this.dehanceValue_(undefined)\n    }\n\n    private dehanceValue_<X extends V | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    keys(): IterableIterator<K> {\n        this.keysAtom_.reportObserved()\n        return this.data_.keys()\n    }\n\n    values(): IterableIterator<V> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : self.get(value)\n                }\n            }\n        })\n    }\n\n    entries(): IterableIterator<IMapEntry<K, V>> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : ([value, self.get(value)!] as [K, V])\n                }\n            }\n        })\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    forEach(callback: (value: V, key: K, object: Map<K, V>) => void, thisArg?) {\n        for (const [key, value] of this) callback.call(thisArg, value, key, this)\n    }\n\n    /** Merge another object into this object, returns this. */\n    merge(other: ObservableMap<K, V> | IKeyValueMap<V> | any): ObservableMap<K, V> {\n        if (isObservableMap(other)) {\n            other = new Map(other)\n        }\n        transaction(() => {\n            if (isPlainObject(other))\n                getPlainObjectKeys(other).forEach((key: any) =>\n                    this.set((key as any) as K, other[key])\n                )\n            else if (Array.isArray(other)) other.forEach(([key, value]) => this.set(key, value))\n            else if (isES6Map(other)) {\n                if (other.constructor !== Map) die(19, other)\n                other.forEach((value, key) => this.set(key, value))\n            } else if (other !== null && other !== undefined) die(20, other)\n        })\n        return this\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys()) this.delete(key)\n            })\n        })\n    }\n\n    replace(values: ObservableMap<K, V> | IKeyValueMap<V> | any): ObservableMap<K, V> {\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(() => {\n            // Convert to map so we can do quick key lookups\n            const replacementMap = convertToMap(values)\n            const orderedData = new Map()\n            // Used for optimization\n            let keysReportChangedCalled = false\n            // Delete keys that don't exist in replacement map\n            // if the key deletion is prevented by interceptor\n            // add entry at the beginning of the result map\n            for (const key of this.data_.keys()) {\n                // Concurrently iterating/deleting keys\n                // iterator should handle this correctly\n                if (!replacementMap.has(key)) {\n                    const deleted = this.delete(key)\n                    // Was the key removed?\n                    if (deleted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    } else {\n                        // Delete prevented by interceptor\n                        const value = this.data_.get(key)\n                        orderedData.set(key, value)\n                    }\n                }\n            }\n            // Merge entries\n            for (const [key, value] of replacementMap.entries()) {\n                // We will want to know whether a new key is added\n                const keyExisted = this.data_.has(key)\n                // Add or update value\n                this.set(key, value)\n                // The addition could have been prevent by interceptor\n                if (this.data_.has(key)) {\n                    // The update could have been prevented by interceptor\n                    // and also we want to preserve existing values\n                    // so use value from _data map (instead of replacement map)\n                    const value = this.data_.get(key)\n                    orderedData.set(key, value)\n                    // Was a new key added?\n                    if (!keyExisted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    }\n                }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (this.data_.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    this.keysAtom_.reportChanged()\n                } else {\n                    const iter1 = this.data_.keys()\n                    const iter2 = orderedData.keys()\n                    let next1 = iter1.next()\n                    let next2 = iter2.next()\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            this.keysAtom_.reportChanged()\n                            break\n                        }\n                        next1 = iter1.next()\n                        next2 = iter2.next()\n                    }\n                }\n            }\n            // Use correctly ordered map\n            this.data_ = orderedData\n        })\n        return this\n    }\n\n    get size(): number {\n        this.keysAtom_.reportObserved()\n        return this.data_.size\n    }\n\n    toString(): string {\n        return \"[object ObservableMap]\"\n    }\n\n    toJSON(): [K, V][] {\n        return Array.from(this)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Map\"\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(listener: (changes: IMapDidChange<K, V>) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true)\n            die(\"`observe` doesn't support fireImmediately=true in combination with maps.\")\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<IMapWillChange<K, V>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap) as (\n    thing: any\n) => thing is ObservableMap<any, any>\n\nfunction convertToMap(dataStructure: any): Map<any, any> {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure\n    } else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure)\n    } else if (isPlainObject(dataStructure)) {\n        const map = new Map()\n        for (const key in dataStructure) {\n            map.set(key, dataStructure[key])\n        }\n        return map\n    } else {\n        return die(21, dataStructure)\n    }\n}\n", "import {\n    $mobx,\n    createAtom,\n    deepEnhancer,\n    getNextId,\n    IEnhancer,\n    isSpyEnabled,\n    hasListeners,\n    IListenable,\n    registerListener,\n    Lambda,\n    spyReportStart,\n    notifyListeners,\n    spyReportEnd,\n    createInstanceofPredicate,\n    hasInterceptors,\n    interceptChange,\n    IInterceptable,\n    IInterceptor,\n    registerInterceptor,\n    checkIfStateModificationsAreAllowed,\n    untracked,\n    makeIterable,\n    transaction,\n    isES6Set,\n    IAtom,\n    DELETE,\n    ADD,\n    die,\n    isFunction\n} from \"../internal\"\n\nconst ObservableSetMarker = {}\n\nexport type IObservableSetInitialValues<T> = Set<T> | readonly T[]\n\nexport type ISetDidChange<T = any> =\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"add\"\n          newValue: T\n      }\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"delete\"\n          oldValue: T\n      }\n\nexport type ISetWillChange<T = any> =\n    | {\n          type: \"delete\"\n          object: ObservableSet<T>\n          oldValue: T\n      }\n    | {\n          type: \"add\"\n          object: ObservableSet<T>\n          newValue: T\n      }\n\nexport class ObservableSet<T = any> implements Set<T>, IInterceptable<ISetWillChange>, IListenable {\n    [$mobx] = ObservableSetMarker\n    private data_: Set<any> = new Set()\n    private atom_: IAtom\n    changeListeners_\n    interceptors_\n    dehancer: any\n    enhancer_: (newV: any, oldV: any | undefined) => any\n\n    constructor(\n        initialData?: IObservableSetInitialValues<T>,\n        enhancer: IEnhancer<T> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\"\n    ) {\n        if (!isFunction(Set)) {\n            die(22)\n        }\n        this.atom_ = createAtom(this.name_)\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_)\n        if (initialData) {\n            this.replace(initialData)\n        }\n    }\n\n    private dehanceValue_<X extends T | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this.data_.values()) this.delete(value)\n            })\n        })\n    }\n\n    forEach(callbackFn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this)\n        }\n    }\n\n    get size() {\n        this.atom_.reportObserved()\n        return this.data_.size\n    }\n\n    add(value: T) {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: ADD,\n                object: this,\n                newValue: value\n            })\n            if (!change) return this\n            // ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this.data_.add(this.enhancer_(value, undefined))\n                this.atom_.reportChanged()\n            })\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: ADD,\n                          object: this,\n                          newValue: value\n                      }\n                    : null\n            if (notifySpy && __DEV__) spyReportStart(change!)\n            if (notify) notifyListeners(this, change)\n            if (notifySpy && __DEV__) spyReportEnd()\n        }\n\n        return this\n    }\n\n    delete(value: any) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: DELETE,\n                object: this,\n                oldValue: value\n            })\n            if (!change) return false\n        }\n        if (this.has(value)) {\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: value\n                      }\n                    : null\n\n            if (notifySpy && __DEV__) spyReportStart(change!)\n            transaction(() => {\n                this.atom_.reportChanged()\n                this.data_.delete(value)\n            })\n            if (notify) notifyListeners(this, change)\n            if (notifySpy && __DEV__) spyReportEnd()\n            return true\n        }\n        return false\n    }\n\n    has(value: any) {\n        this.atom_.reportObserved()\n        return this.data_.has(this.dehanceValue_(value))\n    }\n\n    entries() {\n        let nextIndex = 0\n        const keys = Array.from(this.keys())\n        const values = Array.from(this.values())\n        return makeIterable<[T, T]>({\n            next() {\n                const index = nextIndex\n                nextIndex += 1\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    keys(): IterableIterator<T> {\n        return this.values()\n    }\n\n    values(): IterableIterator<T> {\n        this.atom_.reportObserved()\n        const self = this\n        let nextIndex = 0\n        const observableValues = Array.from(this.data_.values())\n        return makeIterable<T>({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    replace(other: ObservableSet<T> | IObservableSetInitialValues<T>): ObservableSet<T> {\n        if (isObservableSet(other)) {\n            other = new Set(other)\n        }\n\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (isES6Set(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (other !== null && other !== undefined) {\n                die(\"Cannot initialize set from \" + other)\n            }\n        })\n\n        return this\n    }\n    observe_(listener: (changes: ISetDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        // ... 'fireImmediately' could also be true?\n        if (__DEV__ && fireImmediately === true)\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\")\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<ISetWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    toJSON(): T[] {\n        return Array.from(this)\n    }\n\n    toString(): string {\n        return \"[object ObservableSet]\"\n    }\n\n    [Symbol.iterator]() {\n        return this.values()\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Set\"\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet) as (\n    thing: any\n) => thing is ObservableSet<any>\n", "import {\n    CreateObservableOptions,\n    getAnnotationFromOptions,\n    propagateChanged,\n    isAnnotation,\n    $mobx,\n    Atom,\n    Annotation,\n    ComputedValue,\n    IAtom,\n    IComputedValueOptions,\n    IEnhancer,\n    IInterceptable,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    addHiddenProp,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isPlainObject,\n    isSpyEnabled,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    stringifyKey,\n    globalState,\n    ADD,\n    UPDATE,\n    die,\n    hasProp,\n    getDescriptor,\n    storedAnnotationsSymbol,\n    ownKeys,\n    isOverride,\n    defineProperty,\n    autoAnnotation,\n    getAdministration,\n    getDebugName,\n    objectPrototype,\n    MakeResult\n} from \"../internal\"\n\nconst descriptorCache = Object.create(null)\n\nexport type IObjectDidChange<T = any> = {\n    observableKind: \"object\"\n    name: PropertyKey\n    object: T\n    debugObjectName: string\n} & (\n    | {\n          type: \"add\"\n          newValue: any\n      }\n    | {\n          type: \"update\"\n          oldValue: any\n          newValue: any\n      }\n    | {\n          type: \"remove\"\n          oldValue: any\n      }\n)\n\nexport type IObjectWillChange<T = any> =\n    | {\n          object: T\n          type: \"update\" | \"add\"\n          name: PropertyKey\n          newValue: any\n      }\n    | {\n          object: T\n          type: \"remove\"\n          name: PropertyKey\n      }\n\nconst REMOVE = \"remove\"\n\nexport class ObservableObjectAdministration\n    implements IInterceptable<IObjectWillChange>, IListenable {\n    keysAtom_: IAtom\n    changeListeners_\n    interceptors_\n    proxy_: any\n    isPlainObject_: boolean\n    appliedAnnotations_?: object\n    private pendingKeys_: undefined | Map<PropertyKey, ObservableValue<boolean>>\n\n    constructor(\n        public target_: any,\n        public values_ = new Map<PropertyKey, ObservableValue<any> | ComputedValue<any>>(),\n        public name_: string,\n        // Used anytime annotation is not explicitely provided\n        public defaultAnnotation_: Annotation = autoAnnotation\n    ) {\n        this.keysAtom_ = new Atom(__DEV__ ? `${this.name_}.keys` : \"ObservableObject.keys\")\n        // Optimization: we use this frequently\n        this.isPlainObject_ = isPlainObject(this.target_)\n        if (__DEV__ && !isAnnotation(this.defaultAnnotation_)) {\n            die(`defaultAnnotation must be valid annotation`)\n        }\n        if (__DEV__) {\n            // Prepare structure for tracking which fields were already annotated\n            this.appliedAnnotations_ = {}\n        }\n    }\n\n    getObservablePropValue_(key: PropertyKey): any {\n        return this.values_.get(key)!.get()\n    }\n\n    setObservablePropValue_(key: PropertyKey, newValue): boolean | null {\n        const observable = this.values_.get(key)\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue)\n            return true\n        }\n\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                type: UPDATE,\n                object: this.proxy_ || this.target_,\n                name: key,\n                newValue\n            })\n            if (!change) return null\n            newValue = (change as any).newValue\n        }\n        newValue = (observable as any).prepareNewValue_(newValue)\n\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? {\n                          type: UPDATE,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) spyReportStart(change!)\n            ;(observable as ObservableValue<any>).setNewValue_(newValue)\n            if (notify) notifyListeners(this, change)\n            if (__DEV__ && notifySpy) spyReportEnd()\n        }\n        return true\n    }\n\n    get_(key: PropertyKey): any {\n        if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n            // Key doesn't exist yet, subscribe for it in case it's added later\n            this.has_(key)\n        }\n        return this.target_[key]\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {any} value\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    set_(key: PropertyKey, value: any, proxyTrap: boolean = false): boolean | null {\n        // Don't use .has(key) - we care about own\n        if (hasProp(this.target_, key)) {\n            // Existing prop\n            if (this.values_.has(key)) {\n                // Observable (can be intercepted)\n                return this.setObservablePropValue_(key, value)\n            } else if (proxyTrap) {\n                // Non-observable - proxy\n                return Reflect.set(this.target_, key, value)\n            } else {\n                // Non-observable\n                this.target_[key] = value\n                return true\n            }\n        } else {\n            // New prop\n            return this.extend_(\n                key,\n                { value, enumerable: true, writable: true, configurable: true },\n                this.defaultAnnotation_,\n                proxyTrap\n            )\n        }\n    }\n\n    // Trap for \"in\"\n    has_(key: PropertyKey): boolean {\n        if (!globalState.trackingDerivation) {\n            // Skip key subscription outside derivation\n            return key in this.target_\n        }\n        this.pendingKeys_ ||= new Map()\n        let entry = this.pendingKeys_.get(key)\n        if (!entry) {\n            entry = new ObservableValue(\n                key in this.target_,\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableObject.key?\",\n                false\n            )\n            this.pendingKeys_.set(key, entry)\n        }\n        return entry.get()\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n     */\n    make_(key: PropertyKey, annotation: Annotation | boolean): void {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return\n        }\n        assertAnnotable(this, annotation, key)\n        if (!(key in this.target_)) {\n            // Throw on missing key, except for decorators:\n            // Decorator annotations are collected from whole prototype chain.\n            // When called from super() some props may not exist yet.\n            // However we don't have to worry about missing prop,\n            // because the decorator must have been applied to something.\n            if (this.target_[storedAnnotationsSymbol]?.[key]) {\n                return // will be annotated by subclass constructor\n            } else {\n                die(1, annotation.annotationType_, `${this.name_}.${key.toString()}`)\n            }\n        }\n        let source = this.target_\n        while (source && source !== objectPrototype) {\n            const descriptor = getDescriptor(source, key)\n            if (descriptor) {\n                const outcome = annotation.make_(this, key, descriptor, source)\n                if (outcome === MakeResult.Cancel) return\n                if (outcome === MakeResult.Break) break\n            }\n            source = Object.getPrototypeOf(source)\n        }\n        recordAnnotationApplied(this, annotation, key)\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    extend_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        annotation: Annotation | boolean,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return this.defineProperty_(key, descriptor, proxyTrap)\n        }\n        assertAnnotable(this, annotation, key)\n        const outcome = annotation.extend_(this, key, descriptor, proxyTrap)\n        if (outcome) {\n            recordAnnotationApplied(this, annotation, key)\n        }\n        return outcome\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    defineProperty_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: descriptor.value\n                })\n                if (!change) return null\n                const { newValue } = change as any\n                if (descriptor.value !== newValue) {\n                    descriptor = {\n                        ...descriptor,\n                        value: newValue\n                    }\n                }\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            // Notify\n            this.notifyPropertyAddition_(key, descriptor.value)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineObservableProperty_(\n        key: PropertyKey,\n        value: any,\n        enhancer: IEnhancer<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: value\n                })\n                if (!change) return null\n                value = (change as any).newValue\n            }\n\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: true,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            const observable = new ObservableValue(\n                value,\n                enhancer,\n                __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\",\n                false\n            )\n\n            this.values_.set(key, observable)\n\n            // Notify (value possibly changed by ObservableValue)\n            this.notifyPropertyAddition_(key, observable.value_)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineComputedProperty_(\n        key: PropertyKey,\n        options: IComputedValueOptions<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: undefined\n                })\n                if (!change) return null\n            }\n            options.name ||= __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\"\n            options.context = this.proxy_ || this.target_\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: false,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            this.values_.set(key, new ComputedValue(options))\n\n            // Notify\n            this.notifyPropertyAddition_(key, undefined)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    delete_(key: PropertyKey, proxyTrap: boolean = false): boolean | null {\n        // No such prop\n        if (!hasProp(this.target_, key)) {\n            return true\n        }\n\n        // Intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                object: this.proxy_ || this.target_,\n                name: key,\n                type: REMOVE\n            })\n            // Cancelled\n            if (!change) return null\n        }\n\n        // Delete\n        try {\n            startBatch()\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const observable = this.values_.get(key)\n            // Value needed for spies/listeners\n            let value = undefined\n            // Optimization: don't pull the value unless we will need it\n            if (!observable && (notify || notifySpy)) {\n                value = getDescriptor(this.target_, key)?.value\n            }\n            // delete prop (do first, may fail)\n            if (proxyTrap) {\n                if (!Reflect.deleteProperty(this.target_, key)) {\n                    return false\n                }\n            } else {\n                delete this.target_[key]\n            }\n            // Allow re-annotating this field\n            if (__DEV__) {\n                delete this.appliedAnnotations_![key]\n            }\n            // Clear observable\n            if (observable) {\n                this.values_.delete(key)\n                // for computed, value is undefined\n                if (observable instanceof ObservableValue) {\n                    value = observable.value_\n                }\n                // Notify: autorun(() => obj[key]), see #1796\n                propagateChanged(observable)\n            }\n            // Notify \"keys/entries/values\" observers\n            this.keysAtom_.reportChanged()\n\n            // Notify \"has\" observers\n            // \"in\" as it may still exist in proto\n            this.pendingKeys_?.get(key)?.set(key in this.target_)\n\n            // Notify spies/listeners\n            if (notify || notifySpy) {\n                const change: IObjectDidChange = {\n                    type: REMOVE,\n                    observableKind: \"object\",\n                    object: this.proxy_ || this.target_,\n                    debugObjectName: this.name_,\n                    oldValue: value,\n                    name: key\n                }\n                if (__DEV__ && notifySpy) spyReportStart(change!)\n                if (notify) notifyListeners(this, change)\n                if (__DEV__ && notifySpy) spyReportEnd()\n            }\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(callback: (changes: IObjectDidChange) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true)\n            die(\"`observe` doesn't support the fire immediately property for observable objects.\")\n        return registerListener(this, callback)\n    }\n\n    intercept_(handler): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    notifyPropertyAddition_(key: PropertyKey, value: any) {\n        const notify = hasListeners(this)\n        const notifySpy = __DEV__ && isSpyEnabled()\n        if (notify || notifySpy) {\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? ({\n                          type: ADD,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          name: key,\n                          newValue: value\n                      } as const)\n                    : null\n\n            if (__DEV__ && notifySpy) spyReportStart(change!)\n            if (notify) notifyListeners(this, change)\n            if (__DEV__ && notifySpy) spyReportEnd()\n        }\n\n        this.pendingKeys_?.get(key)?.set(true)\n\n        // Notify \"keys/entries/values\" observers\n        this.keysAtom_.reportChanged()\n    }\n\n    ownKeys_(): PropertyKey[] {\n        this.keysAtom_.reportObserved()\n        return ownKeys(this.target_)\n    }\n\n    keys_(): PropertyKey[] {\n        // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n        // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n        // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n        // We choose to over-report in Object.keys(object), because:\n        // - typically it's used with simple data objects\n        // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n        this.keysAtom_.reportObserved()\n        return Object.keys(this.target_)\n    }\n}\n\nexport interface IIsObservableObject {\n    $mobx: ObservableObjectAdministration\n}\n\nexport function asObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    if (__DEV__ && options && isObservableObject(target)) {\n        die(`Options can't be provided for already observable objects.`)\n    }\n\n    if (hasProp(target, $mobx)) {\n        if (__DEV__ && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n            die(\n                `Cannot convert '${getDebugName(target)}' into observable object:` +\n                    `\\nThe target is already observable of different type.` +\n                    `\\nExtending builtins is not supported.`\n            )\n        }\n        return target\n    }\n\n    if (__DEV__ && !Object.isExtensible(target))\n        die(\"Cannot make the designated object observable; it is not extensible\")\n\n    const name =\n        options?.name ??\n        (__DEV__\n            ? `${\n                  isPlainObject(target) ? \"ObservableObject\" : target.constructor.name\n              }@${getNextId()}`\n            : \"ObservableObject\")\n\n    const adm = new ObservableObjectAdministration(\n        target,\n        new Map(),\n        String(name),\n        getAnnotationFromOptions(options)\n    )\n\n    addHiddenProp(target, $mobx, adm)\n\n    return target\n}\n\nconst isObservableObjectAdministration = createInstanceofPredicate(\n    \"ObservableObjectAdministration\",\n    ObservableObjectAdministration\n)\n\nfunction getCachedObservablePropDescriptor(key) {\n    return (\n        descriptorCache[key] ||\n        (descriptorCache[key] = {\n            get() {\n                return this[$mobx].getObservablePropValue_(key)\n            },\n            set(value) {\n                return this[$mobx].setObservablePropValue_(key, value)\n            }\n        })\n    )\n}\n\nexport function isObservableObject(thing: any): boolean {\n    if (isObject(thing)) {\n        return isObservableObjectAdministration((thing as any)[$mobx])\n    }\n    return false\n}\n\nexport function recordAnnotationApplied(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    if (__DEV__) {\n        adm.appliedAnnotations_![key] = annotation\n    }\n    // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n    delete adm.target_[storedAnnotationsSymbol]?.[key]\n}\n\nfunction assertAnnotable(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    // Valid annotation\n    if (__DEV__ && !isAnnotation(annotation)) {\n        die(`Cannot annotate '${adm.name_}.${key.toString()}': Invalid annotation.`)\n    }\n\n    /*\n    // Configurable, not sealed, not frozen\n    // Possibly not needed, just a little better error then the one thrown by engine.\n    // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n    if (__DEV__) {\n        const configurable = getDescriptor(adm.target_, key)?.configurable\n        const frozen = Object.isFrozen(adm.target_)\n        const sealed = Object.isSealed(adm.target_)\n        if (!configurable || frozen || sealed) {\n            const fieldName = `${adm.name_}.${key.toString()}`\n            const requestedAnnotationType = annotation.annotationType_\n            let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n            if (frozen) {\n                error += `\\nObject is frozen.`\n            }\n            if (sealed) {\n                error += `\\nObject is sealed.`\n            }\n            if (!configurable) {\n                error += `\\nproperty is not configurable.`\n                // Mention only if caused by us to avoid confusion\n                if (hasProp(adm.appliedAnnotations!, key)) {\n                    error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                    error += `all annotated fields of non-plain objects (classes) are not configurable.`\n                }\n            }\n            die(error)\n        }\n    }\n    */\n\n    // Not annotated\n    if (__DEV__ && !isOverride(annotation) && hasProp(adm.appliedAnnotations_!, key)) {\n        const fieldName = `${adm.name_}.${key.toString()}`\n        const currentAnnotationType = adm.appliedAnnotations_![key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already annotated with '${currentAnnotationType}'.` +\n                `\\nRe-annotating fields is not allowed.` +\n                `\\nUse 'override' annotation for methods overriden by subclass.`\n        )\n    }\n}\n", "import {\n    getNextId,\n    addHiddenFinalProp,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    makeIterable,\n    addHiddenProp,\n    ObservableArrayAdministration,\n    $mobx,\n    arrayExtensions,\n    IEnhancer,\n    isObservableArray,\n    IObservableArray,\n    defineProperty\n} from \"../internal\"\n\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nlet OBSERVABLE_ARRAY_BUFFER_SIZE = 0\n\n// Typescript workaround to make sure ObservableArray extends Array\nclass StubArray {}\nfunction inherit(ctor, proto) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ctor.prototype, proto)\n    } else if (ctor.prototype.__proto__ !== undefined) {\n        ctor.prototype.__proto__ = proto\n    } else {\n        ctor.prototype = proto\n    }\n}\ninherit(StubArray, Array.prototype)\n\n// Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nclass LegacyObservableArray<T> extends StubArray {\n    constructor(\n        initialValues: T[] | undefined,\n        enhancer: IEnhancer<T>,\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        owned = false\n    ) {\n        super()\n\n        const adm = new ObservableArrayAdministration(name, enhancer, owned, true)\n        adm.proxy_ = this as any\n        addHiddenFinalProp(this, $mobx, adm)\n\n        if (initialValues && initialValues.length) {\n            const prev = allowStateChangesStart(true)\n            // @ts-ignore\n            this.spliceWithArray(0, 0, initialValues)\n            allowStateChangesEnd(prev)\n        }\n    }\n\n    concat(...arrays: T[][]): T[] {\n        ;(this[$mobx] as ObservableArrayAdministration).atom_.reportObserved()\n        return Array.prototype.concat.apply(\n            (this as any).slice(),\n            //@ts-ignore\n            arrays.map(a => (isObservableArray(a) ? a.slice() : a))\n        )\n    }\n\n    get length(): number {\n        return (this[$mobx] as ObservableArrayAdministration).getArrayLength_()\n    }\n\n    set length(newLength: number) {\n        ;(this[$mobx] as ObservableArrayAdministration).setArrayLength_(newLength)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Array\"\n    }\n\n    [Symbol.iterator]() {\n        const self = this\n        let nextIndex = 0\n        return makeIterable({\n            next() {\n                // @ts-ignore\n                return nextIndex < self.length\n                    ? { value: self[nextIndex++], done: false }\n                    : { done: true, value: undefined }\n            }\n        })\n    }\n}\n\nObject.entries(arrayExtensions).forEach(([prop, fn]) => {\n    if (prop !== \"concat\") addHiddenProp(LegacyObservableArray.prototype, prop, fn)\n})\n\nfunction createArrayEntryDescriptor(index: number) {\n    return {\n        enumerable: false,\n        configurable: true,\n        get: function () {\n            return this[$mobx].get_(index)\n        },\n        set: function (value) {\n            this[$mobx].set_(index, value)\n        }\n    }\n}\n\nfunction createArrayBufferItem(index: number) {\n    defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index))\n}\n\nexport function reserveArrayBuffer(max: number) {\n    if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n        for (let index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++)\n            createArrayBufferItem(index)\n        OBSERVABLE_ARRAY_BUFFER_SIZE = max\n    }\n}\n\nreserveArrayBuffer(1000)\n\nexport function createLegacyArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name?: string\n): IObservableArray<T> {\n    return new LegacyObservableArray(initialValues, enhancer, name) as any\n}\n", "import { isAction } from \"../api/action\"\nimport {\n    $mobx,\n    IDepTreeNode,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    isObservableSet,\n    die,\n    isFunction\n} from \"../internal\"\n\nexport function getAtom(thing: any, property?: PropertyKey): IDepTreeNode {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined) die(23)\n            return (thing as any)[$mobx].atom_\n        }\n        if (isObservableSet(thing)) {\n            return (thing as any)[$mobx]\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined) return thing.keysAtom_\n            const observable = thing.data_.get(property) || thing.hasMap_.get(property)\n            if (!observable) die(25, property, getDebugName(thing))\n            return observable\n        }\n        if (property && !thing[$mobx]) thing[property] // See #1072\n        if (isObservableObject(thing)) {\n            if (!property) return die(26)\n            const observable = (thing as any)[$mobx].values_.get(property)\n            if (!observable) die(27, property, getDebugName(thing))\n            return observable\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing\n        }\n    } else if (isFunction(thing)) {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx]\n        }\n    }\n    die(28)\n}\n\nexport function getAdministration(thing: any, property?: string) {\n    if (!thing) die(29)\n    if (property !== undefined) return getAdministration(getAtom(thing, property))\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) return thing\n    if (isObservableMap(thing) || isObservableSet(thing)) return thing\n    if (thing[$mobx]) return thing[$mobx]\n    die(24, thing)\n}\n\nexport function getDebugName(thing: any, property?: string): string {\n    let named\n    if (property !== undefined) {\n        named = getAtom(thing, property)\n    } else if (isAction(thing)) {\n        return thing.name\n    } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n        named = getAdministration(thing)\n    } else {\n        // valid for arrays as well\n        named = getAtom(thing)\n    }\n    return named.name_\n}\n", "import {\n    isES6Map,\n    isObservableArray,\n    isObservableMap,\n    isES6Set,\n    isObservableSet,\n    hasProp,\n    isFunction,\n    objectPrototype\n} from \"../internal\"\n\ndeclare const Symbol\nconst toString = objectPrototype.toString\n\nexport function deepEqual(a: any, b: any, depth: number = -1): boolean {\n    return eq(a, b, depth)\n}\n\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a: any, b: any, depth: number, aStack?: any[], bStack?: any[]) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b\n    // Exhaust primitive checks\n    const type = typeof a\n    if (!isFunction(type) && type !== \"object\" && typeof b != \"object\") return false\n\n    // Compare `[[Class]]` names.\n    const className = toString.call(a)\n    if (className !== toString.call(b)) return false\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a) return +b !== +b\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b\n        case \"[object Symbol]\":\n            return (\n                typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b)\n            )\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++\n            }\n            break\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a)\n    b = unwrap(b)\n\n    const areArrays = className === \"[object Array]\"\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\") return false\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor,\n            bCtor = b.constructor\n        if (\n            aCtor !== bCtor &&\n            !(\n                isFunction(aCtor) &&\n                aCtor instanceof aCtor &&\n                isFunction(bCtor) &&\n                bCtor instanceof bCtor\n            ) &&\n            \"constructor\" in a &&\n            \"constructor\" in b\n        ) {\n            return false\n        }\n    }\n\n    if (depth === 0) {\n        return false\n    } else if (depth < 0) {\n        depth = -1\n    }\n\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || []\n    bStack = bStack || []\n    let length = aStack.length\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) return bStack[length] === b\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a)\n    bStack.push(b)\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length\n        if (length !== b.length) return false\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack)) return false\n        }\n    } else {\n        // Deep compare objects.\n        const keys = Object.keys(a)\n        let key\n        length = keys.length\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length) return false\n        while (length--) {\n            // Deep compare each member\n            key = keys[length]\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) return false\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop()\n    bStack.pop()\n    return true\n}\n\nfunction unwrap(a: any) {\n    if (isObservableArray(a)) return a.slice()\n    if (isES6Map(a) || isObservableMap(a)) return Array.from(a.entries())\n    if (isES6Set(a) || isObservableSet(a)) return Array.from(a.entries())\n    return a\n}\n", "export function makeIterable<T>(iterator: Iterator<T>): IterableIterator<T> {\n    iterator[Symbol.iterator] = getSelf\n    return iterator as any\n}\n\nfunction getSelf() {\n    return this\n}\n", "import { ObservableObjectAdministration, isFunction } from \"../internal\"\n\nexport const enum MakeResult {\n    Cancel,\n    Break,\n    Continue\n}\n\nexport type Annotation = {\n    annotationType_: string\n    make_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        source: object\n    ): MakeResult\n    extend_(\n        adm: ObservableObjectAdministration,\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean\n    ): boolean | null\n    options_?: any\n}\n\nexport type AnnotationMapEntry =\n    | Annotation\n    | true /* follow the default decorator, usually deep */\n    | false /* don't decorate this property */\n\n// AdditionalFields can be used to declare additional keys that can be used, for example to be able to\n// declare annotations for private/ protected members, see #2339\nexport type AnnotationsMap<T, AdditionalFields extends PropertyKey> = {\n    [P in Exclude<keyof T, \"toString\">]?: AnnotationMapEntry\n} &\n    Record<AdditionalFields, AnnotationMapEntry>\n\nexport function isAnnotation(thing: any) {\n    return (\n        // Can be function\n        thing instanceof Object &&\n        typeof thing.annotationType_ === \"string\" &&\n        isFunction(thing.make_) &&\n        isFunction(thing.extend_)\n    )\n}\n\nexport function isAnnotationMapEntry(thing: any) {\n    return typeof thing === \"boolean\" || isAnnotation(thing)\n}\n", "/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nimport { die } from \"./errors\"\nimport { getGlobal } from \"./utils/global\"\n;[\"Symbol\", \"Map\", \"Set\"].forEach(m => {\n    let g = getGlobal()\n    if (typeof g[m] === \"undefined\") {\n        die(`MobX requires global '${m}' to be available or polyfilled`)\n    }\n})\n\nimport { spy, getDebugName, $mobx } from \"./internal\"\n\nexport {\n    IObservable,\n    IDepTreeNode,\n    Reaction,\n    IReactionPublic,\n    IReactionDisposer,\n    untracked,\n    IAtom,\n    createAtom,\n    spy,\n    IComputedValue,\n    IEqualsComparer,\n    comparer,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    IObjectWillChange,\n    IObjectDidChange,\n    isObservableObject,\n    IValueDidChange,\n    IValueWillChange,\n    IObservableValue,\n    isObservableValue as isBoxedObservable,\n    IObservableArray,\n    IArrayWillChange,\n    IArrayWillSplice,\n    IArraySplice,\n    IArrayUpdate,\n    IArrayDidChange,\n    isObservableArray,\n    IKeyValueMap,\n    ObservableMap,\n    IMapEntries,\n    IMapEntry,\n    IMapWillChange,\n    IMapDidChange,\n    isObservableMap,\n    IObservableMapInitialValues,\n    ObservableSet,\n    isObservableSet,\n    ISetDidChange,\n    ISetWillChange,\n    IObservableSetInitialValues,\n    transaction,\n    observable,\n    IObservableFactory,\n    CreateObservableOptions,\n    computed,\n    IComputedFactory,\n    isObservable,\n    isObservableProp,\n    isComputed,\n    isComputedProp,\n    extendObservable,\n    observe,\n    intercept,\n    autorun,\n    IAutorunOptions,\n    reaction,\n    IReactionOptions,\n    when,\n    IWhenOptions,\n    action,\n    isAction,\n    runInAction,\n    IActionFactory,\n    keys,\n    values,\n    entries,\n    set,\n    remove,\n    has,\n    get,\n    apiOwnKeys as ownKeys,\n    apiDefineProperty as defineProperty,\n    configure,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    flow,\n    isFlow,\n    flowResult,\n    FlowCancellationError,\n    isFlowCancellationError,\n    toJS,\n    trace,\n    IObserverTree,\n    IDependencyTree,\n    getDependencyTree,\n    getObserverTree,\n    resetGlobalState as _resetGlobalState,\n    getGlobalState as _getGlobalState,\n    getDebugName,\n    getAtom,\n    getAdministration as _getAdministration,\n    allowStateChanges as _allowStateChanges,\n    runInAction as _allowStateChangesInsideComputed, // This has become the default behavior in Mobx 6\n    Lambda,\n    $mobx,\n    isComputingDerivation as _isComputingDerivation,\n    onReactionError,\n    interceptReads as _interceptReads,\n    IComputedValueOptions,\n    IActionRunInfo,\n    _startAction,\n    _endAction,\n    allowStateReadsStart as _allowStateReadsStart,\n    allowStateReadsEnd as _allowStateReadsEnd,\n    makeObservable,\n    makeAutoObservable,\n    autoAction as _autoAction,\n    AnnotationsMap,\n    AnnotationMapEntry,\n    override\n} from \"./internal\"\n\n// Devtools support\ndeclare const __MOBX_DEVTOOLS_GLOBAL_HOOK__: { injectMobx: (any) => void }\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    })\n}\n", "/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { ReactiveElement, PropertyValues } from 'lit';\nimport { Reaction } from 'mobx';\n\nconst reaction = Symbol('LitMobxRenderReaction');\nconst cachedRequestUpdate = Symbol('LitMobxRequestUpdate');\n\ntype ReactiveElementConstructor = new (...args: any[]) => ReactiveElement;\n\n/**\n * A class mixin which can be applied to lit-element's\n * [ReactiveElement](https://lit.dev/docs/api/ReactiveElement/)\n * derived classes. This mixin adds a mobx reaction which tracks the update method of ReactiveElement.\n *\n * Any observables used in the render template of the element will be tracked by a reaction\n * and cause an update of the element upon change.\n *\n * @param constructor the constructor to extend from to add the mobx reaction, must be derived from ReactiveElement.\n */\nexport function MobxReactionUpdate<T extends ReactiveElementConstructor>(\n    constructor: T\n): T {\n    return class MobxReactingElement extends constructor {\n        // NOTE: using a symbol here to avoid potential name collisions in derived classes\n        private [reaction]: Reaction | undefined;\n\n        private [cachedRequestUpdate] = () => {\n            this.requestUpdate();\n        };\n\n        public connectedCallback(): void {\n            super.connectedCallback();\n            const name =\n                this.constructor.name /* c8 ignore next */ || this.nodeName;\n            this[reaction] = new Reaction(\n                `${name}.update()`,\n                this[cachedRequestUpdate]\n            );\n            if (this.hasUpdated) this.requestUpdate();\n        }\n\n        public disconnectedCallback(): void {\n            super.disconnectedCallback();\n            if (this[reaction]) {\n                this[reaction]!.dispose();\n                this[reaction] = undefined;\n            }\n        }\n\n        protected update(changedProperties: PropertyValues): void {\n            if (this[reaction]) {\n                this[reaction]!.track(\n                    super.update.bind(this, changedProperties)\n                );\n                /* c8 ignore next 4 */\n            } else {\n                // this should never happen, but just in case\n                super.update(changedProperties);\n            }\n        }\n    };\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  window.ShadowRoot &&\n  (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst styleSheetCache = new Map<string, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n\n  private constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // Note, if `supportsAdoptingStyleSheets` is true then we assume\n    // CSSStyleSheet is constructable.\n    let styleSheet = styleSheetCache.get(this.cssText);\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      styleSheetCache.set(this.cssText, (styleSheet = new CSSStyleSheet()));\n      styleSheet.replaceSync(this.cssText);\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (cssText: string, safeToken: symbol): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * [[LitElement.styles | `styles`]] property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values [[`unsafeCSS`]] may\n * be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(cssText, constructionToken);\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (window as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle = supportsAdoptingStyleSheets\n  ? (s: CSSResultOrNative) => s\n  : (s: CSSResultOrNative) =>\n      s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[ReactiveElement]].\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst polyfillSupport = DEV_MODE\n  ? window.reactiveElementPolyfillSupportDevMode\n  : window.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (window.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = keyof T extends PropertyKey\n  ? Map<keyof T, unknown>\n  : never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? '' : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning.?('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning.?('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning.?('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning.?('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this._initializers ??= [];\n    this._initializers.push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * 'nonce-<base64-value>' with <base64-value> replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated <style> elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a `PropertyDeclaration` for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ) {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override [[`createProperty`]].\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const toAttribute =\n        (options.converter as ComplexAttributeConverter)?.toAttribute ??\n        defaultConverter.toAttribute;\n      const attrValue = toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter = options.converter;\n      const fromAttribute =\n        (converter as ComplexAttributeConverter)?.fromAttribute ??\n        (typeof converter === 'function'\n          ? (converter as (value: string | null, type?: unknown) => unknown)\n          : null) ??\n        defaultConverter.fromAttribute;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this[propName as keyof this] = fromAttribute!(value, options.type) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n          (_v, p) => {\n            if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n              shadowedProperties.push(p as string);\n            }\n          }\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * @category updates\n   */\n  willUpdate(_changedProperties: PropertyValues) {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(globalThis.reactiveElementVersions ??= []).push('1.0.1');\nif (DEV_MODE && globalThis.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\n/**\n * `true` if we're building for google3 with temporary back-compat helpers.\n * This export is not present in prod builds.\n * @internal\n */\nexport const INTERNAL = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  globalThis.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!globalThis.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (globalThis as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d = document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions.\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\n/**\n * Internally we can export this interface and change the type of\n * render()'s options.\n */\ninterface InternalRenderOptions extends RenderOptions {\n  /**\n   * An internal-only migration flag\n   * @internal\n   */\n  clearContainerForLit2MigrationOnly?: boolean;\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n * @param value\n * @param container\n * @param options\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // Internal modification: don't clear container to match lit-html 2.0\n    if (\n      INTERNAL &&\n      (options as InternalRenderOptions)?.clearContainerForLit2MigrationOnly ===\n        true\n    ) {\n      let n = container.firstChild;\n      // Clear only up to the `endNode` aka `renderBefore` node.\n      while (n && n !== endNode) {\n        const next = n.nextSibling;\n        n.remove();\n        n = next;\n      }\n    }\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment comment markers denoting the\n * `ChildPart`s and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : (htmlResult as unknown as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its contentx.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(type.h, this.options)),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      instance._update(values);\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was prevously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(this.name, '');\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? window.litHtmlPolyfillSupportDevMode\n  : window.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(globalThis.litHtmlVersions ??= []).push('2.0.1');\nif (DEV_MODE && globalThis.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`ReactiveElement`]] and adds lit-html templating.\n * The `ReactiveElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed(this.prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.0.1');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { MobxReactionUpdate } from './lib/mixin.js';\nimport { LitElement } from 'lit';\n\nexport * from './lib/mixin.js';\n\n/**\n * A LitElement derived class which uses the MobxReactionUpdate mixin to create a mobx\n * reactive implementation of LitElement.\n *\n * Any observables used in the render template of the element will be tracked by a reaction\n * and cause an update of the element upon change.\n */\nexport class MobxLitElement extends MobxReactionUpdate(LitElement) {}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nconst legacyCustomElement = (tagName: string, clazz: CustomElementClass) => {\n  window.customElements.define(tagName, clazz as CustomElementConstructor);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      window.customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string) =>\n  (classOrDescriptor: CustomElementClass | ClassDescriptor) =>\n    typeof classOrDescriptor === 'function'\n      ? legacyCustomElement(tagName, classOrDescriptor)\n      : standardCustomElement(tagName, classOrDescriptor as ClassDescriptor);\n", "import { isComputedProp, isObservableProp, createAtom, action, computed, _allowStateChangesInsideComputed, reaction, runInAction, observable, values, entries, _getGlobalState, isObservableArray, isObservableObject, defineProperty as defineProperty$1, ObservableMap, _interceptReads, intercept, observe, _getAdministration, set, makeObservable, getAtom } from 'mobx';\n\nvar livelinessChecking = \"warn\";\n/**\n * Defines what MST should do when running into reads / writes to objects that have died.\n * By default it will print a warning.\n * Use the `\"error\"` option to easy debugging to see where the error was thrown and when the offending read / write took place\n *\n * @param mode `\"warn\"`, `\"error\"` or `\"ignore\"`\n */\nfunction setLivelinessChecking(mode) {\n    livelinessChecking = mode;\n}\n/**\n * Returns the current liveliness checking mode.\n *\n * @returns `\"warn\"`, `\"error\"` or `\"ignore\"`\n */\nfunction getLivelinessChecking() {\n    return livelinessChecking;\n}\n/**\n * @deprecated use setLivelinessChecking instead\n * @hidden\n *\n * Defines what MST should do when running into reads / writes to objects that have died.\n * By default it will print a warning.\n * Use the `\"error\"` option to easy debugging to see where the error was thrown and when the offending read / write took place\n *\n * @param mode `\"warn\"`, `\"error\"` or `\"ignore\"`\n */\nfunction setLivelynessChecking(mode) {\n    setLivelinessChecking(mode);\n}\n\n/**\n * @hidden\n */\nvar Hook;\n(function (Hook) {\n    Hook[\"afterCreate\"] = \"afterCreate\";\n    Hook[\"afterAttach\"] = \"afterAttach\";\n    Hook[\"afterCreationFinalization\"] = \"afterCreationFinalization\";\n    Hook[\"beforeDetach\"] = \"beforeDetach\";\n    Hook[\"beforeDestroy\"] = \"beforeDestroy\";\n})(Hook || (Hook = {}));\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\n * Returns the _actual_ type of the given tree node. (Or throws)\n *\n * @param object\n * @returns\n */\nfunction getType(object) {\n    assertIsStateTreeNode(object, 1);\n    return getStateTreeNode(object).type;\n}\n/**\n * Returns the _declared_ type of the given sub property of an object, array or map.\n * In the case of arrays and maps the property name is optional and will be ignored.\n *\n * Example:\n * ```ts\n * const Box = types.model({ x: 0, y: 0 })\n * const box = Box.create()\n *\n * console.log(getChildType(box, \"x\").name) // 'number'\n * ```\n *\n * @param object\n * @param propertyName\n * @returns\n */\nfunction getChildType(object, propertyName) {\n    assertIsStateTreeNode(object, 1);\n    return getStateTreeNode(object).getChildType(propertyName);\n}\n/**\n * Registers a function that will be invoked for each mutation that is applied to the provided model instance, or to any of its children.\n * See [patches](https://github.com/mobxjs/mobx-state-tree#patches) for more details. onPatch events are emitted immediately and will not await the end of a transaction.\n * Patches can be used to deep observe a model tree.\n *\n * @param target the model instance from which to receive patches\n * @param callback the callback that is invoked for each patch. The reversePatch is a patch that would actually undo the emitted patch\n * @returns function to remove the listener\n */\nfunction onPatch(target, callback) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(callback, 2);\n    return getStateTreeNode(target).onPatch(callback);\n}\n/**\n * Registers a function that is invoked whenever a new snapshot for the given model instance is available.\n * The listener will only be fire at the end of the current MobX (trans)action.\n * See [snapshots](https://github.com/mobxjs/mobx-state-tree#snapshots) for more details.\n *\n * @param target\n * @param callback\n * @returns\n */\nfunction onSnapshot(target, callback) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(callback, 2);\n    return getStateTreeNode(target).onSnapshot(callback);\n}\n/**\n * Applies a JSON-patch to the given model instance or bails out if the patch couldn't be applied\n * See [patches](https://github.com/mobxjs/mobx-state-tree#patches) for more details.\n *\n * Can apply a single past, or an array of patches.\n *\n * @param target\n * @param patch\n * @returns\n */\nfunction applyPatch(target, patch) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertArg(patch, function (p) { return typeof p === \"object\"; }, \"object or array\", 2);\n    getStateTreeNode(target).applyPatches(asArray(patch));\n}\n/**\n * Small abstraction around `onPatch` and `applyPatch`, attaches a patch listener to a tree and records all the patches.\n * Returns an recorder object with the following signature:\n *\n * Example:\n * ```ts\n * export interface IPatchRecorder {\n *      // the recorded patches\n *      patches: IJsonPatch[]\n *      // the inverse of the recorded patches\n *      inversePatches: IJsonPatch[]\n *      // true if currently recording\n *      recording: boolean\n *      // stop recording patches\n *      stop(): void\n *      // resume recording patches\n *      resume(): void\n *      // apply all the recorded patches on the given target (the original subject if omitted)\n *      replay(target?: IAnyStateTreeNode): void\n *      // reverse apply the recorded patches on the given target  (the original subject if omitted)\n *      // stops the recorder if not already stopped\n *      undo(): void\n * }\n * ```\n *\n * The optional filter function allows to skip recording certain patches.\n *\n * @param subject\n * @param filter\n * @returns\n */\nfunction recordPatches(subject, filter) {\n    // check all arguments\n    assertIsStateTreeNode(subject, 1);\n    var data = {\n        patches: [],\n        reversedInversePatches: []\n    };\n    // we will generate the immutable copy of patches on demand for public consumption\n    var publicData = {};\n    var disposer;\n    var recorder = {\n        get recording() {\n            return !!disposer;\n        },\n        get patches() {\n            if (!publicData.patches) {\n                publicData.patches = data.patches.slice();\n            }\n            return publicData.patches;\n        },\n        get reversedInversePatches() {\n            if (!publicData.reversedInversePatches) {\n                publicData.reversedInversePatches = data.reversedInversePatches.slice();\n            }\n            return publicData.reversedInversePatches;\n        },\n        get inversePatches() {\n            if (!publicData.inversePatches) {\n                publicData.inversePatches = data.reversedInversePatches.slice().reverse();\n            }\n            return publicData.inversePatches;\n        },\n        stop: function () {\n            if (disposer) {\n                disposer();\n                disposer = undefined;\n            }\n        },\n        resume: function () {\n            if (disposer)\n                return;\n            disposer = onPatch(subject, function (patch, inversePatch) {\n                // skip patches that are asked to be filtered if there's a filter in place\n                if (filter && !filter(patch, inversePatch, getRunningActionContext())) {\n                    return;\n                }\n                data.patches.push(patch);\n                data.reversedInversePatches.unshift(inversePatch);\n                // mark immutable public patches as dirty\n                publicData.patches = undefined;\n                publicData.inversePatches = undefined;\n                publicData.reversedInversePatches = undefined;\n            });\n        },\n        replay: function (target) {\n            applyPatch(target || subject, data.patches);\n        },\n        undo: function (target) {\n            applyPatch(target || subject, data.reversedInversePatches);\n        }\n    };\n    recorder.resume();\n    return recorder;\n}\n/**\n * The inverse of `unprotect`.\n *\n * @param target\n */\nfunction protect(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (!node.isRoot)\n        throw fail$1(\"`protect` can only be invoked on root nodes\");\n    node.isProtectionEnabled = true;\n}\n/**\n * By default it is not allowed to directly modify a model. Models can only be modified through actions.\n * However, in some cases you don't care about the advantages (like replayability, traceability, etc) this yields.\n * For example because you are building a PoC or don't have any middleware attached to your tree.\n *\n * In that case you can disable this protection by calling `unprotect` on the root of your tree.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *     done: false\n * }).actions(self => ({\n *     toggle() {\n *         self.done = !self.done\n *     }\n * }))\n *\n * const todo = Todo.create()\n * todo.done = true // throws!\n * todo.toggle() // OK\n * unprotect(todo)\n * todo.done = false // OK\n * ```\n */\nfunction unprotect(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (!node.isRoot)\n        throw fail$1(\"`unprotect` can only be invoked on root nodes\");\n    node.isProtectionEnabled = false;\n}\n/**\n * Returns true if the object is in protected mode, @see protect\n */\nfunction isProtected(target) {\n    return getStateTreeNode(target).isProtected;\n}\n/**\n * Applies a snapshot to a given model instances. Patch and snapshot listeners will be invoked as usual.\n *\n * @param target\n * @param snapshot\n * @returns\n */\nfunction applySnapshot(target, snapshot) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).applySnapshot(snapshot);\n}\n/**\n * Calculates a snapshot from the given model instance. The snapshot will always reflect the latest state but use\n * structural sharing where possible. Doesn't require MobX transactions to be completed.\n *\n * @param target\n * @param applyPostProcess If true (the default) then postProcessSnapshot gets applied.\n * @returns\n */\nfunction getSnapshot(target, applyPostProcess) {\n    if (applyPostProcess === void 0) { applyPostProcess = true; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (applyPostProcess)\n        return node.snapshot;\n    return freeze(node.type.getSnapshot(node, false));\n}\n/**\n * Given a model instance, returns `true` if the object has a parent, that is, is part of another object, map or array.\n *\n * @param target\n * @param depth How far should we look upward? 1 by default.\n * @returns\n */\nfunction hasParent(target, depth) {\n    if (depth === void 0) { depth = 1; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsNumber(depth, 2, 0);\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (--depth === 0)\n            return true;\n        parent = parent.parent;\n    }\n    return false;\n}\n/**\n * Returns the immediate parent of this object, or throws.\n *\n * Note that the immediate parent can be either an object, map or array, and\n * doesn't necessarily refer to the parent model.\n *\n * Please note that in child nodes access to the root is only possible\n * once the `afterAttach` hook has fired.\n *\n * @param target\n * @param depth How far should we look upward? 1 by default.\n * @returns\n */\nfunction getParent(target, depth) {\n    if (depth === void 0) { depth = 1; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsNumber(depth, 2, 0);\n    var d = depth;\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (--d === 0)\n            return parent.storedValue;\n        parent = parent.parent;\n    }\n    throw fail$1(\"Failed to find the parent of \" + getStateTreeNode(target) + \" at depth \" + depth);\n}\n/**\n * Given a model instance, returns `true` if the object has a parent of given type, that is, is part of another object, map or array\n *\n * @param target\n * @param type\n * @returns\n */\nfunction hasParentOfType(target, type) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsType(type, 2);\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (type.is(parent.storedValue))\n            return true;\n        parent = parent.parent;\n    }\n    return false;\n}\n/**\n * Returns the target's parent of a given type, or throws.\n *\n * @param target\n * @param type\n * @returns\n */\nfunction getParentOfType(target, type) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsType(type, 2);\n    var parent = getStateTreeNode(target).parent;\n    while (parent) {\n        if (type.is(parent.storedValue))\n            return parent.storedValue;\n        parent = parent.parent;\n    }\n    throw fail$1(\"Failed to find the parent of \" + getStateTreeNode(target) + \" of a given type\");\n}\n/**\n * Given an object in a model tree, returns the root object of that tree.\n *\n * Please note that in child nodes access to the root is only possible\n * once the `afterAttach` hook has fired.\n *\n * @param target\n * @returns\n */\nfunction getRoot(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).root.storedValue;\n}\n/**\n * Returns the path of the given object in the model tree\n *\n * @param target\n * @returns\n */\nfunction getPath(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).path;\n}\n/**\n * Returns the path of the given object as unescaped string array.\n *\n * @param target\n * @returns\n */\nfunction getPathParts(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return splitJsonPath(getStateTreeNode(target).path);\n}\n/**\n * Returns true if the given object is the root of a model tree.\n *\n * @param target\n * @returns\n */\nfunction isRoot(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).isRoot;\n}\n/**\n * Resolves a path relatively to a given object.\n * Returns undefined if no value can be found.\n *\n * @param target\n * @param path escaped json path\n * @returns\n */\nfunction resolvePath(target, path) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsString(path, 2);\n    var node = resolveNodeByPath(getStateTreeNode(target), path);\n    return node ? node.value : undefined;\n}\n/**\n * Resolves a model instance given a root target, the type and the identifier you are searching for.\n * Returns undefined if no value can be found.\n *\n * @param type\n * @param target\n * @param identifier\n * @returns\n */\nfunction resolveIdentifier(type, target, identifier) {\n    // check all arguments\n    assertIsType(type, 1);\n    assertIsStateTreeNode(target, 2);\n    assertIsValidIdentifier(identifier, 3);\n    var node = getStateTreeNode(target).root.identifierCache.resolve(type, normalizeIdentifier(identifier));\n    return node ? node.value : undefined;\n}\n/**\n * Returns the identifier of the target node.\n * This is the *string normalized* identifier, which might not match the type of the identifier attribute\n *\n * @param target\n * @returns\n */\nfunction getIdentifier(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).identifier;\n}\n/**\n * Tests if a reference is valid (pointing to an existing node and optionally if alive) and returns such reference if it the check passes,\n * else it returns undefined.\n *\n * @param getter Function to access the reference.\n * @param checkIfAlive true to also make sure the referenced node is alive (default), false to skip this check.\n * @returns\n */\nfunction tryReference(getter, checkIfAlive) {\n    if (checkIfAlive === void 0) { checkIfAlive = true; }\n    try {\n        var node = getter();\n        if (node === undefined || node === null) {\n            return undefined;\n        }\n        else if (isStateTreeNode(node)) {\n            if (!checkIfAlive) {\n                return node;\n            }\n            else {\n                return isAlive(node) ? node : undefined;\n            }\n        }\n        else {\n            throw fail$1(\"The reference to be checked is not one of node, null or undefined\");\n        }\n    }\n    catch (e) {\n        if (e instanceof InvalidReferenceError) {\n            return undefined;\n        }\n        throw e;\n    }\n}\n/**\n * Tests if a reference is valid (pointing to an existing node and optionally if alive) and returns if the check passes or not.\n *\n * @param getter Function to access the reference.\n * @param checkIfAlive true to also make sure the referenced node is alive (default), false to skip this check.\n * @returns\n */\nfunction isValidReference(getter, checkIfAlive) {\n    if (checkIfAlive === void 0) { checkIfAlive = true; }\n    try {\n        var node = getter();\n        if (node === undefined || node === null) {\n            return false;\n        }\n        else if (isStateTreeNode(node)) {\n            return checkIfAlive ? isAlive(node) : true;\n        }\n        else {\n            throw fail$1(\"The reference to be checked is not one of node, null or undefined\");\n        }\n    }\n    catch (e) {\n        if (e instanceof InvalidReferenceError) {\n            return false;\n        }\n        throw e;\n    }\n}\n/**\n * Try to resolve a given path relative to a given node.\n *\n * @param target\n * @param path\n * @returns\n */\nfunction tryResolve(target, path) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsString(path, 2);\n    var node = resolveNodeByPath(getStateTreeNode(target), path, false);\n    if (node === undefined)\n        return undefined;\n    try {\n        return node.value;\n    }\n    catch (e) {\n        // For what ever reason not resolvable (e.g. totally not existing path, or value that cannot be fetched)\n        // see test / issue: 'try resolve doesn't work #686'\n        return undefined;\n    }\n}\n/**\n * Given two state tree nodes that are part of the same tree,\n * returns the shortest jsonpath needed to navigate from the one to the other\n *\n * @param base\n * @param target\n * @returns\n */\nfunction getRelativePath(base, target) {\n    // check all arguments\n    assertIsStateTreeNode(base, 1);\n    assertIsStateTreeNode(target, 2);\n    return getRelativePathBetweenNodes(getStateTreeNode(base), getStateTreeNode(target));\n}\n/**\n * Returns a deep copy of the given state tree node as new tree.\n * Short hand for `snapshot(x) = getType(x).create(getSnapshot(x))`\n *\n * _Tip: clone will create a literal copy, including the same identifiers. To modify identifiers etc during cloning, don't use clone but take a snapshot of the tree, modify it, and create new instance_\n *\n * @param source\n * @param keepEnvironment indicates whether the clone should inherit the same environment (`true`, the default), or not have an environment (`false`). If an object is passed in as second argument, that will act as the environment for the cloned tree.\n * @returns\n */\nfunction clone(source, keepEnvironment) {\n    if (keepEnvironment === void 0) { keepEnvironment = true; }\n    // check all arguments\n    assertIsStateTreeNode(source, 1);\n    var node = getStateTreeNode(source);\n    return node.type.create(node.snapshot, keepEnvironment === true\n        ? node.root.environment\n        : keepEnvironment === false\n            ? undefined\n            : keepEnvironment); // it's an object or something else\n}\n/**\n * Removes a model element from the state tree, and let it live on as a new state tree\n */\nfunction detach(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    getStateTreeNode(target).detach();\n    return target;\n}\n/**\n * Removes a model element from the state tree, and mark it as end-of-life; the element should not be used anymore\n */\nfunction destroy(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    if (node.isRoot)\n        node.die();\n    else\n        node.parent.removeChild(node.subpath);\n}\n/**\n * Returns true if the given state tree node is not killed yet.\n * This means that the node is still a part of a tree, and that `destroy`\n * has not been called. If a node is not alive anymore, the only thing one can do with it\n * is requesting it's last path and snapshot\n *\n * @param target\n * @returns\n */\nfunction isAlive(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).observableIsAlive;\n}\n/**\n * Use this utility to register a function that should be called whenever the\n * targeted state tree node is destroyed. This is a useful alternative to managing\n * cleanup methods yourself using the `beforeDestroy` hook.\n *\n * This methods returns the same disposer that was passed as argument.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   title: types.string\n * }).actions(self => ({\n *   afterCreate() {\n *     const autoSaveDisposer = reaction(\n *       () => getSnapshot(self),\n *       snapshot => sendSnapshotToServerSomehow(snapshot)\n *     )\n *     // stop sending updates to server if this\n *     // instance is destroyed\n *     addDisposer(self, autoSaveDisposer)\n *   }\n * }))\n * ```\n *\n * @param target\n * @param disposer\n * @returns The same disposer that was passed as argument\n */\nfunction addDisposer(target, disposer) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(disposer, 2);\n    var node = getStateTreeNode(target);\n    node.addDisposer(disposer);\n    return disposer;\n}\n/**\n * Returns the environment of the current state tree. For more info on environments,\n * see [Dependency injection](https://github.com/mobxjs/mobx-state-tree#dependency-injection)\n *\n * Please note that in child nodes access to the root is only possible\n * once the `afterAttach` hook has fired\n *\n * Returns an empty environment if the tree wasn't initialized with an environment\n *\n * @param target\n * @returns\n */\nfunction getEnv(target) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    var node = getStateTreeNode(target);\n    var env = node.root.environment;\n    if (!env)\n        return EMPTY_OBJECT;\n    return env;\n}\n/**\n * Performs a depth first walk through a tree.\n */\nfunction walk(target, processor) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertIsFunction(processor, 2);\n    var node = getStateTreeNode(target);\n    // tslint:disable-next-line:no_unused-variable\n    node.getChildren().forEach(function (child) {\n        if (isStateTreeNode(child.storedValue))\n            walk(child.storedValue, processor);\n    });\n    processor(node.storedValue);\n}\n/**\n * Returns a reflection of the model type properties and name for either a model type or model node.\n *\n * @param typeOrNode\n * @returns\n */\nfunction getPropertyMembers(typeOrNode) {\n    var type;\n    if (isStateTreeNode(typeOrNode)) {\n        type = getType(typeOrNode);\n    }\n    else {\n        type = typeOrNode;\n    }\n    assertArg(type, function (t) { return isModelType(t); }, \"model type or model instance\", 1);\n    return {\n        name: type.name,\n        properties: __assign({}, type.properties)\n    };\n}\n/**\n * Returns a reflection of the model node, including name, properties, views, volatile and actions.\n *\n * @param target\n * @returns\n */\nfunction getMembers(target) {\n    var type = getStateTreeNode(target).type;\n    var reflected = __assign(__assign({}, getPropertyMembers(type)), { actions: [], volatile: [], views: [] });\n    var props = Object.getOwnPropertyNames(target);\n    props.forEach(function (key) {\n        if (key in reflected.properties)\n            return;\n        var descriptor = Object.getOwnPropertyDescriptor(target, key);\n        if (descriptor.get) {\n            if (isComputedProp(target, key))\n                reflected.views.push(key);\n            else\n                reflected.volatile.push(key);\n            return;\n        }\n        if (descriptor.value._isMSTAction === true)\n            reflected.actions.push(key);\n        else if (isObservableProp(target, key))\n            reflected.volatile.push(key);\n        else\n            reflected.views.push(key);\n    });\n    return reflected;\n}\n/**\n * Casts a node snapshot or instance type to an instance type so it can be assigned to a type instance.\n * Note that this is just a cast for the type system, this is, it won't actually convert a snapshot to an instance,\n * but just fool typescript into thinking so.\n * Either way, casting when outside an assignation operation won't compile.\n *\n * Example:\n * ```ts\n * const ModelA = types.model({\n *   n: types.number\n * }).actions(self => ({\n *   setN(aNumber: number) {\n *     self.n = aNumber\n *   }\n * }))\n *\n * const ModelB = types.model({\n *   innerModel: ModelA\n * }).actions(self => ({\n *   someAction() {\n *     // this will allow the compiler to assign a snapshot to the property\n *     self.innerModel = cast({ a: 5 })\n *   }\n * }))\n * ```\n *\n * @param snapshotOrInstance Snapshot or instance\n * @returns The same object casted as an instance\n */\nfunction cast(snapshotOrInstance) {\n    return snapshotOrInstance;\n}\n/**\n * Casts a node instance type to an snapshot type so it can be assigned to a type snapshot (e.g. to be used inside a create call).\n * Note that this is just a cast for the type system, this is, it won't actually convert an instance to a snapshot,\n * but just fool typescript into thinking so.\n *\n * Example:\n * ```ts\n * const ModelA = types.model({\n *   n: types.number\n * }).actions(self => ({\n *   setN(aNumber: number) {\n *     self.n = aNumber\n *   }\n * }))\n *\n * const ModelB = types.model({\n *   innerModel: ModelA\n * })\n *\n * const a = ModelA.create({ n: 5 });\n * // this will allow the compiler to use a model as if it were a snapshot\n * const b = ModelB.create({ innerModel: castToSnapshot(a)})\n * ```\n *\n * @param snapshotOrInstance Snapshot or instance\n * @returns The same object casted as an input (creation) snapshot\n */\nfunction castToSnapshot(snapshotOrInstance) {\n    return snapshotOrInstance;\n}\n/**\n * Casts a node instance type to a reference snapshot type so it can be assigned to a refernence snapshot (e.g. to be used inside a create call).\n * Note that this is just a cast for the type system, this is, it won't actually convert an instance to a refererence snapshot,\n * but just fool typescript into thinking so.\n *\n * Example:\n * ```ts\n * const ModelA = types.model({\n *   id: types.identifier,\n *   n: types.number\n * }).actions(self => ({\n *   setN(aNumber: number) {\n *     self.n = aNumber\n *   }\n * }))\n *\n * const ModelB = types.model({\n *   refA: types.reference(ModelA)\n * })\n *\n * const a = ModelA.create({ id: 'someId', n: 5 });\n * // this will allow the compiler to use a model as if it were a reference snapshot\n * const b = ModelB.create({ refA: castToReferenceSnapshot(a)})\n * ```\n *\n * @param instance Instance\n * @returns The same object casted as an reference snapshot (string or number)\n */\nfunction castToReferenceSnapshot(instance) {\n    return instance;\n}\n/**\n * Returns the unique node id (not to be confused with the instance identifier) for a\n * given instance.\n * This id is a number that is unique for each instance.\n *\n * @export\n * @param target\n * @returns\n */\nfunction getNodeId(target) {\n    assertIsStateTreeNode(target, 1);\n    return getStateTreeNode(target).nodeId;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar BaseNode = /** @class */ (function () {\n    function BaseNode(type, parent, subpath, environment) {\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: type\n        });\n        Object.defineProperty(this, \"environment\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: environment\n        });\n        Object.defineProperty(this, \"_escapedSubpath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_subpath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_subpathUponDeath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_pathUponDeath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"storedValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // usually the same type as the value, but not always (such as with references)\n        Object.defineProperty(this, \"aliveAtom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: NodeLifeCycle.INITIALIZING\n        });\n        Object.defineProperty(this, \"_hookSubscribers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_parent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pathAtom\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.environment = environment;\n        this.baseSetParent(parent, subpath);\n    }\n    Object.defineProperty(BaseNode.prototype, \"subpath\", {\n        get: function () {\n            return this._subpath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"subpathUponDeath\", {\n        get: function () {\n            return this._subpathUponDeath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"pathUponDeath\", {\n        get: function () {\n            return this._pathUponDeath;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"value\", {\n        get: function () {\n            return this.type.getValue(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"state\", {\n        get: function () {\n            return this._state;\n        },\n        set: function (val) {\n            var wasAlive = this.isAlive;\n            this._state = val;\n            var isAlive = this.isAlive;\n            if (this.aliveAtom && wasAlive !== isAlive) {\n                this.aliveAtom.reportChanged();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"fireInternalHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (name) {\n            if (this._hookSubscribers) {\n                this._hookSubscribers.emit(name, this, name);\n            }\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"registerHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (hook, hookHandler) {\n            if (!this._hookSubscribers) {\n                this._hookSubscribers = new EventHandlers();\n            }\n            return this._hookSubscribers.register(hook, hookHandler);\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseSetParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath) {\n            this._parent = parent;\n            this._subpath = subpath;\n            this._escapedSubpath = undefined; // regenerate when needed\n            if (this.pathAtom) {\n                this.pathAtom.reportChanged();\n            }\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"path\", {\n        /*\n         * Returns (escaped) path representation as string\n         */\n        get: function () {\n            return this.getEscapedPath(true);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"getEscapedPath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (reportObserved) {\n            if (reportObserved) {\n                if (!this.pathAtom) {\n                    this.pathAtom = createAtom(\"path\");\n                }\n                this.pathAtom.reportObserved();\n            }\n            if (!this.parent)\n                return \"\";\n            // regenerate escaped subpath if needed\n            if (this._escapedSubpath === undefined) {\n                this._escapedSubpath = !this._subpath ? \"\" : escapeJsonPath(this._subpath);\n            }\n            return this.parent.getEscapedPath(reportObserved) + \"/\" + this._escapedSubpath;\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"isRoot\", {\n        get: function () {\n            return this.parent === null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"isAlive\", {\n        get: function () {\n            return this.state !== NodeLifeCycle.DEAD;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"isDetaching\", {\n        get: function () {\n            return this.state === NodeLifeCycle.DETACHING;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"observableIsAlive\", {\n        get: function () {\n            if (!this.aliveAtom) {\n                this.aliveAtom = createAtom(\"alive\");\n            }\n            this.aliveAtom.reportObserved();\n            return this.isAlive;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseFinalizeCreation\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (whenFinalized) {\n            if (devMode()) {\n                if (!this.isAlive) {\n                    // istanbul ignore next\n                    throw fail(\"assertion failed: cannot finalize the creation of a node that is already dead\");\n                }\n            }\n            // goal: afterCreate hooks runs depth-first. After attach runs parent first, so on afterAttach the parent has completed already\n            if (this.state === NodeLifeCycle.CREATED) {\n                if (this.parent) {\n                    if (this.parent.state !== NodeLifeCycle.FINALIZED) {\n                        // parent not ready yet, postpone\n                        return;\n                    }\n                    this.fireHook(Hook.afterAttach);\n                }\n                this.state = NodeLifeCycle.FINALIZED;\n                if (whenFinalized) {\n                    whenFinalized();\n                }\n            }\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseFinalizeDeath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._hookSubscribers) {\n                this._hookSubscribers.clearAll();\n            }\n            this._subpathUponDeath = this._subpath;\n            this._pathUponDeath = this.getEscapedPath(false);\n            this.baseSetParent(null, \"\");\n            this.state = NodeLifeCycle.DEAD;\n        }\n    });\n    Object.defineProperty(BaseNode.prototype, \"baseAboutToDie\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.fireHook(Hook.beforeDestroy);\n        }\n    });\n    return BaseNode;\n}());\n\n/**\n * @internal\n * @hidden\n */\nvar ScalarNode = /** @class */ (function (_super) {\n    __extends(ScalarNode, _super);\n    function ScalarNode(simpleType, parent, subpath, environment, initialSnapshot) {\n        var _this = _super.call(this, simpleType, parent, subpath, environment) || this;\n        try {\n            _this.storedValue = simpleType.createNewInstance(initialSnapshot);\n        }\n        catch (e) {\n            // short-cut to die the instance, to avoid the snapshot computed starting to throw...\n            _this.state = NodeLifeCycle.DEAD;\n            throw e;\n        }\n        _this.state = NodeLifeCycle.CREATED;\n        // for scalar nodes there's no point in firing this event since it would fire on the constructor, before\n        // anybody can actually register for/listen to it\n        // this.fireHook(Hook.AfterCreate)\n        _this.finalizeCreation();\n        return _this;\n    }\n    Object.defineProperty(ScalarNode.prototype, \"root\", {\n        get: function () {\n            // future optimization: store root ref in the node and maintain it\n            if (!this.parent)\n                throw fail$1(\"This scalar node is not part of a tree\");\n            return this.parent.root;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScalarNode.prototype, \"setParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (newParent, subpath) {\n            var parentChanged = this.parent !== newParent;\n            var subpathChanged = this.subpath !== subpath;\n            if (!parentChanged && !subpathChanged) {\n                return;\n            }\n            if (devMode()) {\n                if (!subpath) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: subpath expected\");\n                }\n                if (!newParent) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: parent expected\");\n                }\n                if (parentChanged) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: scalar nodes cannot change their parent\");\n                }\n            }\n            this.environment = undefined; // use parent's\n            this.baseSetParent(this.parent, subpath);\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"snapshot\", {\n        get: function () {\n            return freeze(this.getSnapshot());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScalarNode.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.type.getSnapshot(this);\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"toString\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var path = (this.isAlive ? this.path : this.pathUponDeath) || \"<root>\";\n            return this.type.name + \"@\" + path + (this.isAlive ? \"\" : \" [dead]\");\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"die\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive || this.state === NodeLifeCycle.DETACHING)\n                return;\n            this.aboutToDie();\n            this.finalizeDeath();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"finalizeCreation\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.baseFinalizeCreation();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"aboutToDie\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.baseAboutToDie();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"finalizeDeath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.baseFinalizeDeath();\n        }\n    });\n    Object.defineProperty(ScalarNode.prototype, \"fireHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (name) {\n            this.fireInternalHook(name);\n        }\n    });\n    return ScalarNode;\n}(BaseNode));\nScalarNode.prototype.die = action(ScalarNode.prototype.die);\n\nvar nextNodeId = 1;\nvar snapshotReactionOptions = {\n    onError: function (e) {\n        throw e;\n    }\n};\n/**\n * @internal\n * @hidden\n */\nvar ObjectNode = /** @class */ (function (_super) {\n    __extends(ObjectNode, _super);\n    function ObjectNode(complexType, parent, subpath, environment, initialValue) {\n        var _this = _super.call(this, complexType, parent, subpath, environment) || this;\n        Object.defineProperty(_this, \"nodeId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: ++nextNodeId\n        });\n        Object.defineProperty(_this, \"identifierAttribute\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"identifier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // Identifier is always normalized to string, even if the identifier property isn't\n        Object.defineProperty(_this, \"unnormalizedIdentifier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"identifierCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"isProtectionEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(_this, \"middlewares\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_applyPatches\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_applySnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_autoUnbox\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        }); // unboxing is disabled when reading child nodes\n        Object.defineProperty(_this, \"_isRunningAction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        }); // only relevant for root\n        Object.defineProperty(_this, \"_hasSnapshotReaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(_this, \"_observableInstanceState\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0 /* UNINITIALIZED */\n        });\n        Object.defineProperty(_this, \"_childNodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_initialSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_cachedInitialSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_cachedInitialSnapshotCreated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(_this, \"_snapshotComputed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_snapshotUponDeath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // #region internal event handling\n        Object.defineProperty(_this, \"_internalEvents\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        _this._snapshotComputed = computed(function () { return freeze(_this.getSnapshot()); });\n        _this.unbox = _this.unbox.bind(_this);\n        _this._initialSnapshot = freeze(initialValue);\n        _this.identifierAttribute = complexType.identifierAttribute;\n        if (!parent) {\n            _this.identifierCache = new IdentifierCache();\n        }\n        _this._childNodes = complexType.initializeChildNodes(_this, _this._initialSnapshot);\n        // identifier can not be changed during lifecycle of a node\n        // so we safely can read it from initial snapshot\n        _this.identifier = null;\n        _this.unnormalizedIdentifier = null;\n        if (_this.identifierAttribute && _this._initialSnapshot) {\n            var id = _this._initialSnapshot[_this.identifierAttribute];\n            if (id === undefined) {\n                // try with the actual node if not (for optional identifiers)\n                var childNode = _this._childNodes[_this.identifierAttribute];\n                if (childNode) {\n                    id = childNode.value;\n                }\n            }\n            if (typeof id !== \"string\" && typeof id !== \"number\") {\n                throw fail$1(\"Instance identifier '\" + _this.identifierAttribute + \"' for type '\" + _this.type.name + \"' must be a string or a number\");\n            }\n            // normalize internal identifier to string\n            _this.identifier = normalizeIdentifier(id);\n            _this.unnormalizedIdentifier = id;\n        }\n        if (!parent) {\n            _this.identifierCache.addNodeToCache(_this);\n        }\n        else {\n            parent.root.identifierCache.addNodeToCache(_this);\n        }\n        return _this;\n    }\n    Object.defineProperty(ObjectNode.prototype, \"applyPatches\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (patches) {\n            this.createObservableInstanceIfNeeded();\n            this._applyPatches(patches);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            this.createObservableInstanceIfNeeded();\n            this._applySnapshot(snapshot);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"createObservableInstanceIfNeeded\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._observableInstanceState === 0 /* UNINITIALIZED */) {\n                this.createObservableInstance();\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"createObservableInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var e_1, _a;\n            if (devMode()) {\n                if (this.state !== NodeLifeCycle.INITIALIZING) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: the creation of the observable instance must be done on the initializing phase\");\n                }\n            }\n            this._observableInstanceState = 1 /* CREATING */;\n            // make sure the parent chain is created as well\n            // array with parent chain from parent to child\n            var parentChain = [];\n            var parent = this.parent;\n            // for performance reasons we never go back further than the most direct\n            // uninitialized parent\n            // this is done to avoid traversing the whole tree to the root when using\n            // the same reference again\n            while (parent &&\n                parent._observableInstanceState === 0 /* UNINITIALIZED */) {\n                parentChain.unshift(parent);\n                parent = parent.parent;\n            }\n            try {\n                // initialize the uninitialized parent chain from parent to child\n                for (var parentChain_1 = __values(parentChain), parentChain_1_1 = parentChain_1.next(); !parentChain_1_1.done; parentChain_1_1 = parentChain_1.next()) {\n                    var p = parentChain_1_1.value;\n                    p.createObservableInstanceIfNeeded();\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (parentChain_1_1 && !parentChain_1_1.done && (_a = parentChain_1.return)) _a.call(parentChain_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var type = this.type;\n            try {\n                this.storedValue = type.createNewInstance(this._childNodes);\n                this.preboot();\n                this._isRunningAction = true;\n                type.finalizeNewInstance(this, this.storedValue);\n            }\n            catch (e) {\n                // short-cut to die the instance, to avoid the snapshot computed starting to throw...\n                this.state = NodeLifeCycle.DEAD;\n                throw e;\n            }\n            finally {\n                this._isRunningAction = false;\n            }\n            this._observableInstanceState = 2 /* CREATED */;\n            this._snapshotComputed.trackAndCompute();\n            if (this.isRoot)\n                this._addSnapshotReaction();\n            this._childNodes = EMPTY_OBJECT;\n            this.state = NodeLifeCycle.CREATED;\n            this.fireHook(Hook.afterCreate);\n            this.finalizeCreation();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"root\", {\n        get: function () {\n            var parent = this.parent;\n            return parent ? parent.root : this;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObjectNode.prototype, \"clearParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.parent)\n                return;\n            // detach if attached\n            this.fireHook(Hook.beforeDetach);\n            var previousState = this.state;\n            this.state = NodeLifeCycle.DETACHING;\n            var root = this.root;\n            var newEnv = root.environment;\n            var newIdCache = root.identifierCache.splitCache(this);\n            try {\n                this.parent.removeChild(this.subpath);\n                this.baseSetParent(null, \"\");\n                this.environment = newEnv;\n                this.identifierCache = newIdCache;\n            }\n            finally {\n                this.state = previousState;\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"setParent\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (newParent, subpath) {\n            var parentChanged = newParent !== this.parent;\n            var subpathChanged = subpath !== this.subpath;\n            if (!parentChanged && !subpathChanged) {\n                return;\n            }\n            if (devMode()) {\n                if (!subpath) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: subpath expected\");\n                }\n                if (!newParent) {\n                    // istanbul ignore next\n                    throw fail$1(\"assertion failed: new parent expected\");\n                }\n                if (this.parent && parentChanged) {\n                    throw fail$1(\"A node cannot exists twice in the state tree. Failed to add \" + this + \" to path '\" + newParent.path + \"/\" + subpath + \"'.\");\n                }\n                if (!this.parent && newParent.root === this) {\n                    throw fail$1(\"A state tree is not allowed to contain itself. Cannot assign \" + this + \" to path '\" + newParent.path + \"/\" + subpath + \"'\");\n                }\n                if (!this.parent &&\n                    !!this.environment &&\n                    this.environment !== newParent.root.environment) {\n                    throw fail$1(\"A state tree cannot be made part of another state tree as long as their environments are different.\");\n                }\n            }\n            if (parentChanged) {\n                // attach to new parent\n                this.environment = undefined; // will use root's\n                newParent.root.identifierCache.mergeCache(this);\n                this.baseSetParent(newParent, subpath);\n                this.fireHook(Hook.afterAttach);\n            }\n            else if (subpathChanged) {\n                // moving to a new subpath on the same parent\n                this.baseSetParent(this.parent, subpath);\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"fireHook\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (name) {\n            var _this = this;\n            this.fireInternalHook(name);\n            var fn = this.storedValue &&\n                typeof this.storedValue === \"object\" &&\n                this.storedValue[name];\n            if (typeof fn === \"function\") {\n                // we check for it to allow old mobx peer dependencies that don't have the method to work (even when still bugged)\n                if (_allowStateChangesInsideComputed) {\n                    _allowStateChangesInsideComputed(function () {\n                        fn.apply(_this.storedValue);\n                    });\n                }\n                else {\n                    fn.apply(this.storedValue);\n                }\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"snapshot\", {\n        // advantage of using computed for a snapshot is that nicely respects transactions etc.\n        get: function () {\n            return this._snapshotComputed.get();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // NOTE: we use this method to get snapshot without creating @computed overhead\n    Object.defineProperty(ObjectNode.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive)\n                return this._snapshotUponDeath;\n            return this._observableInstanceState === 2 /* CREATED */\n                ? this._getActualSnapshot()\n                : this._getCachedInitialSnapshot();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_getActualSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.type.getSnapshot(this);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_getCachedInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this._cachedInitialSnapshotCreated) {\n                var type = this.type;\n                var childNodes = this._childNodes;\n                var snapshot = this._initialSnapshot;\n                this._cachedInitialSnapshot = type.processInitialSnapshot(childNodes, snapshot);\n                this._cachedInitialSnapshotCreated = true;\n            }\n            return this._cachedInitialSnapshot;\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"isRunningAction\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._isRunningAction)\n                return true;\n            if (this.isRoot)\n                return false;\n            return this.parent.isRunningAction();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"assertAlive\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (context) {\n            var livelinessChecking = getLivelinessChecking();\n            if (!this.isAlive && livelinessChecking !== \"ignore\") {\n                var error = this._getAssertAliveError(context);\n                switch (livelinessChecking) {\n                    case \"error\":\n                        throw fail$1(error);\n                    case \"warn\":\n                        warnError(error);\n                }\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_getAssertAliveError\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (context) {\n            var escapedPath = this.getEscapedPath(false) || this.pathUponDeath || \"\";\n            var subpath = (context.subpath && escapeJsonPath(context.subpath)) || \"\";\n            var actionContext = context.actionContext || getCurrentActionContext();\n            // try to use a real action context if possible since it includes the action name\n            if (actionContext && actionContext.type !== \"action\" && actionContext.parentActionEvent) {\n                actionContext = actionContext.parentActionEvent;\n            }\n            var actionFullPath = \"\";\n            if (actionContext && actionContext.name != null) {\n                // try to use the context, and if it not available use the node one\n                var actionPath = (actionContext && actionContext.context && getPath(actionContext.context)) ||\n                    escapedPath;\n                actionFullPath = actionPath + \".\" + actionContext.name + \"()\";\n            }\n            return \"You are trying to read or write to an object that is no longer part of a state tree. (Object type: '\" + this.type.name + \"', Path upon death: '\" + escapedPath + \"', Subpath: '\" + subpath + \"', Action: '\" + actionFullPath + \"'). Either detach nodes first, or don't use objects after removing / replacing them in the tree.\";\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (subpath) {\n            this.assertAlive({\n                subpath: subpath\n            });\n            this._autoUnbox = false;\n            try {\n                return this._observableInstanceState === 2 /* CREATED */\n                    ? this.type.getChildNode(this, subpath)\n                    : this._childNodes[subpath];\n            }\n            finally {\n                this._autoUnbox = true;\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.assertAlive(EMPTY_OBJECT);\n            this._autoUnbox = false;\n            try {\n                return this._observableInstanceState === 2 /* CREATED */\n                    ? this.type.getChildren(this)\n                    : convertChildNodesToArray(this._childNodes);\n            }\n            finally {\n                this._autoUnbox = true;\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (propertyName) {\n            return this.type.getChildType(propertyName);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"isProtected\", {\n        get: function () {\n            return this.root.isProtectionEnabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ObjectNode.prototype, \"assertWritable\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (context) {\n            this.assertAlive(context);\n            if (!this.isRunningAction() && this.isProtected) {\n                throw fail$1(\"Cannot modify '\" + this + \"', the object is protected and can only be modified by using an action.\");\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (subpath) {\n            this.type.removeChild(this, subpath);\n        }\n    });\n    // bound on the constructor\n    Object.defineProperty(ObjectNode.prototype, \"unbox\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNode) {\n            if (!childNode)\n                return childNode;\n            this.assertAlive({\n                subpath: childNode.subpath || childNode.subpathUponDeath\n            });\n            return this._autoUnbox ? childNode.value : childNode;\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"toString\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var path = (this.isAlive ? this.path : this.pathUponDeath) || \"<root>\";\n            var identifier = this.identifier ? \"(id: \" + this.identifier + \")\" : \"\";\n            return this.type.name + \"@\" + path + identifier + (this.isAlive ? \"\" : \" [dead]\");\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"finalizeCreation\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            this.baseFinalizeCreation(function () {\n                var e_2, _a;\n                try {\n                    for (var _b = __values(_this.getChildren()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var child = _c.value;\n                        child.finalizeCreation();\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n                _this.fireInternalHook(Hook.afterCreationFinalization);\n            });\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"detach\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive)\n                throw fail$1(\"Error while detaching, node is not alive.\");\n            this.clearParent();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"preboot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var self = this;\n            this._applyPatches = createActionInvoker(this.storedValue, \"@APPLY_PATCHES\", function (patches) {\n                patches.forEach(function (patch) {\n                    if (!patch.path) {\n                        self.type.applySnapshot(self, patch.value);\n                        return;\n                    }\n                    var parts = splitJsonPath(patch.path);\n                    var node = resolveNodeByPathParts(self, parts.slice(0, -1));\n                    node.applyPatchLocally(parts[parts.length - 1], patch);\n                });\n            });\n            this._applySnapshot = createActionInvoker(this.storedValue, \"@APPLY_SNAPSHOT\", function (snapshot) {\n                // if the snapshot is the same as the current one, avoid performing a reconcile\n                if (snapshot === self.snapshot)\n                    return;\n                // else, apply it by calling the type logic\n                return self.type.applySnapshot(self, snapshot);\n            });\n            addHiddenFinalProp(this.storedValue, \"$treenode\", this);\n            addHiddenFinalProp(this.storedValue, \"toJSON\", toJSON);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"die\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (!this.isAlive || this.state === NodeLifeCycle.DETACHING)\n                return;\n            this.aboutToDie();\n            this.finalizeDeath();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"aboutToDie\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._observableInstanceState === 0 /* UNINITIALIZED */) {\n                return;\n            }\n            this.getChildren().forEach(function (node) {\n                node.aboutToDie();\n            });\n            // beforeDestroy should run before the disposers since else we could end up in a situation where\n            // a disposer added with addDisposer at this stage (beforeDestroy) is actually never released\n            this.baseAboutToDie();\n            this._internalEventsEmit(\"dispose\" /* Dispose */);\n            this._internalEventsClear(\"dispose\" /* Dispose */);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"finalizeDeath\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            // invariant: not called directly but from \"die\"\n            this.getChildren().forEach(function (node) {\n                node.finalizeDeath();\n            });\n            this.root.identifierCache.notifyDied(this);\n            // \"kill\" the computed prop and just store the last snapshot\n            var snapshot = this.snapshot;\n            this._snapshotUponDeath = snapshot;\n            this._internalEventsClearAll();\n            this.baseFinalizeDeath();\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"onSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (onChange) {\n            this._addSnapshotReaction();\n            return this._internalEventsRegister(\"snapshot\" /* Snapshot */, onChange);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"emitSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            this._internalEventsEmit(\"snapshot\" /* Snapshot */, snapshot);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"onPatch\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (handler) {\n            return this._internalEventsRegister(\"patch\" /* Patch */, handler);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"emitPatch\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (basePatch, source) {\n            if (this._internalEventsHasSubscribers(\"patch\" /* Patch */)) {\n                var localizedPatch = extend({}, basePatch, {\n                    path: source.path.substr(this.path.length) + \"/\" + basePatch.path // calculate the relative path of the patch\n                });\n                var _a = __read(splitPatch(localizedPatch), 2), patch = _a[0], reversePatch = _a[1];\n                this._internalEventsEmit(\"patch\" /* Patch */, patch, reversePatch);\n            }\n            if (this.parent)\n                this.parent.emitPatch(basePatch, source);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"hasDisposer\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (disposer) {\n            return this._internalEventsHas(\"dispose\" /* Dispose */, disposer);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"addDisposer\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (disposer) {\n            if (!this.hasDisposer(disposer)) {\n                this._internalEventsRegister(\"dispose\" /* Dispose */, disposer, true);\n                return;\n            }\n            throw fail$1(\"cannot add a disposer when it is already registered for execution\");\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"removeDisposer\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (disposer) {\n            if (!this._internalEventsHas(\"dispose\" /* Dispose */, disposer)) {\n                throw fail$1(\"cannot remove a disposer which was never registered for execution\");\n            }\n            this._internalEventsUnregister(\"dispose\" /* Dispose */, disposer);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"removeMiddleware\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (middleware) {\n            if (this.middlewares) {\n                var index = this.middlewares.indexOf(middleware);\n                if (index >= 0) {\n                    this.middlewares.splice(index, 1);\n                }\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"addMiddleWare\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (handler, includeHooks) {\n            var _this = this;\n            if (includeHooks === void 0) { includeHooks = true; }\n            var middleware = { handler: handler, includeHooks: includeHooks };\n            if (!this.middlewares)\n                this.middlewares = [middleware];\n            else\n                this.middlewares.push(middleware);\n            return function () {\n                _this.removeMiddleware(middleware);\n            };\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (subpath, patch) {\n            this.assertWritable({\n                subpath: subpath\n            });\n            this.createObservableInstanceIfNeeded();\n            this.type.applyPatchLocally(this, subpath, patch);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_addSnapshotReaction\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            if (!this._hasSnapshotReaction) {\n                var snapshotDisposer = reaction(function () { return _this.snapshot; }, function (snapshot) { return _this.emitSnapshot(snapshot); }, snapshotReactionOptions);\n                this.addDisposer(snapshotDisposer);\n                this._hasSnapshotReaction = true;\n            }\n        }\n    });\n    // we proxy the methods to avoid creating an EventHandlers instance when it is not needed\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsHasSubscribers\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            return !!this._internalEvents && this._internalEvents.hasSubscribers(event);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsRegister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, eventHandler, atTheBeginning) {\n            if (atTheBeginning === void 0) { atTheBeginning = false; }\n            if (!this._internalEvents) {\n                this._internalEvents = new EventHandlers();\n            }\n            return this._internalEvents.register(event, eventHandler, atTheBeginning);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsHas\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, eventHandler) {\n            return !!this._internalEvents && this._internalEvents.has(event, eventHandler);\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsUnregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, eventHandler) {\n            if (this._internalEvents) {\n                this._internalEvents.unregister(event, eventHandler);\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsEmit\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            var _a;\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            if (this._internalEvents) {\n                (_a = this._internalEvents).emit.apply(_a, __spread([event], args));\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsClear\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            if (this._internalEvents) {\n                this._internalEvents.clear(event);\n            }\n        }\n    });\n    Object.defineProperty(ObjectNode.prototype, \"_internalEventsClearAll\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this._internalEvents) {\n                this._internalEvents.clearAll();\n            }\n        }\n    });\n    return ObjectNode;\n}(BaseNode));\nObjectNode.prototype.createObservableInstance = action(ObjectNode.prototype.createObservableInstance);\nObjectNode.prototype.detach = action(ObjectNode.prototype.detach);\nObjectNode.prototype.die = action(ObjectNode.prototype.die);\n\nvar _a;\n/**\n * @internal\n * @hidden\n */\nvar TypeFlags;\n(function (TypeFlags) {\n    TypeFlags[TypeFlags[\"String\"] = 1] = \"String\";\n    TypeFlags[TypeFlags[\"Number\"] = 2] = \"Number\";\n    TypeFlags[TypeFlags[\"Boolean\"] = 4] = \"Boolean\";\n    TypeFlags[TypeFlags[\"Date\"] = 8] = \"Date\";\n    TypeFlags[TypeFlags[\"Literal\"] = 16] = \"Literal\";\n    TypeFlags[TypeFlags[\"Array\"] = 32] = \"Array\";\n    TypeFlags[TypeFlags[\"Map\"] = 64] = \"Map\";\n    TypeFlags[TypeFlags[\"Object\"] = 128] = \"Object\";\n    TypeFlags[TypeFlags[\"Frozen\"] = 256] = \"Frozen\";\n    TypeFlags[TypeFlags[\"Optional\"] = 512] = \"Optional\";\n    TypeFlags[TypeFlags[\"Reference\"] = 1024] = \"Reference\";\n    TypeFlags[TypeFlags[\"Identifier\"] = 2048] = \"Identifier\";\n    TypeFlags[TypeFlags[\"Late\"] = 4096] = \"Late\";\n    TypeFlags[TypeFlags[\"Refinement\"] = 8192] = \"Refinement\";\n    TypeFlags[TypeFlags[\"Union\"] = 16384] = \"Union\";\n    TypeFlags[TypeFlags[\"Null\"] = 32768] = \"Null\";\n    TypeFlags[TypeFlags[\"Undefined\"] = 65536] = \"Undefined\";\n    TypeFlags[TypeFlags[\"Integer\"] = 131072] = \"Integer\";\n    TypeFlags[TypeFlags[\"Custom\"] = 262144] = \"Custom\";\n    TypeFlags[TypeFlags[\"SnapshotProcessor\"] = 524288] = \"SnapshotProcessor\";\n})(TypeFlags || (TypeFlags = {}));\n/**\n * @internal\n * @hidden\n */\nvar cannotDetermineSubtype = \"cannotDetermine\";\n/** @hidden */\nvar $type = Symbol(\"$type\");\n/**\n * A base type produces a MST node (Node in the state tree)\n *\n * @internal\n * @hidden\n */\nvar BaseType = /** @class */ (function () {\n    function BaseType(name) {\n        Object.defineProperty(this, _a, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // these are just to make inner types avaialable to inherited classes\n        Object.defineProperty(this, \"C\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"S\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"T\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"N\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"isType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n    }\n    Object.defineProperty(BaseType.prototype, \"create\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot, environment) {\n            typecheckInternal(this, snapshot);\n            return this.instantiate(null, \"\", environment, snapshot).value;\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, applyPostProcess) {\n            // istanbul ignore next\n            throw fail$1(\"unimplemented method\");\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return type === this;\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"validate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var node = getStateTreeNodeSafe(value);\n            if (node) {\n                var valueType = getType(value);\n                return this.isAssignableFrom(valueType)\n                    ? typeCheckSuccess()\n                    : typeCheckFailure(context, value);\n                // it is tempting to compare snapshots, but in that case we should always clone on assignments...\n            }\n            return this.isValidSnapshot(value, context);\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"is\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (thing) {\n            return this.validate(thing, [{ path: \"\", type: this }]).length === 0;\n        }\n    });\n    Object.defineProperty(BaseType.prototype, \"Type\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.Type should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.Type`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseType.prototype, \"TypeWithoutSTN\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.TypeWithoutSTN should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.TypeWithoutSTN`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseType.prototype, \"SnapshotType\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.SnapshotType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.SnapshotType`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseType.prototype, \"CreationType\", {\n        get: function () {\n            // istanbul ignore next\n            throw fail$1(\"Factory.CreationType should not be actually called. It is just a Type signature that can be used at compile time with Typescript, by using `typeof type.CreationType`\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BaseType;\n}());\n_a = $type;\nBaseType.prototype.create = action(BaseType.prototype.create);\n/**\n * A complex type produces a MST node (Node in the state tree)\n *\n * @internal\n * @hidden\n */\nvar ComplexType = /** @class */ (function (_super) {\n    __extends(ComplexType, _super);\n    function ComplexType(name) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"identifierAttribute\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        return _this;\n    }\n    Object.defineProperty(ComplexType.prototype, \"create\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot, environment) {\n            if (snapshot === void 0) { snapshot = this.getDefaultSnapshot(); }\n            return _super.prototype.create.call(this, snapshot, environment);\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            node.createObservableInstanceIfNeeded();\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"tryToReconcileNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue) {\n            if (current.isDetaching)\n                return false;\n            if (current.snapshot === newValue) {\n                // newValue is the current snapshot of the node, noop\n                return true;\n            }\n            if (isStateTreeNode(newValue) && getStateTreeNode(newValue) === current) {\n                // the current node is the same as the new one\n                return true;\n            }\n            if (current.type === this &&\n                isMutable(newValue) &&\n                !isStateTreeNode(newValue) &&\n                (!current.identifierAttribute ||\n                    current.identifier ===\n                        normalizeIdentifier(newValue[current.identifierAttribute]))) {\n                // the newValue has no node, so can be treated like a snapshot\n                // we can reconcile\n                current.applySnapshot(newValue);\n                return true;\n            }\n            return false;\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var nodeReconciled = this.tryToReconcileNode(current, newValue);\n            if (nodeReconciled) {\n                current.setParent(parent, subpath);\n                return current;\n            }\n            // current node cannot be recycled in any way\n            current.die(); // noop if detaching\n            // attempt to reuse the new one\n            if (isStateTreeNode(newValue) && this.isAssignableFrom(getType(newValue))) {\n                // newValue is a Node as well, move it here..\n                var newNode = getStateTreeNode(newValue);\n                newNode.setParent(parent, subpath);\n                return newNode;\n            }\n            // nothing to do, we have to create a new node\n            return this.instantiate(parent, subpath, undefined, newValue);\n        }\n    });\n    Object.defineProperty(ComplexType.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return null;\n        }\n    });\n    return ComplexType;\n}(BaseType));\nComplexType.prototype.create = action(ComplexType.prototype.create);\n/**\n * @internal\n * @hidden\n */\nvar SimpleType = /** @class */ (function (_super) {\n    __extends(SimpleType, _super);\n    function SimpleType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SimpleType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            return snapshot;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            // if we ever find a case where scalar nodes can be accessed without iterating through its parent\n            // uncomment this to make sure the parent chain is created when this is accessed\n            // if (node.parent) {\n            //     node.parent.createObservableInstanceIfNeeded()\n            // }\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            // reconcile only if type and value are still the same, and only if the node is not detaching\n            if (!current.isDetaching && current.type === this && current.storedValue === newValue) {\n                return current;\n            }\n            var res = this.instantiate(parent, subpath, undefined, newValue);\n            current.die(); // noop if detaching\n            return res;\n        }\n    });\n    Object.defineProperty(SimpleType.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return null;\n        }\n    });\n    return SimpleType;\n}(BaseType));\n/**\n * Returns if a given value represents a type.\n *\n * @param value Value to check.\n * @returns `true` if the value is a type.\n */\nfunction isType(value) {\n    return typeof value === \"object\" && value && value.isType === true;\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsType(type, argNumber) {\n    assertArg(type, isType, \"mobx-state-tree type\", argNumber);\n}\n\nvar runningActions = new Map();\n/**\n * Note: Consider migrating to `createActionTrackingMiddleware2`, it is easier to use.\n *\n * Convenience utility to create action based middleware that supports async processes more easily.\n * All hooks are called for both synchronous and asynchronous actions. Except that either `onSuccess` or `onFail` is called\n *\n * The create middleware tracks the process of an action (assuming it passes the `filter`).\n * `onResume` can return any value, which will be passed as second argument to any other hook. This makes it possible to keep state during a process.\n *\n * See the `atomic` middleware for an example\n *\n * @param hooks\n * @returns\n */\nfunction createActionTrackingMiddleware(hooks) {\n    return function actionTrackingMiddleware(call, next, abort) {\n        switch (call.type) {\n            case \"action\": {\n                if (!hooks.filter || hooks.filter(call) === true) {\n                    var context = hooks.onStart(call);\n                    hooks.onResume(call, context);\n                    runningActions.set(call.id, {\n                        call: call,\n                        context: context,\n                        async: false\n                    });\n                    try {\n                        var res = next(call);\n                        hooks.onSuspend(call, context);\n                        if (runningActions.get(call.id).async === false) {\n                            runningActions.delete(call.id);\n                            hooks.onSuccess(call, context, res);\n                        }\n                        return res;\n                    }\n                    catch (e) {\n                        runningActions.delete(call.id);\n                        hooks.onFail(call, context, e);\n                        throw e;\n                    }\n                }\n                else {\n                    return next(call);\n                }\n            }\n            case \"flow_spawn\": {\n                var root = runningActions.get(call.rootId);\n                root.async = true;\n                return next(call);\n            }\n            case \"flow_resume\":\n            case \"flow_resume_error\": {\n                var root = runningActions.get(call.rootId);\n                hooks.onResume(call, root.context);\n                try {\n                    return next(call);\n                }\n                finally {\n                    hooks.onSuspend(call, root.context);\n                }\n            }\n            case \"flow_throw\": {\n                var root = runningActions.get(call.rootId);\n                runningActions.delete(call.rootId);\n                hooks.onFail(call, root.context, call.args[0]);\n                return next(call);\n            }\n            case \"flow_return\": {\n                var root = runningActions.get(call.rootId);\n                runningActions.delete(call.rootId);\n                hooks.onSuccess(call, root.context, call.args[0]);\n                return next(call);\n            }\n        }\n    };\n}\n\nvar RunningAction = /** @class */ (function () {\n    function RunningAction(hooks, call) {\n        Object.defineProperty(this, \"hooks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: hooks\n        });\n        Object.defineProperty(this, \"call\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: call\n        });\n        Object.defineProperty(this, \"flowsPending\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"running\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        if (hooks) {\n            hooks.onStart(call);\n        }\n    }\n    Object.defineProperty(RunningAction.prototype, \"finish\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (error) {\n            if (this.running) {\n                this.running = false;\n                if (this.hooks) {\n                    this.hooks.onFinish(this.call, error);\n                }\n            }\n        }\n    });\n    Object.defineProperty(RunningAction.prototype, \"incFlowsPending\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.flowsPending++;\n        }\n    });\n    Object.defineProperty(RunningAction.prototype, \"decFlowsPending\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.flowsPending--;\n        }\n    });\n    Object.defineProperty(RunningAction.prototype, \"hasFlowsPending\", {\n        get: function () {\n            return this.flowsPending > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RunningAction;\n}());\n/**\n * Convenience utility to create action based middleware that supports async processes more easily.\n * The flow is like this:\n * - for each action: if filter passes -> `onStart` -> (inner actions recursively) -> `onFinish`\n *\n * Example: if we had an action `a` that called inside an action `b1`, then `b2` the flow would be:\n * - `filter(a)`\n * - `onStart(a)`\n *   - `filter(b1)`\n *   - `onStart(b1)`\n *   - `onFinish(b1)`\n *   - `filter(b2)`\n *   - `onStart(b2)`\n *   - `onFinish(b2)`\n * - `onFinish(a)`\n *\n * The flow is the same no matter if the actions are sync or async.\n *\n * See the `atomic` middleware for an example\n *\n * @param hooks\n * @returns\n */\nfunction createActionTrackingMiddleware2(middlewareHooks) {\n    var runningActions = new WeakMap();\n    return function actionTrackingMiddleware(call, next) {\n        // find parentRunningAction\n        var parentRunningAction = call.parentActionEvent\n            ? runningActions.get(call.parentActionEvent)\n            : undefined;\n        if (call.type === \"action\") {\n            var newCall = __assign(__assign({}, call), { \n                // make a shallow copy of the parent action env\n                env: parentRunningAction && parentRunningAction.call.env, parentCall: parentRunningAction && parentRunningAction.call });\n            var passesFilter = !middlewareHooks.filter || middlewareHooks.filter(newCall);\n            var hooks = passesFilter ? middlewareHooks : undefined;\n            var runningAction = new RunningAction(hooks, newCall);\n            runningActions.set(call, runningAction);\n            var res = void 0;\n            try {\n                res = next(call);\n            }\n            catch (e) {\n                runningAction.finish(e);\n                throw e;\n            }\n            if (!runningAction.hasFlowsPending) {\n                // sync action finished\n                runningAction.finish();\n            }\n            return res;\n        }\n        else {\n            if (!parentRunningAction) {\n                return next(call);\n            }\n            switch (call.type) {\n                case \"flow_spawn\": {\n                    parentRunningAction.incFlowsPending();\n                    return next(call);\n                }\n                case \"flow_resume\":\n                case \"flow_resume_error\": {\n                    return next(call);\n                }\n                case \"flow_throw\": {\n                    var error = call.args[0];\n                    try {\n                        return next(call);\n                    }\n                    finally {\n                        parentRunningAction.decFlowsPending();\n                        if (!parentRunningAction.hasFlowsPending) {\n                            parentRunningAction.finish(error);\n                        }\n                    }\n                }\n                case \"flow_return\": {\n                    try {\n                        return next(call);\n                    }\n                    finally {\n                        parentRunningAction.decFlowsPending();\n                        if (!parentRunningAction.hasFlowsPending) {\n                            parentRunningAction.finish();\n                        }\n                    }\n                }\n            }\n        }\n    };\n}\n\nfunction serializeArgument(node, actionName, index, arg) {\n    if (arg instanceof Date)\n        return { $MST_DATE: arg.getTime() };\n    if (isPrimitive(arg))\n        return arg;\n    // We should not serialize MST nodes, even if we can, because we don't know if the receiving party can handle a raw snapshot instead of an\n    // MST type instance. So if one wants to serialize a MST node that was pass in, either explitly pass: 1: an id, 2: a (relative) path, 3: a snapshot\n    if (isStateTreeNode(arg))\n        return serializeTheUnserializable(\"[MSTNode: \" + getType(arg).name + \"]\");\n    if (typeof arg === \"function\")\n        return serializeTheUnserializable(\"[function]\");\n    if (typeof arg === \"object\" && !isPlainObject(arg) && !isArray(arg))\n        return serializeTheUnserializable(\"[object \" + ((arg && arg.constructor && arg.constructor.name) ||\n            \"Complex Object\") + \"]\");\n    try {\n        // Check if serializable, cycle free etc...\n        // MWE: there must be a better way....\n        JSON.stringify(arg); // or throws\n        return arg;\n    }\n    catch (e) {\n        return serializeTheUnserializable(\"\" + e);\n    }\n}\nfunction deserializeArgument(adm, value) {\n    if (value && typeof value === \"object\" && \"$MST_DATE\" in value)\n        return new Date(value[\"$MST_DATE\"]);\n    return value;\n}\nfunction serializeTheUnserializable(baseType) {\n    return {\n        $MST_UNSERIALIZABLE: true,\n        type: baseType\n    };\n}\n/**\n * Applies an action or a series of actions in a single MobX transaction.\n * Does not return any value\n * Takes an action description as produced by the `onAction` middleware.\n *\n * @param target\n * @param actions\n */\nfunction applyAction(target, actions) {\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    assertArg(actions, function (a) { return typeof a === \"object\"; }, \"object or array\", 2);\n    runInAction(function () {\n        asArray(actions).forEach(function (action) { return baseApplyAction(target, action); });\n    });\n}\nfunction baseApplyAction(target, action) {\n    var resolvedTarget = tryResolve(target, action.path || \"\");\n    if (!resolvedTarget)\n        throw fail$1(\"Invalid action path: \" + (action.path || \"\"));\n    var node = getStateTreeNode(resolvedTarget);\n    // Reserved functions\n    if (action.name === \"@APPLY_PATCHES\") {\n        return applyPatch.call(null, resolvedTarget, action.args[0]);\n    }\n    if (action.name === \"@APPLY_SNAPSHOT\") {\n        return applySnapshot.call(null, resolvedTarget, action.args[0]);\n    }\n    if (!(typeof resolvedTarget[action.name] === \"function\"))\n        throw fail$1(\"Action '\" + action.name + \"' does not exist in '\" + node.path + \"'\");\n    return resolvedTarget[action.name].apply(resolvedTarget, action.args ? action.args.map(function (v) { return deserializeArgument(node, v); }) : []);\n}\n/**\n * Small abstraction around `onAction` and `applyAction`, attaches an action listener to a tree and records all the actions emitted.\n * Returns an recorder object with the following signature:\n *\n * Example:\n * ```ts\n * export interface IActionRecorder {\n *      // the recorded actions\n *      actions: ISerializedActionCall[]\n *      // true if currently recording\n *      recording: boolean\n *      // stop recording actions\n *      stop(): void\n *      // resume recording actions\n *      resume(): void\n *      // apply all the recorded actions on the given object\n *      replay(target: IAnyStateTreeNode): void\n * }\n * ```\n *\n * The optional filter function allows to skip recording certain actions.\n *\n * @param subject\n * @returns\n */\nfunction recordActions(subject, filter) {\n    // check all arguments\n    assertIsStateTreeNode(subject, 1);\n    var actions = [];\n    var listener = function (call) {\n        var recordThis = filter ? filter(call, getRunningActionContext()) : true;\n        if (recordThis) {\n            actions.push(call);\n        }\n    };\n    var disposer;\n    var recorder = {\n        actions: actions,\n        get recording() {\n            return !!disposer;\n        },\n        stop: function () {\n            if (disposer) {\n                disposer();\n                disposer = undefined;\n            }\n        },\n        resume: function () {\n            if (disposer)\n                return;\n            disposer = onAction(subject, listener);\n        },\n        replay: function (target) {\n            applyAction(target, actions);\n        }\n    };\n    recorder.resume();\n    return recorder;\n}\n/**\n * Registers a function that will be invoked for each action that is called on the provided model instance, or to any of its children.\n * See [actions](https://github.com/mobxjs/mobx-state-tree#actions) for more details. onAction events are emitted only for the outermost called action in the stack.\n * Action can also be intercepted by middleware using addMiddleware to change the function call before it will be run.\n *\n * Not all action arguments might be serializable. For unserializable arguments, a struct like `{ $MST_UNSERIALIZABLE: true, type: \"someType\" }` will be generated.\n * MST Nodes are considered non-serializable as well (they could be serialized as there snapshot, but it is uncertain whether an replaying party will be able to handle such a non-instantiated snapshot).\n * Rather, when using `onAction` middleware, one should consider in passing arguments which are 1: an id, 2: a (relative) path, or 3: a snapshot. Instead of a real MST node.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   task: types.string\n * })\n *\n * const TodoStore = types.model({\n *   todos: types.array(Todo)\n * }).actions(self => ({\n *   add(todo) {\n *     self.todos.push(todo);\n *   }\n * }))\n *\n * const s = TodoStore.create({ todos: [] })\n *\n * let disposer = onAction(s, (call) => {\n *   console.log(call);\n * })\n *\n * s.add({ task: \"Grab a coffee\" })\n * // Logs: { name: \"add\", path: \"\", args: [{ task: \"Grab a coffee\" }] }\n * ```\n *\n * @param target\n * @param listener\n * @param attachAfter (default false) fires the listener *after* the action has executed instead of before.\n * @returns\n */\nfunction onAction(target, listener, attachAfter) {\n    if (attachAfter === void 0) { attachAfter = false; }\n    // check all arguments\n    assertIsStateTreeNode(target, 1);\n    if (devMode()) {\n        if (!isRoot(target))\n            warnError(\"Warning: Attaching onAction listeners to non root nodes is dangerous: No events will be emitted for actions initiated higher up in the tree.\");\n        if (!isProtected(target))\n            warnError(\"Warning: Attaching onAction listeners to non protected nodes is dangerous: No events will be emitted for direct modifications without action.\");\n    }\n    return addMiddleware(target, function handler(rawCall, next) {\n        if (rawCall.type === \"action\" && rawCall.id === rawCall.rootId) {\n            var sourceNode_1 = getStateTreeNode(rawCall.context);\n            var info = {\n                name: rawCall.name,\n                path: getRelativePathBetweenNodes(getStateTreeNode(target), sourceNode_1),\n                args: rawCall.args.map(function (arg, index) {\n                    return serializeArgument(sourceNode_1, rawCall.name, index, arg);\n                })\n            };\n            if (attachAfter) {\n                var res = next(rawCall);\n                listener(info);\n                return res;\n            }\n            else {\n                listener(info);\n                return next(rawCall);\n            }\n        }\n        else {\n            return next(rawCall);\n        }\n    });\n}\n\nvar nextActionId = 1;\nvar currentActionContext;\n/**\n * @internal\n * @hidden\n */\nfunction getCurrentActionContext() {\n    return currentActionContext;\n}\n/**\n * @internal\n * @hidden\n */\nfunction getNextActionId() {\n    return nextActionId++;\n}\n// TODO: optimize away entire action context if there is no middleware in tree?\n/**\n * @internal\n * @hidden\n */\nfunction runWithActionContext(context, fn) {\n    var node = getStateTreeNode(context.context);\n    if (context.type === \"action\") {\n        node.assertAlive({\n            actionContext: context\n        });\n    }\n    var baseIsRunningAction = node._isRunningAction;\n    node._isRunningAction = true;\n    var previousContext = currentActionContext;\n    currentActionContext = context;\n    try {\n        return runMiddleWares(node, context, fn);\n    }\n    finally {\n        currentActionContext = previousContext;\n        node._isRunningAction = baseIsRunningAction;\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction getParentActionContext(parentContext) {\n    if (!parentContext)\n        return undefined;\n    if (parentContext.type === \"action\")\n        return parentContext;\n    return parentContext.parentActionEvent;\n}\n/**\n * @internal\n * @hidden\n */\nfunction createActionInvoker(target, name, fn) {\n    var res = function () {\n        var id = getNextActionId();\n        var parentContext = currentActionContext;\n        var parentActionContext = getParentActionContext(parentContext);\n        return runWithActionContext({\n            type: \"action\",\n            name: name,\n            id: id,\n            args: argsToArray(arguments),\n            context: target,\n            tree: getRoot(target),\n            rootId: parentContext ? parentContext.rootId : id,\n            parentId: parentContext ? parentContext.id : 0,\n            allParentIds: parentContext\n                ? __spread(parentContext.allParentIds, [parentContext.id]) : [],\n            parentEvent: parentContext,\n            parentActionEvent: parentActionContext\n        }, fn);\n    };\n    res._isMSTAction = true;\n    return res;\n}\n/**\n * Middleware can be used to intercept any action is invoked on the subtree where it is attached.\n * If a tree is protected (by default), this means that any mutation of the tree will pass through your middleware.\n *\n * For more details, see the [middleware docs](concepts/middleware.md)\n *\n * @param target Node to apply the middleware to.\n * @param middleware Middleware to apply.\n * @returns A callable function to dispose the middleware.\n */\nfunction addMiddleware(target, handler, includeHooks) {\n    if (includeHooks === void 0) { includeHooks = true; }\n    var node = getStateTreeNode(target);\n    if (devMode()) {\n        if (!node.isProtectionEnabled) {\n            warnError(\"It is recommended to protect the state tree before attaching action middleware, as otherwise it cannot be guaranteed that all changes are passed through middleware. See `protect`\");\n        }\n    }\n    return node.addMiddleWare(handler, includeHooks);\n}\n/**\n * Binds middleware to a specific action.\n *\n * Example:\n * ```ts\n * type.actions(self => {\n *   function takeA____() {\n *       self.toilet.donate()\n *       self.wipe()\n *       self.wipe()\n *       self.toilet.flush()\n *   }\n *   return {\n *     takeA____: decorate(atomic, takeA____)\n *   }\n * })\n * ```\n *\n * @param handler\n * @param fn\n * @param includeHooks\n * @returns The original function\n */\nfunction decorate(handler, fn, includeHooks) {\n    if (includeHooks === void 0) { includeHooks = true; }\n    var middleware = { handler: handler, includeHooks: includeHooks };\n    fn.$mst_middleware = fn.$mst_middleware || [];\n    fn.$mst_middleware.push(middleware);\n    return fn;\n}\nvar CollectedMiddlewares = /** @class */ (function () {\n    function CollectedMiddlewares(node, fn) {\n        Object.defineProperty(this, \"arrayIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"inArrayIndex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"middlewares\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // we just push middleware arrays into an array of arrays to avoid making copies\n        if (fn.$mst_middleware) {\n            this.middlewares.push(fn.$mst_middleware);\n        }\n        var n = node;\n        // Find all middlewares. Optimization: cache this?\n        while (n) {\n            if (n.middlewares)\n                this.middlewares.push(n.middlewares);\n            n = n.parent;\n        }\n    }\n    Object.defineProperty(CollectedMiddlewares.prototype, \"isEmpty\", {\n        get: function () {\n            return this.middlewares.length <= 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CollectedMiddlewares.prototype, \"getNextMiddleware\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var array = this.middlewares[this.arrayIndex];\n            if (!array)\n                return undefined;\n            var item = array[this.inArrayIndex++];\n            if (!item) {\n                this.arrayIndex++;\n                this.inArrayIndex = 0;\n                return this.getNextMiddleware();\n            }\n            return item;\n        }\n    });\n    return CollectedMiddlewares;\n}());\nfunction runMiddleWares(node, baseCall, originalFn) {\n    var middlewares = new CollectedMiddlewares(node, originalFn);\n    // Short circuit\n    if (middlewares.isEmpty)\n        return action(originalFn).apply(null, baseCall.args);\n    var result = null;\n    function runNextMiddleware(call) {\n        var middleware = middlewares.getNextMiddleware();\n        var handler = middleware && middleware.handler;\n        if (!handler) {\n            return action(originalFn).apply(null, call.args);\n        }\n        // skip hooks if asked to\n        if (!middleware.includeHooks && Hook[call.name]) {\n            return runNextMiddleware(call);\n        }\n        var nextInvoked = false;\n        function next(call2, callback) {\n            nextInvoked = true;\n            // the result can contain\n            // - the non manipulated return value from an action\n            // - the non manipulated abort value\n            // - one of the above but manipulated through the callback function\n            result = runNextMiddleware(call2);\n            if (callback) {\n                result = callback(result);\n            }\n        }\n        var abortInvoked = false;\n        function abort(value) {\n            abortInvoked = true;\n            // overwrite the result\n            // can be manipulated through middlewares earlier in the queue using the callback fn\n            result = value;\n        }\n        handler(call, next, abort);\n        if (devMode()) {\n            if (!nextInvoked && !abortInvoked) {\n                var node2 = getStateTreeNode(call.tree);\n                throw fail$1(\"Neither the next() nor the abort() callback within the middleware \" + handler.name + \" for the action: \\\"\" + call.name + \"\\\" on the node: \" + node2.type.name + \" was invoked.\");\n            }\n            else if (nextInvoked && abortInvoked) {\n                var node2 = getStateTreeNode(call.tree);\n                throw fail$1(\"The next() and abort() callback within the middleware \" + handler.name + \" for the action: \\\"\" + call.name + \"\\\" on the node: \" + node2.type.name + \" were invoked.\");\n            }\n        }\n        return result;\n    }\n    return runNextMiddleware(baseCall);\n}\n\n/**\n * Returns the currently executing MST action context, or undefined if none.\n */\nfunction getRunningActionContext() {\n    var current = getCurrentActionContext();\n    while (current && current.type !== \"action\") {\n        current = current.parentActionEvent;\n    }\n    return current;\n}\nfunction _isActionContextThisOrChildOf(actionContext, sameOrParent, includeSame) {\n    var parentId = typeof sameOrParent === \"number\" ? sameOrParent : sameOrParent.id;\n    var current = includeSame\n        ? actionContext\n        : actionContext.parentActionEvent;\n    while (current) {\n        if (current.id === parentId) {\n            return true;\n        }\n        current = current.parentActionEvent;\n    }\n    return false;\n}\n/**\n * Returns if the given action context is a parent of this action context.\n */\nfunction isActionContextChildOf(actionContext, parent) {\n    return _isActionContextThisOrChildOf(actionContext, parent, false);\n}\n/**\n * Returns if the given action context is this or a parent of this action context.\n */\nfunction isActionContextThisOrChildOf(actionContext, parentOrThis) {\n    return _isActionContextThisOrChildOf(actionContext, parentOrThis, true);\n}\n\nfunction safeStringify(value) {\n    try {\n        return JSON.stringify(value);\n    }\n    catch (e) {\n        // istanbul ignore next\n        return \"<Unserializable: \" + e + \">\";\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction prettyPrintValue(value) {\n    return typeof value === \"function\"\n        ? \"<function\" + (value.name ? \" \" + value.name : \"\") + \">\"\n        : isStateTreeNode(value)\n            ? \"<\" + value + \">\"\n            : \"`\" + safeStringify(value) + \"`\";\n}\nfunction shortenPrintValue(valueInString) {\n    return valueInString.length < 280\n        ? valueInString\n        : valueInString.substring(0, 272) + \"......\" + valueInString.substring(valueInString.length - 8);\n}\nfunction toErrorString(error) {\n    var value = error.value;\n    var type = error.context[error.context.length - 1].type;\n    var fullPath = error.context\n        .map(function (_a) {\n        var path = _a.path;\n        return path;\n    })\n        .filter(function (path) { return path.length > 0; })\n        .join(\"/\");\n    var pathPrefix = fullPath.length > 0 ? \"at path \\\"/\" + fullPath + \"\\\" \" : \"\";\n    var currentTypename = isStateTreeNode(value)\n        ? \"value of type \" + getStateTreeNode(value).type.name + \":\"\n        : isPrimitive(value)\n            ? \"value\"\n            : \"snapshot\";\n    var isSnapshotCompatible = type && isStateTreeNode(value) && type.is(getStateTreeNode(value).snapshot);\n    return (\"\" + pathPrefix + currentTypename + \" \" + prettyPrintValue(value) + \" is not assignable \" + (type ? \"to type: `\" + type.name + \"`\" : \"\") +\n        (error.message ? \" (\" + error.message + \")\" : \"\") +\n        (type\n            ? isPrimitiveType(type) || isPrimitive(value)\n                ? \".\"\n                : \", expected an instance of `\" + type.name + \"` or a snapshot like `\" + type.describe() + \"` instead.\" +\n                    (isSnapshotCompatible\n                        ? \" (Note that a snapshot of the provided value is compatible with the targeted type)\"\n                        : \"\")\n            : \".\"));\n}\n/**\n * @internal\n * @hidden\n */\nfunction getContextForPath(context, path, type) {\n    return context.concat([{ path: path, type: type }]);\n}\n/**\n * @internal\n * @hidden\n */\nfunction typeCheckSuccess() {\n    return EMPTY_ARRAY;\n}\n/**\n * @internal\n * @hidden\n */\nfunction typeCheckFailure(context, value, message) {\n    return [{ context: context, value: value, message: message }];\n}\n/**\n * @internal\n * @hidden\n */\nfunction flattenTypeErrors(errors) {\n    return errors.reduce(function (a, i) { return a.concat(i); }, []);\n}\n// TODO; doublecheck: typecheck should only needed to be invoked from: type.create and array / map / value.property will change\n/**\n * @internal\n * @hidden\n */\nfunction typecheckInternal(type, value) {\n    // runs typeChecking if it is in dev-mode or through a process.env.ENABLE_TYPE_CHECK flag\n    if (isTypeCheckingEnabled()) {\n        typecheck(type, value);\n    }\n}\n/**\n * Run's the typechecker for the given type on the given value, which can be a snapshot or an instance.\n * Throws if the given value is not according the provided type specification.\n * Use this if you need typechecks even in a production build (by default all automatic runtime type checks will be skipped in production builds)\n *\n * @param type Type to check against.\n * @param value Value to be checked, either a snapshot or an instance.\n */\nfunction typecheck(type, value) {\n    var errors = type.validate(value, [{ path: \"\", type: type }]);\n    if (errors.length > 0) {\n        throw fail$1(validationErrorsToString(type, value, errors));\n    }\n}\nfunction validationErrorsToString(type, value, errors) {\n    if (errors.length === 0) {\n        return undefined;\n    }\n    return (\"Error while converting \" + shortenPrintValue(prettyPrintValue(value)) + \" to `\" + type.name + \"`:\\n\\n    \" + errors.map(toErrorString).join(\"\\n    \"));\n}\n\nvar identifierCacheId = 0;\n/**\n * @internal\n * @hidden\n */\nvar IdentifierCache = /** @class */ (function () {\n    function IdentifierCache() {\n        Object.defineProperty(this, \"cacheId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: identifierCacheId++\n        });\n        // n.b. in cache all identifiers are normalized to strings\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: observable.map()\n        });\n        // last time the cache (array) for a given time changed\n        // n.b. it is not really the time, but just an integer that gets increased after each modification to the array\n        Object.defineProperty(this, \"lastCacheModificationPerId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: observable.map()\n        });\n    }\n    Object.defineProperty(IdentifierCache.prototype, \"updateLastCacheModificationPerId\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (identifier) {\n            var lcm = this.lastCacheModificationPerId.get(identifier);\n            // we start at 1 since 0 means no update since cache creation\n            this.lastCacheModificationPerId.set(identifier, lcm === undefined ? 1 : lcm + 1);\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"getLastCacheModificationPerId\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (identifier) {\n            var modificationId = this.lastCacheModificationPerId.get(identifier) || 0;\n            return this.cacheId + \"-\" + modificationId;\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"addNodeToCache\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, lastCacheUpdate) {\n            if (lastCacheUpdate === void 0) { lastCacheUpdate = true; }\n            if (node.identifierAttribute) {\n                var identifier = node.identifier;\n                if (!this.cache.has(identifier)) {\n                    this.cache.set(identifier, observable.array([], mobxShallow));\n                }\n                var set = this.cache.get(identifier);\n                if (set.indexOf(node) !== -1)\n                    throw fail$1(\"Already registered\");\n                set.push(node);\n                if (lastCacheUpdate) {\n                    this.updateLastCacheModificationPerId(identifier);\n                }\n            }\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"mergeCache\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            values(node.identifierCache.cache).forEach(function (nodes) {\n                return nodes.forEach(function (child) {\n                    _this.addNodeToCache(child);\n                });\n            });\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"notifyDied\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            if (node.identifierAttribute) {\n                var id = node.identifier;\n                var set = this.cache.get(id);\n                if (set) {\n                    set.remove(node);\n                    // remove empty sets from cache\n                    if (!set.length) {\n                        this.cache.delete(id);\n                    }\n                    this.updateLastCacheModificationPerId(node.identifier);\n                }\n            }\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"splitCache\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            var res = new IdentifierCache();\n            var basePath = node.path;\n            entries(this.cache).forEach(function (_a) {\n                var _b = __read(_a, 2), id = _b[0], nodes = _b[1];\n                var modified = false;\n                for (var i = nodes.length - 1; i >= 0; i--) {\n                    if (nodes[i].path.indexOf(basePath) === 0) {\n                        res.addNodeToCache(nodes[i], false); // no need to update lastUpdated since it is a whole new cache\n                        nodes.splice(i, 1);\n                        modified = true;\n                    }\n                }\n                if (modified) {\n                    _this.updateLastCacheModificationPerId(id);\n                }\n            });\n            return res;\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type, identifier) {\n            var set = this.cache.get(identifier);\n            if (!set)\n                return false;\n            return set.some(function (candidate) { return type.isAssignableFrom(candidate.type); });\n        }\n    });\n    Object.defineProperty(IdentifierCache.prototype, \"resolve\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type, identifier) {\n            var set = this.cache.get(identifier);\n            if (!set)\n                return null;\n            var matches = set.filter(function (candidate) { return type.isAssignableFrom(candidate.type); });\n            switch (matches.length) {\n                case 0:\n                    return null;\n                case 1:\n                    return matches[0];\n                default:\n                    throw fail$1(\"Cannot resolve a reference to type '\" + type.name + \"' with id: '\" + identifier + \"' unambigously, there are multiple candidates: \" + matches\n                        .map(function (n) { return n.path; })\n                        .join(\", \"));\n            }\n        }\n    });\n    return IdentifierCache;\n}());\n\n/**\n * @internal\n * @hidden\n */\nfunction createObjectNode(type, parent, subpath, environment, initialValue) {\n    var existingNode = getStateTreeNodeSafe(initialValue);\n    if (existingNode) {\n        if (existingNode.parent) {\n            // istanbul ignore next\n            throw fail$1(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\" + (parent ? parent.path : \"\") + \"/\" + subpath + \"', but it lives already at '\" + existingNode.path + \"'\");\n        }\n        if (parent) {\n            existingNode.setParent(parent, subpath);\n        }\n        // else it already has no parent since it is a pre-requisite\n        return existingNode;\n    }\n    // not a node, a snapshot\n    return new ObjectNode(type, parent, subpath, environment, initialValue);\n}\n/**\n * @internal\n * @hidden\n */\nfunction createScalarNode(type, parent, subpath, environment, initialValue) {\n    return new ScalarNode(type, parent, subpath, environment, initialValue);\n}\n/**\n * @internal\n * @hidden\n */\nfunction isNode(value) {\n    return value instanceof ScalarNode || value instanceof ObjectNode;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar NodeLifeCycle;\n(function (NodeLifeCycle) {\n    NodeLifeCycle[NodeLifeCycle[\"INITIALIZING\"] = 0] = \"INITIALIZING\";\n    NodeLifeCycle[NodeLifeCycle[\"CREATED\"] = 1] = \"CREATED\";\n    NodeLifeCycle[NodeLifeCycle[\"FINALIZED\"] = 2] = \"FINALIZED\";\n    NodeLifeCycle[NodeLifeCycle[\"DETACHING\"] = 3] = \"DETACHING\";\n    NodeLifeCycle[NodeLifeCycle[\"DEAD\"] = 4] = \"DEAD\"; // no coming back from this one\n})(NodeLifeCycle || (NodeLifeCycle = {}));\n/**\n * Returns true if the given value is a node in a state tree.\n * More precisely, that is, if the value is an instance of a\n * `types.model`, `types.array` or `types.map`.\n *\n * @param value\n * @returns true if the value is a state tree node.\n */\nfunction isStateTreeNode(value) {\n    return !!(value && value.$treenode);\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsStateTreeNode(value, argNumber) {\n    assertArg(value, isStateTreeNode, \"mobx-state-tree node\", argNumber);\n}\n/**\n * @internal\n * @hidden\n */\nfunction getStateTreeNode(value) {\n    if (!isStateTreeNode(value)) {\n        // istanbul ignore next\n        throw fail$1(\"Value \" + value + \" is no MST Node\");\n    }\n    return value.$treenode;\n}\n/**\n * @internal\n * @hidden\n */\nfunction getStateTreeNodeSafe(value) {\n    return (value && value.$treenode) || null;\n}\n/**\n * @internal\n * @hidden\n */\nfunction toJSON() {\n    return getStateTreeNode(this).snapshot;\n}\nvar doubleDot = function (_) { return \"..\"; };\n/**\n * @internal\n * @hidden\n */\nfunction getRelativePathBetweenNodes(base, target) {\n    // PRE condition target is (a child of) base!\n    if (base.root !== target.root) {\n        throw fail$1(\"Cannot calculate relative path: objects '\" + base + \"' and '\" + target + \"' are not part of the same object tree\");\n    }\n    var baseParts = splitJsonPath(base.path);\n    var targetParts = splitJsonPath(target.path);\n    var common = 0;\n    for (; common < baseParts.length; common++) {\n        if (baseParts[common] !== targetParts[common])\n            break;\n    }\n    // TODO: assert that no targetParts paths are \"..\", \".\" or \"\"!\n    return (baseParts.slice(common).map(doubleDot).join(\"/\") + joinJsonPath(targetParts.slice(common)));\n}\n/**\n * @internal\n * @hidden\n */\nfunction resolveNodeByPath(base, path, failIfResolveFails) {\n    if (failIfResolveFails === void 0) { failIfResolveFails = true; }\n    return resolveNodeByPathParts(base, splitJsonPath(path), failIfResolveFails);\n}\n/**\n * @internal\n * @hidden\n */\nfunction resolveNodeByPathParts(base, pathParts, failIfResolveFails) {\n    if (failIfResolveFails === void 0) { failIfResolveFails = true; }\n    var current = base;\n    for (var i = 0; i < pathParts.length; i++) {\n        var part = pathParts[i];\n        if (part === \"..\") {\n            current = current.parent;\n            if (current)\n                continue; // not everything has a parent\n        }\n        else if (part === \".\") {\n            continue;\n        }\n        else if (current) {\n            if (current instanceof ScalarNode) {\n                // check if the value of a scalar resolves to a state tree node (e.g. references)\n                // then we can continue resolving...\n                try {\n                    var value = current.value;\n                    if (isStateTreeNode(value)) {\n                        current = getStateTreeNode(value);\n                        // fall through\n                    }\n                }\n                catch (e) {\n                    if (!failIfResolveFails) {\n                        return undefined;\n                    }\n                    throw e;\n                }\n            }\n            if (current instanceof ObjectNode) {\n                var subType = current.getChildType(part);\n                if (subType) {\n                    current = current.getChildNode(part);\n                    if (current)\n                        continue;\n                }\n            }\n        }\n        if (failIfResolveFails)\n            throw fail$1(\"Could not resolve '\" + part + \"' in path '\" + (joinJsonPath(pathParts.slice(0, i)) || \"/\") + \"' while resolving '\" + joinJsonPath(pathParts) + \"'\");\n        else\n            return undefined;\n    }\n    return current;\n}\n/**\n * @internal\n * @hidden\n */\nfunction convertChildNodesToArray(childNodes) {\n    if (!childNodes)\n        return EMPTY_ARRAY;\n    var keys = Object.keys(childNodes);\n    if (!keys.length)\n        return EMPTY_ARRAY;\n    var result = new Array(keys.length);\n    keys.forEach(function (key, index) {\n        result[index] = childNodes[key];\n    });\n    return result;\n}\n\n// based on: https://github.com/mobxjs/mobx-utils/blob/master/src/async-action.ts\n/*\n    All contents of this file are deprecated.\n\n    The term `process` has been replaced with `flow` to avoid conflicts with the\n    global `process` object.\n\n    Refer to `flow.ts` for any further changes to this implementation.\n*/\nvar DEPRECATION_MESSAGE = \"See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information. \" +\n    \"Note that the middleware event types starting with `process` now start with `flow`.\";\n/**\n * @hidden\n *\n * @deprecated has been renamed to `flow()`.\n * See https://github.com/mobxjs/mobx-state-tree/issues/399 for more information.\n * Note that the middleware event types starting with `process` now start with `flow`.\n *\n * @returns {Promise}\n */\nfunction process$1(asyncAction) {\n    deprecated(\"process\", \"`process()` has been renamed to `flow()`. \" + DEPRECATION_MESSAGE);\n    return flow(asyncAction);\n}\n\nvar plainObjectString = Object.toString();\n/**\n * @internal\n * @hidden\n */\nvar EMPTY_ARRAY = Object.freeze([]);\n/**\n * @internal\n * @hidden\n */\nvar EMPTY_OBJECT = Object.freeze({});\n/**\n * @internal\n * @hidden\n */\nvar mobxShallow = _getGlobalState().useProxies\n    ? { deep: false }\n    : { deep: false, proxy: false };\nObject.freeze(mobxShallow);\n/**\n * @internal\n * @hidden\n */\nfunction fail$1(message) {\n    if (message === void 0) { message = \"Illegal state\"; }\n    return new Error(\"[mobx-state-tree] \" + message);\n}\n/**\n * @internal\n * @hidden\n */\nfunction identity(_) {\n    return _;\n}\n/**\n * pollyfill (for IE) suggested in MDN:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n * @internal\n * @hidden\n */\nvar isInteger = Number.isInteger ||\n    function (value) {\n        return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    };\n/**\n * @internal\n * @hidden\n */\nfunction isArray(val) {\n    return Array.isArray(val) || isObservableArray(val);\n}\n/**\n * @internal\n * @hidden\n */\nfunction asArray(val) {\n    if (!val)\n        return EMPTY_ARRAY;\n    if (isArray(val))\n        return val;\n    return [val];\n}\n/**\n * @internal\n * @hidden\n */\nfunction extend(a) {\n    var b = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        b[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < b.length; i++) {\n        var current = b[i];\n        for (var key in current)\n            a[key] = current[key];\n    }\n    return a;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isPlainObject(value) {\n    var _a;\n    if (value === null || typeof value !== \"object\")\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    if (proto == null)\n        return true;\n    return ((_a = proto.constructor) === null || _a === void 0 ? void 0 : _a.toString()) === plainObjectString;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isMutable(value) {\n    return (value !== null &&\n        typeof value === \"object\" &&\n        !(value instanceof Date) &&\n        !(value instanceof RegExp));\n}\n/**\n * @internal\n * @hidden\n */\nfunction isPrimitive(value, includeDate) {\n    if (includeDate === void 0) { includeDate = true; }\n    if (value === null || value === undefined)\n        return true;\n    if (typeof value === \"string\" ||\n        typeof value === \"number\" ||\n        typeof value === \"boolean\" ||\n        (includeDate && value instanceof Date))\n        return true;\n    return false;\n}\n/**\n * @internal\n * @hidden\n * Freeze a value and return it (if not in production)\n */\nfunction freeze(value) {\n    if (!devMode())\n        return value;\n    return isPrimitive(value) || isObservableArray(value) ? value : Object.freeze(value);\n}\n/**\n * @internal\n * @hidden\n * Recursively freeze a value (if not in production)\n */\nfunction deepFreeze(value) {\n    if (!devMode())\n        return value;\n    freeze(value);\n    if (isPlainObject(value)) {\n        Object.keys(value).forEach(function (propKey) {\n            if (!isPrimitive(value[propKey]) &&\n                !Object.isFrozen(value[propKey])) {\n                deepFreeze(value[propKey]);\n            }\n        });\n    }\n    return value;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isSerializable(value) {\n    return typeof value !== \"function\";\n}\n/**\n * @internal\n * @hidden\n */\nfunction defineProperty(object, key, descriptor) {\n    isObservableObject(object)\n        ? defineProperty$1(object, key, descriptor)\n        : Object.defineProperty(object, key, descriptor);\n}\n/**\n * @internal\n * @hidden\n */\nfunction addHiddenFinalProp(object, propName, value) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: value\n    });\n}\n/**\n * @internal\n * @hidden\n */\nfunction addHiddenWritableProp(object, propName, value) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value: value\n    });\n}\n/**\n * @internal\n * @hidden\n */\nvar EventHandler = /** @class */ (function () {\n    function EventHandler() {\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    Object.defineProperty(EventHandler.prototype, \"hasSubscribers\", {\n        get: function () {\n            return this.handlers.length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EventHandler.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn, atTheBeginning) {\n            var _this = this;\n            if (atTheBeginning === void 0) { atTheBeginning = false; }\n            if (atTheBeginning) {\n                this.handlers.unshift(fn);\n            }\n            else {\n                this.handlers.push(fn);\n            }\n            return function () {\n                _this.unregister(fn);\n            };\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            return this.handlers.indexOf(fn) >= 0;\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var index = this.handlers.indexOf(fn);\n            if (index >= 0) {\n                this.handlers.splice(index, 1);\n            }\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"clear\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.handlers.length = 0;\n        }\n    });\n    Object.defineProperty(EventHandler.prototype, \"emit\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // make a copy just in case it changes\n            var handlers = this.handlers.slice();\n            handlers.forEach(function (f) { return f.apply(void 0, __spread(args)); });\n        }\n    });\n    return EventHandler;\n}());\n/**\n * @internal\n * @hidden\n */\nvar EventHandlers = /** @class */ (function () {\n    function EventHandlers() {\n        Object.defineProperty(this, \"eventHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    Object.defineProperty(EventHandlers.prototype, \"hasSubscribers\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            return !!handler && handler.hasSubscribers;\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, fn, atTheBeginning) {\n            if (atTheBeginning === void 0) { atTheBeginning = false; }\n            if (!this.eventHandlers) {\n                this.eventHandlers = {};\n            }\n            var handler = this.eventHandlers[event];\n            if (!handler) {\n                handler = this.eventHandlers[event] = new EventHandler();\n            }\n            return handler.register(fn, atTheBeginning);\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, fn) {\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            return !!handler && handler.has(fn);\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event, fn) {\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            if (handler) {\n                handler.unregister(fn);\n            }\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"clear\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            if (this.eventHandlers) {\n                delete this.eventHandlers[event];\n            }\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"clearAll\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            this.eventHandlers = undefined;\n        }\n    });\n    Object.defineProperty(EventHandlers.prototype, \"emit\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (event) {\n            var _a;\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var handler = this.eventHandlers && this.eventHandlers[event];\n            if (handler) {\n                (_a = handler).emit.apply(_a, __spread(args));\n            }\n        }\n    });\n    return EventHandlers;\n}());\n/**\n * @internal\n * @hidden\n */\nfunction argsToArray(args) {\n    var res = new Array(args.length);\n    for (var i = 0; i < args.length; i++)\n        res[i] = args[i];\n    return res;\n}\n/**\n * @internal\n * @hidden\n */\nfunction stringStartsWith(str, beginning) {\n    return str.indexOf(beginning) === 0;\n}\n/**\n * @internal\n * @hidden\n */\nvar deprecated = function (id, message) {\n    // skip if running production\n    if (!devMode())\n        return;\n    // warn if hasn't been warned before\n    if (deprecated.ids && !deprecated.ids.hasOwnProperty(id)) {\n        warnError(\"Deprecation warning: \" + message);\n    }\n    // mark as warned to avoid duplicate warn message\n    if (deprecated.ids)\n        deprecated.ids[id] = true;\n};\ndeprecated.ids = {};\n/**\n * @internal\n * @hidden\n */\nfunction warnError(msg) {\n    console.warn(new Error(\"[mobx-state-tree] \" + msg));\n}\n/**\n * @internal\n * @hidden\n */\nfunction isTypeCheckingEnabled() {\n    return (devMode() ||\n        (typeof process !== \"undefined\" && process.env && process.env.ENABLE_TYPE_CHECK === \"true\"));\n}\n/**\n * @internal\n * @hidden\n */\nfunction devMode() {\n    return process.env.NODE_ENV !== \"production\";\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertArg(value, fn, typeName, argNumber) {\n    if (devMode()) {\n        if (!fn(value)) {\n            // istanbul ignore next\n            throw fail$1(\"expected \" + typeName + \" as argument \" + asArray(argNumber).join(\" or \") + \", got \" + value + \" instead\");\n        }\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsFunction(value, argNumber) {\n    assertArg(value, function (fn) { return typeof fn === \"function\"; }, \"function\", argNumber);\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsNumber(value, argNumber, min, max) {\n    assertArg(value, function (n) { return typeof n === \"number\"; }, \"number\", argNumber);\n    if (min !== undefined) {\n        assertArg(value, function (n) { return n >= min; }, \"number greater than \" + min, argNumber);\n    }\n    if (max !== undefined) {\n        assertArg(value, function (n) { return n <= max; }, \"number lesser than \" + max, argNumber);\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsString(value, argNumber, canBeEmpty) {\n    if (canBeEmpty === void 0) { canBeEmpty = true; }\n    assertArg(value, function (s) { return typeof s === \"string\"; }, \"string\", argNumber);\n    if (!canBeEmpty) {\n        assertArg(value, function (s) { return s !== \"\"; }, \"not empty string\", argNumber);\n    }\n}\n/**\n * @internal\n * @hidden\n */\nfunction setImmediateWithFallback(fn) {\n    if (typeof queueMicrotask === \"function\") {\n        queueMicrotask(fn);\n    }\n    else if (typeof setImmediate === \"function\") {\n        setImmediate(fn);\n    }\n    else {\n        setTimeout(fn, 1);\n    }\n}\n\n/**\n * See [asynchronous actions](concepts/async-actions.md).\n *\n * @returns The flow as a promise.\n */\nfunction flow(generator) {\n    return createFlowSpawner(generator.name, generator);\n}\n/**\n * @deprecated Not needed since TS3.6.\n * Used for TypeScript to make flows that return a promise return the actual promise result.\n *\n * @param val\n * @returns\n */\nfunction castFlowReturn(val) {\n    return val;\n}\n/**\n * @experimental\n * experimental api - might change on minor/patch releases\n *\n * Convert a promise-returning function to a generator-returning one.\n * This is intended to allow for usage of `yield*` in async actions to\n * retain the promise return type.\n *\n * Example:\n * ```ts\n * function getDataAsync(input: string): Promise<number> { ... }\n * const getDataGen = toGeneratorFunction(getDataAsync);\n *\n * const someModel.actions(self => ({\n *   someAction: flow(function*() {\n *     // value is typed as number\n *     const value = yield* getDataGen(\"input value\");\n *     ...\n *   })\n * }))\n * ```\n */\nfunction toGeneratorFunction(p) {\n    return function () {\n        var _i;\n        var args = [];\n        for (_i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, p.apply(void 0, __spread(args))];\n                case 1: return [2 /*return*/, (_a.sent())];\n            }\n        });\n    };\n}\n/**\n * @experimental\n * experimental api - might change on minor/patch releases\n *\n * Convert a promise to a generator yielding that promise\n * This is intended to allow for usage of `yield*` in async actions to\n * retain the promise return type.\n *\n * Example:\n * ```ts\n * function getDataAsync(input: string): Promise<number> { ... }\n *\n * const someModel.actions(self => ({\n *   someAction: flow(function*() {\n *     // value is typed as number\n *     const value = yield* toGenerator(getDataAsync(\"input value\"));\n *     ...\n *   })\n * }))\n * ```\n */\nfunction toGenerator(p) {\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, p];\n            case 1: return [2 /*return*/, (_a.sent())];\n        }\n    });\n}\n/**\n * @internal\n * @hidden\n */\nfunction createFlowSpawner(name, generator) {\n    var spawner = function flowSpawner() {\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        var runId = getNextActionId();\n        var parentContext = getCurrentActionContext();\n        if (!parentContext) {\n            throw fail$1(\"a mst flow must always have a parent context\");\n        }\n        var parentActionContext = getParentActionContext(parentContext);\n        if (!parentActionContext) {\n            throw fail$1(\"a mst flow must always have a parent action context\");\n        }\n        var contextBase = {\n            name: name,\n            id: runId,\n            tree: parentContext.tree,\n            context: parentContext.context,\n            parentId: parentContext.id,\n            allParentIds: __spread(parentContext.allParentIds, [parentContext.id]),\n            rootId: parentContext.rootId,\n            parentEvent: parentContext,\n            parentActionEvent: parentActionContext\n        };\n        var args = arguments;\n        function wrap(fn, type, arg) {\n            fn.$mst_middleware = spawner.$mst_middleware; // pick up any middleware attached to the flow\n            runWithActionContext(__assign(__assign({}, contextBase), { type: type, args: [arg] }), fn);\n        }\n        return new Promise(function (resolve, reject) {\n            var gen;\n            var init = function asyncActionInit() {\n                gen = generator.apply(null, arguments);\n                onFulfilled(undefined); // kick off the flow\n            };\n            init.$mst_middleware = spawner.$mst_middleware;\n            runWithActionContext(__assign(__assign({}, contextBase), { type: \"flow_spawn\", args: argsToArray(args) }), init);\n            function onFulfilled(res) {\n                var ret;\n                try {\n                    // prettier-ignore\n                    wrap(function (r) { ret = gen.next(r); }, \"flow_resume\", res);\n                }\n                catch (e) {\n                    // prettier-ignore\n                    setImmediateWithFallback(function () {\n                        wrap(function (r) { reject(e); }, \"flow_throw\", e);\n                    });\n                    return;\n                }\n                next(ret);\n                return;\n            }\n            function onRejected(err) {\n                var ret;\n                try {\n                    // prettier-ignore\n                    wrap(function (r) { ret = gen.throw(r); }, \"flow_resume_error\", err); // or yieldError?\n                }\n                catch (e) {\n                    // prettier-ignore\n                    setImmediateWithFallback(function () {\n                        wrap(function (r) { reject(e); }, \"flow_throw\", e);\n                    });\n                    return;\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret.done) {\n                    // prettier-ignore\n                    setImmediateWithFallback(function () {\n                        wrap(function (r) { resolve(r); }, \"flow_return\", ret.value);\n                    });\n                    return;\n                }\n                // TODO: support more type of values? See https://github.com/tj/co/blob/249bbdc72da24ae44076afd716349d2089b31c4c/index.js#L100\n                if (!ret.value || typeof ret.value.then !== \"function\") {\n                    // istanbul ignore next\n                    throw fail$1(\"Only promises can be yielded to `async`, got: \" + ret);\n                }\n                return ret.value.then(onFulfilled, onRejected);\n            }\n        });\n    };\n    return spawner;\n}\n\n/**\n * @internal\n * @hidden\n */\nfunction splitPatch(patch) {\n    if (!(\"oldValue\" in patch))\n        throw fail$1(\"Patches without `oldValue` field cannot be inversed\");\n    return [stripPatch(patch), invertPatch(patch)];\n}\n/**\n * @internal\n * @hidden\n */\nfunction stripPatch(patch) {\n    // strips `oldvalue` information from the patch, so that it becomes a patch conform the json-patch spec\n    // this removes the ability to undo the patch\n    switch (patch.op) {\n        case \"add\":\n            return { op: \"add\", path: patch.path, value: patch.value };\n        case \"remove\":\n            return { op: \"remove\", path: patch.path };\n        case \"replace\":\n            return { op: \"replace\", path: patch.path, value: patch.value };\n    }\n}\nfunction invertPatch(patch) {\n    switch (patch.op) {\n        case \"add\":\n            return {\n                op: \"remove\",\n                path: patch.path\n            };\n        case \"remove\":\n            return {\n                op: \"add\",\n                path: patch.path,\n                value: patch.oldValue\n            };\n        case \"replace\":\n            return {\n                op: \"replace\",\n                path: patch.path,\n                value: patch.oldValue\n            };\n    }\n}\n/**\n * Simple simple check to check it is a number.\n */\nfunction isNumber(x) {\n    return typeof x === \"number\";\n}\n/**\n * Escape slashes and backslashes.\n *\n * http://tools.ietf.org/html/rfc6901\n */\nfunction escapeJsonPath(path) {\n    if (isNumber(path) === true) {\n        return \"\" + path;\n    }\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescape slashes and backslashes.\n */\nfunction unescapeJsonPath(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\n/**\n * Generates a json-path compliant json path from path parts.\n *\n * @param path\n * @returns\n */\nfunction joinJsonPath(path) {\n    // `/` refers to property with an empty name, while `` refers to root itself!\n    if (path.length === 0)\n        return \"\";\n    var getPathStr = function (p) { return p.map(escapeJsonPath).join(\"/\"); };\n    if (path[0] === \".\" || path[0] === \"..\") {\n        // relative\n        return getPathStr(path);\n    }\n    else {\n        // absolute\n        return \"/\" + getPathStr(path);\n    }\n}\n/**\n * Splits and decodes a json path into several parts.\n *\n * @param path\n * @returns\n */\nfunction splitJsonPath(path) {\n    // `/` refers to property with an empty name, while `` refers to root itself!\n    var parts = path.split(\"/\").map(unescapeJsonPath);\n    var valid = path === \"\" ||\n        path === \".\" ||\n        path === \"..\" ||\n        stringStartsWith(path, \"/\") ||\n        stringStartsWith(path, \"./\") ||\n        stringStartsWith(path, \"../\");\n    if (!valid) {\n        throw fail$1(\"a json path must be either rooted, empty or relative, but got '\" + path + \"'\");\n    }\n    // '/a/b/c' -> [\"a\", \"b\", \"c\"]\n    // '../../b/c' -> [\"..\", \"..\", \"b\", \"c\"]\n    // '' -> []\n    // '/' -> ['']\n    // './a' -> [\".\", \"a\"]\n    // /./a' -> [\".\", \"a\"] equivalent to './a'\n    if (parts[0] === \"\") {\n        parts.shift();\n    }\n    return parts;\n}\n\nvar SnapshotProcessor = /** @class */ (function (_super) {\n    __extends(SnapshotProcessor, _super);\n    function SnapshotProcessor(_subtype, _processors, name) {\n        var _this = _super.call(this, name || _subtype.name) || this;\n        Object.defineProperty(_this, \"_subtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subtype\n        });\n        Object.defineProperty(_this, \"_processors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _processors\n        });\n        return _this;\n    }\n    Object.defineProperty(SnapshotProcessor.prototype, \"flags\", {\n        get: function () {\n            return this._subtype.flags | TypeFlags.SnapshotProcessor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"snapshotProcessor(\" + this._subtype.describe() + \")\";\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"preProcessSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (sn) {\n            if (this._processors.preProcessor) {\n                return this._processors.preProcessor.call(null, sn);\n            }\n            return sn;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"postProcessSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (sn) {\n            if (this._processors.postProcessor) {\n                return this._processors.postProcessor.call(null, sn);\n            }\n            return sn;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"_fixNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            // the node has to use these methods rather than the original type ones\n            proxyNodeTypeMethods(node.type, this, \"create\");\n            var oldGetSnapshot = node.getSnapshot;\n            node.getSnapshot = function () {\n                return _this.postProcessSnapshot(oldGetSnapshot.call(node));\n            };\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var processedInitialValue = isStateTreeNode(initialValue)\n                ? initialValue\n                : this.preProcessSnapshot(initialValue);\n            var node = this._subtype.instantiate(parent, subpath, environment, processedInitialValue);\n            this._fixNode(node);\n            return node;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var node = this._subtype.reconcile(current, isStateTreeNode(newValue) ? newValue : this.preProcessSnapshot(newValue), parent, subpath);\n            if (node !== current) {\n                this._fixNode(node);\n            }\n            return node;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, applyPostProcess) {\n            if (applyPostProcess === void 0) { applyPostProcess = true; }\n            var sn = this._subtype.getSnapshot(node);\n            return applyPostProcess ? this.postProcessSnapshot(sn) : sn;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var processedSn = this.preProcessSnapshot(value);\n            return this._subtype.validate(processedSn, context);\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"is\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (thing) {\n            var value = isType(thing)\n                ? this._subtype\n                : isStateTreeNode(thing)\n                    ? getSnapshot(thing, false)\n                    : this.preProcessSnapshot(thing);\n            return this._subtype.validate(value, [{ path: \"\", type: this._subtype }]).length === 0;\n        }\n    });\n    Object.defineProperty(SnapshotProcessor.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._subtype.isAssignableFrom(type);\n        }\n    });\n    return SnapshotProcessor;\n}(BaseType));\nfunction proxyNodeTypeMethods(nodeType, snapshotProcessorType) {\n    var e_1, _a;\n    var methods = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        methods[_i - 2] = arguments[_i];\n    }\n    try {\n        for (var methods_1 = __values(methods), methods_1_1 = methods_1.next(); !methods_1_1.done; methods_1_1 = methods_1.next()) {\n            var method = methods_1_1.value;\n            nodeType[method] = snapshotProcessorType[method].bind(snapshotProcessorType);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (methods_1_1 && !methods_1_1.done && (_a = methods_1.return)) _a.call(methods_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/**\n * `types.snapshotProcessor` - Runs a pre/post snapshot processor before/after serializing a given type.\n *\n * Example:\n * ```ts\n * const Todo1 = types.model({ text: types.string })\n * // in the backend the text type must be null when empty\n * interface BackendTodo {\n *     text: string | null\n * }\n * const Todo2 = types.snapshotProcessor(Todo1, {\n *     // from snapshot to instance\n *     preProcessor(sn: BackendTodo) {\n *         return {\n *             text: sn.text || \"\";\n *         }\n *     },\n *     // from instance to snapshot\n *     postProcessor(sn): BackendTodo {\n *         return {\n *             text: !sn.text ? null : sn.text\n *         }\n *     }\n * })\n * ```\n *\n * @param type Type to run the processors over.\n * @param processors Processors to run.\n * @param name Type name, or undefined to inherit the inner type one.\n * @returns\n */\nfunction snapshotProcessor(type, processors, name) {\n    assertIsType(type, 1);\n    if (devMode()) {\n        if (processors.postProcessor && typeof processors.postProcessor !== \"function\") {\n            // istanbul ignore next\n            throw fail(\"postSnapshotProcessor must be a function\");\n        }\n        if (processors.preProcessor && typeof processors.preProcessor !== \"function\") {\n            // istanbul ignore next\n            throw fail(\"preSnapshotProcessor must be a function\");\n        }\n    }\n    return new SnapshotProcessor(type, processors, name);\n}\n\nvar needsIdentifierError = \"Map.put can only be used to store complex values that have an identifier type attribute\";\nfunction tryCollectModelTypes(type, modelTypes) {\n    var e_1, _a;\n    var subtypes = type.getSubTypes();\n    if (subtypes === cannotDetermineSubtype) {\n        return false;\n    }\n    if (subtypes) {\n        var subtypesArray = asArray(subtypes);\n        try {\n            for (var subtypesArray_1 = __values(subtypesArray), subtypesArray_1_1 = subtypesArray_1.next(); !subtypesArray_1_1.done; subtypesArray_1_1 = subtypesArray_1.next()) {\n                var subtype = subtypesArray_1_1.value;\n                if (!tryCollectModelTypes(subtype, modelTypes))\n                    return false;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (subtypesArray_1_1 && !subtypesArray_1_1.done && (_a = subtypesArray_1.return)) _a.call(subtypesArray_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    if (type instanceof ModelType) {\n        modelTypes.push(type);\n    }\n    return true;\n}\n/**\n * @internal\n * @hidden\n */\nvar MapIdentifierMode;\n(function (MapIdentifierMode) {\n    MapIdentifierMode[MapIdentifierMode[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MapIdentifierMode[MapIdentifierMode[\"YES\"] = 1] = \"YES\";\n    MapIdentifierMode[MapIdentifierMode[\"NO\"] = 2] = \"NO\";\n})(MapIdentifierMode || (MapIdentifierMode = {}));\nvar MSTMap = /** @class */ (function (_super) {\n    __extends(MSTMap, _super);\n    function MSTMap(initialData) {\n        return _super.call(this, initialData, observable.ref.enhancer) || this;\n    }\n    Object.defineProperty(MSTMap.prototype, \"get\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key) {\n            // maybe this is over-enthousiastic? normalize numeric keys to strings\n            return _super.prototype.get.call(this, \"\" + key);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"has\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key) {\n            return _super.prototype.has.call(this, \"\" + key);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"delete\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key) {\n            return _super.prototype.delete.call(this, \"\" + key);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"set\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (key, value) {\n            return _super.prototype.set.call(this, \"\" + key, value);\n        }\n    });\n    Object.defineProperty(MSTMap.prototype, \"put\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value) {\n            if (!value)\n                throw fail$1(\"Map.put cannot be used to set empty values\");\n            if (isStateTreeNode(value)) {\n                var node = getStateTreeNode(value);\n                if (devMode()) {\n                    if (!node.identifierAttribute) {\n                        throw fail$1(needsIdentifierError);\n                    }\n                }\n                if (node.identifier === null) {\n                    throw fail$1(needsIdentifierError);\n                }\n                this.set(node.identifier, value);\n                return value;\n            }\n            else if (!isMutable(value)) {\n                throw fail$1(\"Map.put can only be used to store complex values\");\n            }\n            else {\n                var mapNode = getStateTreeNode(this);\n                var mapType = mapNode.type;\n                if (mapType.identifierMode !== MapIdentifierMode.YES) {\n                    throw fail$1(needsIdentifierError);\n                }\n                var idAttr = mapType.mapIdentifierAttribute;\n                var id = value[idAttr];\n                if (!isValidIdentifier(id)) {\n                    // try again but this time after creating a node for the value\n                    // since it might be an optional identifier\n                    var newNode = this.put(mapType.getChildType().create(value, mapNode.environment));\n                    return this.put(getSnapshot(newNode));\n                }\n                var key = normalizeIdentifier(id);\n                this.set(key, value);\n                return this.get(key);\n            }\n        }\n    });\n    return MSTMap;\n}(ObservableMap));\n/**\n * @internal\n * @hidden\n */\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(name, _subType, hookInitializers) {\n        if (hookInitializers === void 0) { hookInitializers = []; }\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subType\n        });\n        Object.defineProperty(_this, \"identifierMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: MapIdentifierMode.UNKNOWN\n        });\n        Object.defineProperty(_this, \"mapIdentifierAttribute\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Map\n        });\n        Object.defineProperty(_this, \"hookInitializers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        _this._determineIdentifierMode();\n        _this.hookInitializers = hookInitializers;\n        return _this;\n    }\n    Object.defineProperty(MapType.prototype, \"hooks\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (hooks) {\n            var hookInitializers = this.hookInitializers.length > 0 ? this.hookInitializers.concat(hooks) : [hooks];\n            return new MapType(this.name, this._subType, hookInitializers);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            this._determineIdentifierMode();\n            return createObjectNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"_determineIdentifierMode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this.identifierMode !== MapIdentifierMode.UNKNOWN) {\n                return;\n            }\n            var modelTypes = [];\n            if (tryCollectModelTypes(this._subType, modelTypes)) {\n                var identifierAttribute_1 = undefined;\n                modelTypes.forEach(function (type) {\n                    if (type.identifierAttribute) {\n                        if (identifierAttribute_1 && identifierAttribute_1 !== type.identifierAttribute) {\n                            throw fail$1(\"The objects in a map should all have the same identifier attribute, expected '\" + identifierAttribute_1 + \"', but child of type '\" + type.name + \"' declared attribute '\" + type.identifierAttribute + \"' as identifier\");\n                        }\n                        identifierAttribute_1 = type.identifierAttribute;\n                    }\n                });\n                if (identifierAttribute_1) {\n                    this.identifierMode = MapIdentifierMode.YES;\n                    this.mapIdentifierAttribute = identifierAttribute_1;\n                }\n                else {\n                    this.identifierMode = MapIdentifierMode.NO;\n                }\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"initializeChildNodes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (objNode, initialSnapshot) {\n            if (initialSnapshot === void 0) { initialSnapshot = {}; }\n            var subType = objNode.type._subType;\n            var result = {};\n            Object.keys(initialSnapshot).forEach(function (name) {\n                result[name] = subType.instantiate(objNode, name, undefined, initialSnapshot[name]);\n            });\n            return result;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            return new MSTMap(childNodes);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"finalizeNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, instance) {\n            _interceptReads(instance, node.unbox);\n            var type = node.type;\n            type.hookInitializers.forEach(function (initializer) {\n                var hooks = initializer(instance);\n                Object.keys(hooks).forEach(function (name) {\n                    var hook = hooks[name];\n                    var actionInvoker = createActionInvoker(instance, name, hook);\n                    (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(instance, name, actionInvoker);\n                });\n            });\n            intercept(instance, this.willChange);\n            observe(instance, this.didChange);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"Map<string, \" + this._subType.describe() + \">\";\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            // return (node.storedValue as ObservableMap<any>).values()\n            return values(node.storedValue);\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, key) {\n            var childNode = node.storedValue.get(\"\" + key);\n            if (!childNode)\n                throw fail$1(\"Not a child \" + key);\n            return childNode;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"willChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            var key = change.name;\n            node.assertWritable({ subpath: key });\n            var mapType = node.type;\n            var subType = mapType._subType;\n            switch (change.type) {\n                case \"update\":\n                    {\n                        var newValue = change.newValue;\n                        var oldValue = change.object.get(key);\n                        if (newValue === oldValue)\n                            return null;\n                        typecheckInternal(subType, newValue);\n                        change.newValue = subType.reconcile(node.getChildNode(key), change.newValue, node, key);\n                        mapType.processIdentifier(key, change.newValue);\n                    }\n                    break;\n                case \"add\":\n                    {\n                        typecheckInternal(subType, change.newValue);\n                        change.newValue = subType.instantiate(node, key, undefined, change.newValue);\n                        mapType.processIdentifier(key, change.newValue);\n                    }\n                    break;\n            }\n            return change;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"processIdentifier\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (expected, node) {\n            if (this.identifierMode === MapIdentifierMode.YES && node instanceof ObjectNode) {\n                var identifier = node.identifier;\n                if (identifier !== expected)\n                    throw fail$1(\"A map of objects containing an identifier should always store the object under their own identifier. Trying to store key '\" + identifier + \"', but expected: '\" + expected + \"'\");\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var res = {};\n            node.getChildren().forEach(function (childNode) {\n                res[childNode.subpath] = childNode.snapshot;\n            });\n            return res;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"processInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            var processed = {};\n            Object.keys(childNodes).forEach(function (key) {\n                processed[key] = childNodes[key].getSnapshot();\n            });\n            return processed;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"didChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            switch (change.type) {\n                case \"update\":\n                    return void node.emitPatch({\n                        op: \"replace\",\n                        path: escapeJsonPath(change.name),\n                        value: change.newValue.snapshot,\n                        oldValue: change.oldValue ? change.oldValue.snapshot : undefined\n                    }, node);\n                case \"add\":\n                    return void node.emitPatch({\n                        op: \"add\",\n                        path: escapeJsonPath(change.name),\n                        value: change.newValue.snapshot,\n                        oldValue: undefined\n                    }, node);\n                case \"delete\":\n                    // a node got deleted, get the old snapshot and make the node die\n                    var oldSnapshot = change.oldValue.snapshot;\n                    change.oldValue.die();\n                    // emit the patch\n                    return void node.emitPatch({\n                        op: \"remove\",\n                        path: escapeJsonPath(change.name),\n                        oldValue: oldSnapshot\n                    }, node);\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath, patch) {\n            var target = node.storedValue;\n            switch (patch.op) {\n                case \"add\":\n                case \"replace\":\n                    target.set(subpath, patch.value);\n                    break;\n                case \"remove\":\n                    target.delete(subpath);\n                    break;\n            }\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, snapshot) {\n            typecheckInternal(this, snapshot);\n            var target = node.storedValue;\n            var currentKeys = {};\n            Array.from(target.keys()).forEach(function (key) {\n                currentKeys[key] = false;\n            });\n            if (snapshot) {\n                // Don't use target.replace, as it will throw away all existing items first\n                for (var key in snapshot) {\n                    target.set(key, snapshot[key]);\n                    currentKeys[\"\" + key] = true;\n                }\n            }\n            Object.keys(currentKeys).forEach(function (key) {\n                if (currentKeys[key] === false)\n                    target.delete(key);\n            });\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subType;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var _this = this;\n            if (!isPlainObject(value)) {\n                return typeCheckFailure(context, value, \"Value is not a plain object\");\n            }\n            return flattenTypeErrors(Object.keys(value).map(function (path) {\n                return _this._subType.validate(value[path], getContextForPath(context, path, _this._subType));\n            }));\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"getDefaultSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return EMPTY_OBJECT;\n        }\n    });\n    Object.defineProperty(MapType.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath) {\n            node.storedValue.delete(subpath);\n        }\n    });\n    return MapType;\n}(ComplexType));\nMapType.prototype.applySnapshot = action(MapType.prototype.applySnapshot);\n/**\n * `types.map` - Creates a key based collection type who's children are all of a uniform declared type.\n * If the type stored in a map has an identifier, it is mandatory to store the child under that identifier in the map.\n *\n * This type will always produce [observable maps](https://mobx.js.org/api.html#observablemap)\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   id: types.identifier,\n *   task: types.string\n * })\n *\n * const TodoStore = types.model({\n *   todos: types.map(Todo)\n * })\n *\n * const s = TodoStore.create({ todos: {} })\n * unprotect(s)\n * s.todos.set(17, { task: \"Grab coffee\", id: 17 })\n * s.todos.put({ task: \"Grab cookie\", id: 18 }) // put will infer key from the identifier\n * console.log(s.todos.get(17).task) // prints: \"Grab coffee\"\n * ```\n *\n * @param subtype\n * @returns\n */\nfunction map(subtype) {\n    return new MapType(\"map<string, \" + subtype.name + \">\", subtype);\n}\n/**\n * Returns if a given value represents a map type.\n *\n * @param type\n * @returns `true` if it is a map type.\n */\nfunction isMapType(type) {\n    return isType(type) && (type.flags & TypeFlags.Map) > 0;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(name, _subType, hookInitializers) {\n        if (hookInitializers === void 0) { hookInitializers = []; }\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subType\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Array\n        });\n        Object.defineProperty(_this, \"hookInitializers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        _this.hookInitializers = hookInitializers;\n        return _this;\n    }\n    Object.defineProperty(ArrayType.prototype, \"hooks\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (hooks) {\n            var hookInitializers = this.hookInitializers.length > 0 ? this.hookInitializers.concat(hooks) : [hooks];\n            return new ArrayType(this.name, this._subType, hookInitializers);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return createObjectNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"initializeChildNodes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (objNode, snapshot) {\n            if (snapshot === void 0) { snapshot = []; }\n            var subType = objNode.type._subType;\n            var result = {};\n            snapshot.forEach(function (item, index) {\n                var subpath = \"\" + index;\n                result[subpath] = subType.instantiate(objNode, subpath, undefined, item);\n            });\n            return result;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            return observable.array(convertChildNodesToArray(childNodes), mobxShallow);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"finalizeNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, instance) {\n            _getAdministration(instance).dehancer = node.unbox;\n            var type = node.type;\n            type.hookInitializers.forEach(function (initializer) {\n                var hooks = initializer(instance);\n                Object.keys(hooks).forEach(function (name) {\n                    var hook = hooks[name];\n                    var actionInvoker = createActionInvoker(instance, name, hook);\n                    (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(instance, name, actionInvoker);\n                });\n            });\n            intercept(instance, this.willChange);\n            observe(instance, this.didChange);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subType.describe() + \"[]\";\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.storedValue.slice();\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, key) {\n            var index = Number(key);\n            if (index < node.storedValue.length)\n                return node.storedValue[index];\n            throw fail$1(\"Not a child: \" + key);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"willChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            node.assertWritable({ subpath: \"\" + change.index });\n            var subType = node.type._subType;\n            var childNodes = node.getChildren();\n            switch (change.type) {\n                case \"update\":\n                    {\n                        if (change.newValue === change.object[change.index])\n                            return null;\n                        var updatedNodes = reconcileArrayChildren(node, subType, [childNodes[change.index]], [change.newValue], [change.index]);\n                        if (!updatedNodes) {\n                            return null;\n                        }\n                        change.newValue = updatedNodes[0];\n                    }\n                    break;\n                case \"splice\":\n                    {\n                        var index_1 = change.index, removedCount = change.removedCount, added = change.added;\n                        var addedNodes = reconcileArrayChildren(node, subType, childNodes.slice(index_1, index_1 + removedCount), added, added.map(function (_, i) { return index_1 + i; }));\n                        if (!addedNodes) {\n                            return null;\n                        }\n                        change.added = addedNodes;\n                        // update paths of remaining items\n                        for (var i = index_1 + removedCount; i < childNodes.length; i++) {\n                            childNodes[i].setParent(node, \"\" + (i + added.length - removedCount));\n                        }\n                    }\n                    break;\n            }\n            return change;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.getChildren().map(function (childNode) { return childNode.snapshot; });\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"processInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            var processed = [];\n            Object.keys(childNodes).forEach(function (key) {\n                processed.push(childNodes[key].getSnapshot());\n            });\n            return processed;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"didChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (change) {\n            var node = getStateTreeNode(change.object);\n            switch (change.type) {\n                case \"update\":\n                    return void node.emitPatch({\n                        op: \"replace\",\n                        path: \"\" + change.index,\n                        value: change.newValue.snapshot,\n                        oldValue: change.oldValue ? change.oldValue.snapshot : undefined\n                    }, node);\n                case \"splice\":\n                    for (var i = change.removedCount - 1; i >= 0; i--)\n                        node.emitPatch({\n                            op: \"remove\",\n                            path: \"\" + (change.index + i),\n                            oldValue: change.removed[i].snapshot\n                        }, node);\n                    for (var i = 0; i < change.addedCount; i++)\n                        node.emitPatch({\n                            op: \"add\",\n                            path: \"\" + (change.index + i),\n                            value: node.getChildNode(\"\" + (change.index + i)).snapshot,\n                            oldValue: undefined\n                        }, node);\n                    return;\n            }\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath, patch) {\n            var target = node.storedValue;\n            var index = subpath === \"-\" ? target.length : Number(subpath);\n            switch (patch.op) {\n                case \"replace\":\n                    target[index] = patch.value;\n                    break;\n                case \"add\":\n                    target.splice(index, 0, patch.value);\n                    break;\n                case \"remove\":\n                    target.splice(index, 1);\n                    break;\n            }\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, snapshot) {\n            typecheckInternal(this, snapshot);\n            var target = node.storedValue;\n            target.replace(snapshot);\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subType;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var _this = this;\n            if (!isArray(value)) {\n                return typeCheckFailure(context, value, \"Value is not an array\");\n            }\n            return flattenTypeErrors(value.map(function (item, index) {\n                return _this._subType.validate(item, getContextForPath(context, \"\" + index, _this._subType));\n            }));\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"getDefaultSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return EMPTY_ARRAY;\n        }\n    });\n    Object.defineProperty(ArrayType.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath) {\n            node.storedValue.splice(Number(subpath), 1);\n        }\n    });\n    return ArrayType;\n}(ComplexType));\nArrayType.prototype.applySnapshot = action(ArrayType.prototype.applySnapshot);\n/**\n * `types.array` - Creates an index based collection type who's children are all of a uniform declared type.\n *\n * This type will always produce [observable arrays](https://mobx.js.org/api.html#observablearray)\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   task: types.string\n * })\n *\n * const TodoStore = types.model({\n *   todos: types.array(Todo)\n * })\n *\n * const s = TodoStore.create({ todos: [] })\n * unprotect(s) // needed to allow modifying outside of an action\n * s.todos.push({ task: \"Grab coffee\" })\n * console.log(s.todos[0]) // prints: \"Grab coffee\"\n * ```\n *\n * @param subtype\n * @returns\n */\nfunction array(subtype) {\n    assertIsType(subtype, 1);\n    return new ArrayType(subtype.name + \"[]\", subtype);\n}\nfunction reconcileArrayChildren(parent, childType, oldNodes, newValues, newPaths) {\n    var nothingChanged = true;\n    for (var i = 0;; i++) {\n        var hasNewNode = i <= newValues.length - 1;\n        var oldNode = oldNodes[i];\n        var newValue = hasNewNode ? newValues[i] : undefined;\n        var newPath = \"\" + newPaths[i];\n        // for some reason, instead of newValue we got a node, fallback to the storedValue\n        // TODO: https://github.com/mobxjs/mobx-state-tree/issues/340#issuecomment-325581681\n        if (isNode(newValue))\n            newValue = newValue.storedValue;\n        if (!oldNode && !hasNewNode) {\n            // both are empty, end\n            break;\n        }\n        else if (!hasNewNode) {\n            // new one does not exists\n            nothingChanged = false;\n            oldNodes.splice(i, 1);\n            if (oldNode instanceof ObjectNode) {\n                // since it is going to be returned by pop/splice/shift better create it before killing it\n                // so it doesn't end up in an undead state\n                oldNode.createObservableInstanceIfNeeded();\n            }\n            oldNode.die();\n            i--;\n        }\n        else if (!oldNode) {\n            // there is no old node, create it\n            // check if already belongs to the same parent. if so, avoid pushing item in. only swapping can occur.\n            if (isStateTreeNode(newValue) && getStateTreeNode(newValue).parent === parent) {\n                // this node is owned by this parent, but not in the reconcilable set, so it must be double\n                throw fail$1(\"Cannot add an object to a state tree if it is already part of the same or another state tree. Tried to assign an object to '\" + parent.path + \"/\" + newPath + \"', but it lives already at '\" + getStateTreeNode(newValue).path + \"'\");\n            }\n            nothingChanged = false;\n            var newNode = valueAsNode(childType, parent, newPath, newValue);\n            oldNodes.splice(i, 0, newNode);\n        }\n        else if (areSame(oldNode, newValue)) {\n            // both are the same, reconcile\n            oldNodes[i] = valueAsNode(childType, parent, newPath, newValue, oldNode);\n        }\n        else {\n            // nothing to do, try to reorder\n            var oldMatch = undefined;\n            // find a possible candidate to reuse\n            for (var j = i; j < oldNodes.length; j++) {\n                if (areSame(oldNodes[j], newValue)) {\n                    oldMatch = oldNodes.splice(j, 1)[0];\n                    break;\n                }\n            }\n            nothingChanged = false;\n            var newNode = valueAsNode(childType, parent, newPath, newValue, oldMatch);\n            oldNodes.splice(i, 0, newNode);\n        }\n    }\n    return nothingChanged ? null : oldNodes;\n}\n/**\n * Convert a value to a node at given parent and subpath. Attempts to reuse old node if possible and given.\n */\nfunction valueAsNode(childType, parent, subpath, newValue, oldNode) {\n    // ensure the value is valid-ish\n    typecheckInternal(childType, newValue);\n    function getNewNode() {\n        // the new value has a MST node\n        if (isStateTreeNode(newValue)) {\n            var childNode = getStateTreeNode(newValue);\n            childNode.assertAlive(EMPTY_OBJECT);\n            // the node lives here\n            if (childNode.parent !== null && childNode.parent === parent) {\n                childNode.setParent(parent, subpath);\n                return childNode;\n            }\n        }\n        // there is old node and new one is a value/snapshot\n        if (oldNode) {\n            return childType.reconcile(oldNode, newValue, parent, subpath);\n        }\n        // nothing to do, create from scratch\n        return childType.instantiate(parent, subpath, undefined, newValue);\n    }\n    var newNode = getNewNode();\n    if (oldNode && oldNode !== newNode) {\n        if (oldNode instanceof ObjectNode) {\n            // since it is going to be returned by pop/splice/shift better create it before killing it\n            // so it doesn't end up in an undead state\n            oldNode.createObservableInstanceIfNeeded();\n        }\n        oldNode.die();\n    }\n    return newNode;\n}\n/**\n * Check if a node holds a value.\n */\nfunction areSame(oldNode, newValue) {\n    // never consider dead old nodes for reconciliation\n    if (!oldNode.isAlive) {\n        return false;\n    }\n    // the new value has the same node\n    if (isStateTreeNode(newValue)) {\n        var newNode = getStateTreeNode(newValue);\n        return newNode.isAlive && newNode === oldNode;\n    }\n    // the provided value is the snapshot of the old node\n    if (oldNode.snapshot === newValue) {\n        return true;\n    }\n    // new value is a snapshot with the correct identifier\n    return (oldNode instanceof ObjectNode &&\n        oldNode.identifier !== null &&\n        oldNode.identifierAttribute &&\n        isPlainObject(newValue) &&\n        oldNode.identifier === normalizeIdentifier(newValue[oldNode.identifierAttribute]) &&\n        oldNode.type.is(newValue));\n}\n/**\n * Returns if a given value represents an array type.\n *\n * @param type\n * @returns `true` if the type is an array type.\n */\nfunction isArrayType(type) {\n    return isType(type) && (type.flags & TypeFlags.Array) > 0;\n}\n\nvar PRE_PROCESS_SNAPSHOT = \"preProcessSnapshot\";\nvar POST_PROCESS_SNAPSHOT = \"postProcessSnapshot\";\nfunction objectTypeToString() {\n    return getStateTreeNode(this).toString();\n}\nvar defaultObjectOptions = {\n    name: \"AnonymousModel\",\n    properties: {},\n    initializers: EMPTY_ARRAY\n};\nfunction toPropertiesObject(declaredProps) {\n    // loop through properties and ensures that all items are types\n    return Object.keys(declaredProps).reduce(function (props, key) {\n        var _a, _b, _c;\n        // warn if user intended a HOOK\n        if (key in Hook)\n            throw fail$1(\"Hook '\" + key + \"' was defined as property. Hooks should be defined as part of the actions\");\n        // the user intended to use a view\n        var descriptor = Object.getOwnPropertyDescriptor(props, key);\n        if (\"get\" in descriptor) {\n            throw fail$1(\"Getters are not supported as properties. Please use views instead\");\n        }\n        // undefined and null are not valid\n        var value = descriptor.value;\n        if (value === null || value === undefined) {\n            throw fail$1(\"The default value of an attribute cannot be null or undefined as the type cannot be inferred. Did you mean `types.maybe(someType)`?\");\n            // its a primitive, convert to its type\n        }\n        else if (isPrimitive(value)) {\n            return Object.assign({}, props, (_a = {},\n                _a[key] = optional(getPrimitiveFactoryFromValue(value), value),\n                _a));\n            // map defaults to empty object automatically for models\n        }\n        else if (value instanceof MapType) {\n            return Object.assign({}, props, (_b = {},\n                _b[key] = optional(value, {}),\n                _b));\n        }\n        else if (value instanceof ArrayType) {\n            return Object.assign({}, props, (_c = {}, _c[key] = optional(value, []), _c));\n            // its already a type\n        }\n        else if (isType(value)) {\n            return props;\n            // its a function, maybe the user wanted a view?\n        }\n        else if (devMode() && typeof value === \"function\") {\n            throw fail$1(\"Invalid type definition for property '\" + key + \"', it looks like you passed a function. Did you forget to invoke it, or did you intend to declare a view / action?\");\n            // no other complex values\n        }\n        else if (devMode() && typeof value === \"object\") {\n            throw fail$1(\"Invalid type definition for property '\" + key + \"', it looks like you passed an object. Try passing another model type or a types.frozen.\");\n            // WTF did you pass in mate?\n        }\n        else {\n            throw fail$1(\"Invalid type definition for property '\" + key + \"', cannot infer a type from a value like '\" + value + \"' (\" + typeof value + \")\");\n        }\n    }, declaredProps);\n}\n/**\n * @internal\n * @hidden\n */\nvar ModelType = /** @class */ (function (_super) {\n    __extends(ModelType, _super);\n    function ModelType(opts) {\n        var _this = _super.call(this, opts.name || defaultObjectOptions.name) || this;\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Object\n        });\n        /*\n         * The original object definition\n         */\n        Object.defineProperty(_this, \"initializers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"properties\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"preProcessor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"postProcessor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"propertyNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"named\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (name) {\n                return _this.cloneAndEnhance({ name: name });\n            }\n        });\n        Object.defineProperty(_this, \"props\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (properties) {\n                return _this.cloneAndEnhance({ properties: properties });\n            }\n        });\n        Object.defineProperty(_this, \"preProcessSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (preProcessor) {\n                var currentPreprocessor = _this.preProcessor;\n                if (!currentPreprocessor)\n                    return _this.cloneAndEnhance({ preProcessor: preProcessor });\n                else\n                    return _this.cloneAndEnhance({\n                        preProcessor: function (snapshot) { return currentPreprocessor(preProcessor(snapshot)); }\n                    });\n            }\n        });\n        Object.defineProperty(_this, \"postProcessSnapshot\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (postProcessor) {\n                var currentPostprocessor = _this.postProcessor;\n                if (!currentPostprocessor)\n                    return _this.cloneAndEnhance({ postProcessor: postProcessor });\n                else\n                    return _this.cloneAndEnhance({\n                        postProcessor: function (snapshot) { return postProcessor(currentPostprocessor(snapshot)); }\n                    });\n            }\n        });\n        Object.assign(_this, defaultObjectOptions, opts);\n        // ensures that any default value gets converted to its related type\n        _this.properties = toPropertiesObject(_this.properties);\n        freeze(_this.properties); // make sure nobody messes with it\n        _this.propertyNames = Object.keys(_this.properties);\n        _this.identifierAttribute = _this._getIdentifierAttribute();\n        return _this;\n    }\n    Object.defineProperty(ModelType.prototype, \"_getIdentifierAttribute\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var identifierAttribute = undefined;\n            this.forAllProps(function (propName, propType) {\n                if (propType.flags & TypeFlags.Identifier) {\n                    if (identifierAttribute)\n                        throw fail$1(\"Cannot define property '\" + propName + \"' as object identifier, property '\" + identifierAttribute + \"' is already defined as identifier property\");\n                    identifierAttribute = propName;\n                }\n            });\n            return identifierAttribute;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"cloneAndEnhance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (opts) {\n            return new ModelType({\n                name: opts.name || this.name,\n                properties: Object.assign({}, this.properties, opts.properties),\n                initializers: this.initializers.concat(opts.initializers || []),\n                preProcessor: opts.preProcessor || this.preProcessor,\n                postProcessor: opts.postProcessor || this.postProcessor\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"actions\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            var actionInitializer = function (self) {\n                _this.instantiateActions(self, fn(self));\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [actionInitializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiateActions\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (self, actions) {\n            // check if return is correct\n            if (!isPlainObject(actions))\n                throw fail$1(\"actions initializer should return a plain object containing actions\");\n            // bind actions to the object created\n            Object.keys(actions).forEach(function (name) {\n                // warn if preprocessor was given\n                if (name === PRE_PROCESS_SNAPSHOT)\n                    throw fail$1(\"Cannot define action '\" + PRE_PROCESS_SNAPSHOT + \"', it should be defined using 'type.preProcessSnapshot(fn)' instead\");\n                // warn if postprocessor was given\n                if (name === POST_PROCESS_SNAPSHOT)\n                    throw fail$1(\"Cannot define action '\" + POST_PROCESS_SNAPSHOT + \"', it should be defined using 'type.postProcessSnapshot(fn)' instead\");\n                var action2 = actions[name];\n                // apply hook composition\n                var baseAction = self[name];\n                if (name in Hook && baseAction) {\n                    var specializedAction_1 = action2;\n                    action2 = function () {\n                        baseAction.apply(null, arguments);\n                        specializedAction_1.apply(null, arguments);\n                    };\n                }\n                // the goal of this is to make sure actions using \"this\" can call themselves,\n                // while still allowing the middlewares to register them\n                var middlewares = action2.$mst_middleware; // make sure middlewares are not lost\n                var boundAction = action2.bind(actions);\n                boundAction.$mst_middleware = middlewares;\n                var actionInvoker = createActionInvoker(self, name, boundAction);\n                actions[name] = actionInvoker;\n                (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(self, name, actionInvoker);\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"volatile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            if (typeof fn !== \"function\") {\n                throw fail$1(\"You passed an \" + typeof fn + \" to volatile state as an argument, when function is expected\");\n            }\n            var stateInitializer = function (self) {\n                _this.instantiateVolatileState(self, fn(self));\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [stateInitializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiateVolatileState\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (self, state) {\n            // check views return\n            if (!isPlainObject(state))\n                throw fail$1(\"volatile state initializer should return a plain object containing state\");\n            set(self, state);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"extend\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            var initializer = function (self) {\n                var _a = fn(self), actions = _a.actions, views = _a.views, state = _a.state, rest = __rest(_a, [\"actions\", \"views\", \"state\"]);\n                for (var key in rest)\n                    throw fail$1(\"The `extend` function should return an object with a subset of the fields 'actions', 'views' and 'state'. Found invalid key '\" + key + \"'\");\n                if (state)\n                    _this.instantiateVolatileState(self, state);\n                if (views)\n                    _this.instantiateViews(self, views);\n                if (actions)\n                    _this.instantiateActions(self, actions);\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [initializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"views\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            var viewInitializer = function (self) {\n                _this.instantiateViews(self, fn(self));\n                return self;\n            };\n            return this.cloneAndEnhance({ initializers: [viewInitializer] });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiateViews\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (self, views) {\n            // check views return\n            if (!isPlainObject(views))\n                throw fail$1(\"views initializer should return a plain object containing views\");\n            Object.keys(views).forEach(function (key) {\n                var _a;\n                // is this a computed property?\n                var descriptor = Object.getOwnPropertyDescriptor(views, key);\n                if (\"get\" in descriptor) {\n                    defineProperty$1(self, key, descriptor);\n                    makeObservable(self, (_a = {}, _a[key] = computed, _a));\n                }\n                else if (typeof descriptor.value === \"function\") {\n                    (!devMode() ? addHiddenFinalProp : addHiddenWritableProp)(self, key, descriptor.value);\n                }\n                else {\n                    throw fail$1(\"A view member should either be a function or getter based property\");\n                }\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var value = isStateTreeNode(initialValue)\n                ? initialValue\n                : this.applySnapshotPreProcessor(initialValue);\n            return createObjectNode(this, parent, subpath, environment, value);\n            // Optimization: record all prop- view- and action names after first construction, and generate an optimal base class\n            // that pre-reserves all these fields for fast object-member lookups\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"initializeChildNodes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (objNode, initialSnapshot) {\n            if (initialSnapshot === void 0) { initialSnapshot = {}; }\n            var type = objNode.type;\n            var result = {};\n            type.forAllProps(function (name, childType) {\n                result[name] = childType.instantiate(objNode, name, undefined, initialSnapshot[name]);\n            });\n            return result;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            return observable.object(childNodes, EMPTY_OBJECT, mobxShallow);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"finalizeNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, instance) {\n            addHiddenFinalProp(instance, \"toString\", objectTypeToString);\n            this.forAllProps(function (name) {\n                _interceptReads(instance, name, node.unbox);\n            });\n            this.initializers.reduce(function (self, fn) { return fn(self); }, instance);\n            intercept(instance, this.willChange);\n            observe(instance, this.didChange);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"willChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (chg) {\n            // TODO: mobx typings don't seem to take into account that newValue can be set even when removing a prop\n            var change = chg;\n            var node = getStateTreeNode(change.object);\n            var subpath = change.name;\n            node.assertWritable({ subpath: subpath });\n            var childType = node.type.properties[subpath];\n            // only properties are typed, state are stored as-is references\n            if (childType) {\n                typecheckInternal(childType, change.newValue);\n                change.newValue = childType.reconcile(node.getChildNode(subpath), change.newValue, node, subpath);\n            }\n            return change;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"didChange\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (chg) {\n            // TODO: mobx typings don't seem to take into account that newValue can be set even when removing a prop\n            var change = chg;\n            var childNode = getStateTreeNode(change.object);\n            var childType = childNode.type.properties[change.name];\n            if (!childType) {\n                // don't emit patches for volatile state\n                return;\n            }\n            var oldChildValue = change.oldValue ? change.oldValue.snapshot : undefined;\n            childNode.emitPatch({\n                op: \"replace\",\n                path: escapeJsonPath(change.name),\n                value: change.newValue.snapshot,\n                oldValue: oldChildValue\n            }, childNode);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getChildren\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var _this = this;\n            var res = [];\n            this.forAllProps(function (name) {\n                res.push(_this.getChildNode(node, name));\n            });\n            return res;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getChildNode\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, key) {\n            if (!(key in this.properties))\n                throw fail$1(\"Not a value property: \" + key);\n            var adm = _getAdministration(node.storedValue, key);\n            var childNode = adm.raw();\n            if (!childNode)\n                throw fail$1(\"Node not available for property \" + key);\n            return childNode;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, applyPostProcess) {\n            var _this = this;\n            if (applyPostProcess === void 0) { applyPostProcess = true; }\n            var res = {};\n            this.forAllProps(function (name, type) {\n                getAtom(node.storedValue, name).reportObserved();\n                res[name] = _this.getChildNode(node, name).snapshot;\n            });\n            if (applyPostProcess) {\n                return this.applySnapshotPostProcessor(res);\n            }\n            return res;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"processInitialSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (childNodes) {\n            var processed = {};\n            Object.keys(childNodes).forEach(function (key) {\n                processed[key] = childNodes[key].getSnapshot();\n            });\n            return this.applySnapshotPostProcessor(processed);\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applyPatchLocally\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath, patch) {\n            if (!(patch.op === \"replace\" || patch.op === \"add\")) {\n                throw fail$1(\"object does not support operation \" + patch.op);\n            }\n            node.storedValue[subpath] = patch.value;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applySnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, snapshot) {\n            var preProcessedSnapshot = this.applySnapshotPreProcessor(snapshot);\n            typecheckInternal(this, preProcessedSnapshot);\n            this.forAllProps(function (name) {\n                node.storedValue[name] = preProcessedSnapshot[name];\n            });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applySnapshotPreProcessor\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            var processor = this.preProcessor;\n            return processor ? processor.call(null, snapshot) : snapshot;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"applySnapshotPostProcessor\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            var postProcessor = this.postProcessor;\n            if (postProcessor)\n                return postProcessor.call(null, snapshot);\n            return snapshot;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getChildType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (propertyName) {\n            assertIsString(propertyName, 1);\n            return this.properties[propertyName];\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var _this = this;\n            var snapshot = this.applySnapshotPreProcessor(value);\n            if (!isPlainObject(snapshot)) {\n                return typeCheckFailure(context, snapshot, \"Value is not a plain object\");\n            }\n            return flattenTypeErrors(this.propertyNames.map(function (key) {\n                return _this.properties[key].validate(snapshot[key], getContextForPath(context, key, _this.properties[key]));\n            }));\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"forAllProps\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (fn) {\n            var _this = this;\n            this.propertyNames.forEach(function (key) { return fn(key, _this.properties[key]); });\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var _this = this;\n            // optimization: cache\n            return (\"{ \" +\n                this.propertyNames\n                    .map(function (key) { return key + \": \" + _this.properties[key].describe(); })\n                    .join(\"; \") +\n                \" }\");\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"getDefaultSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return EMPTY_OBJECT;\n        }\n    });\n    Object.defineProperty(ModelType.prototype, \"removeChild\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node, subpath) {\n            node.storedValue[subpath] = undefined;\n        }\n    });\n    return ModelType;\n}(ComplexType));\nModelType.prototype.applySnapshot = action(ModelType.prototype.applySnapshot);\n/**\n * `types.model` - Creates a new model type by providing a name, properties, volatile state and actions.\n *\n * See the [model type](/concepts/trees#creating-models) description or the [getting started](intro/getting-started.md#getting-started-1) tutorial.\n */\nfunction model() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var name = typeof args[0] === \"string\" ? args.shift() : \"AnonymousModel\";\n    var properties = args.shift() || {};\n    return new ModelType({ name: name, properties: properties });\n}\n/**\n * `types.compose` - Composes a new model from one or more existing model types.\n * This method can be invoked in two forms:\n * Given 2 or more model types, the types are composed into a new Type.\n * Given first parameter as a string and 2 or more model types,\n * the types are composed into a new Type with the given name\n */\nfunction compose() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // TODO: just join the base type names if no name is provided\n    var hasTypename = typeof args[0] === \"string\";\n    var typeName = hasTypename ? args[0] : \"AnonymousModel\";\n    if (hasTypename) {\n        args.shift();\n    }\n    // check all parameters\n    if (devMode()) {\n        args.forEach(function (type, i) {\n            assertArg(type, isModelType, \"mobx-state-tree model type\", hasTypename ? i + 2 : i + 1);\n        });\n    }\n    return args\n        .reduce(function (prev, cur) {\n        return prev.cloneAndEnhance({\n            name: prev.name + \"_\" + cur.name,\n            properties: cur.properties,\n            initializers: cur.initializers,\n            preProcessor: function (snapshot) {\n                return cur.applySnapshotPreProcessor(prev.applySnapshotPreProcessor(snapshot));\n            },\n            postProcessor: function (snapshot) {\n                return cur.applySnapshotPostProcessor(prev.applySnapshotPostProcessor(snapshot));\n            }\n        });\n    })\n        .named(typeName);\n}\n/**\n * Returns if a given value represents a model type.\n *\n * @param type\n * @returns\n */\nfunction isModelType(type) {\n    return isType(type) && (type.flags & TypeFlags.Object) > 0;\n}\n\n// TODO: implement CoreType using types.custom ?\n/**\n * @internal\n * @hidden\n */\nvar CoreType = /** @class */ (function (_super) {\n    __extends(CoreType, _super);\n    function CoreType(name, flags, checker, initializer) {\n        if (initializer === void 0) { initializer = identity; }\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: flags\n        });\n        Object.defineProperty(_this, \"checker\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: checker\n        });\n        Object.defineProperty(_this, \"initializer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: initializer\n        });\n        _this.flags = flags;\n        return _this;\n    }\n    Object.defineProperty(CoreType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(CoreType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return createScalarNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(CoreType.prototype, \"createNewInstance\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (snapshot) {\n            return this.initializer(snapshot);\n        }\n    });\n    Object.defineProperty(CoreType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (isPrimitive(value) && this.checker(value)) {\n                return typeCheckSuccess();\n            }\n            var typeName = this.name === \"Date\" ? \"Date or a unix milliseconds timestamp\" : this.name;\n            return typeCheckFailure(context, value, \"Value is not a \" + typeName);\n        }\n    });\n    return CoreType;\n}(SimpleType));\n/**\n * `types.string` - Creates a type that can only contain a string value.\n * This type is used for string values by default\n *\n * Example:\n * ```ts\n * const Person = types.model({\n *   firstName: types.string,\n *   lastName: \"Doe\"\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar string = new CoreType(\"string\", TypeFlags.String, function (v) { return typeof v === \"string\"; });\n/**\n * `types.number` - Creates a type that can only contain a numeric value.\n * This type is used for numeric values by default\n *\n * Example:\n * ```ts\n * const Vector = types.model({\n *   x: types.number,\n *   y: 1.5\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar number = new CoreType(\"number\", TypeFlags.Number, function (v) { return typeof v === \"number\"; });\n/**\n * `types.integer` - Creates a type that can only contain an integer value.\n * This type is used for integer values by default\n *\n * Example:\n * ```ts\n * const Size = types.model({\n *   width: types.integer,\n *   height: 10\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar integer = new CoreType(\"integer\", TypeFlags.Integer, function (v) { return isInteger(v); });\n/**\n * `types.boolean` - Creates a type that can only contain a boolean value.\n * This type is used for boolean values by default\n *\n * Example:\n * ```ts\n * const Thing = types.model({\n *   isCool: types.boolean,\n *   isAwesome: false\n * })\n * ```\n */\n// tslint:disable-next-line:variable-name\nvar boolean = new CoreType(\"boolean\", TypeFlags.Boolean, function (v) { return typeof v === \"boolean\"; });\n/**\n * `types.null` - The type of the value `null`\n */\nvar nullType = new CoreType(\"null\", TypeFlags.Null, function (v) { return v === null; });\n/**\n * `types.undefined` - The type of the value `undefined`\n */\nvar undefinedType = new CoreType(\"undefined\", TypeFlags.Undefined, function (v) { return v === undefined; });\nvar _DatePrimitive = new CoreType(\"Date\", TypeFlags.Date, function (v) { return typeof v === \"number\" || v instanceof Date; }, function (v) { return (v instanceof Date ? v : new Date(v)); });\n_DatePrimitive.getSnapshot = function (node) {\n    return node.storedValue.getTime();\n};\n/**\n * `types.Date` - Creates a type that can only contain a javascript Date value.\n *\n * Example:\n * ```ts\n * const LogLine = types.model({\n *   timestamp: types.Date,\n * })\n *\n * LogLine.create({ timestamp: new Date() })\n * ```\n */\nvar DatePrimitive = _DatePrimitive;\n/**\n * @internal\n * @hidden\n */\nfunction getPrimitiveFactoryFromValue(value) {\n    switch (typeof value) {\n        case \"string\":\n            return string;\n        case \"number\":\n            return number; // In the future, isInteger(value) ? integer : number would be interesting, but would be too breaking for now\n        case \"boolean\":\n            return boolean;\n        case \"object\":\n            if (value instanceof Date)\n                return DatePrimitive;\n    }\n    throw fail$1(\"Cannot determine primitive type from value \" + value);\n}\n/**\n * Returns if a given value represents a primitive type.\n *\n * @param type\n * @returns\n */\nfunction isPrimitiveType(type) {\n    return (isType(type) &&\n        (type.flags &\n            (TypeFlags.String |\n                TypeFlags.Number |\n                TypeFlags.Integer |\n                TypeFlags.Boolean |\n                TypeFlags.Date)) >\n            0);\n}\n\n/**\n * @internal\n * @hidden\n */\nvar Literal = /** @class */ (function (_super) {\n    __extends(Literal, _super);\n    function Literal(value) {\n        var _this = _super.call(this, JSON.stringify(value)) || this;\n        Object.defineProperty(_this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Literal\n        });\n        _this.value = value;\n        return _this;\n    }\n    Object.defineProperty(Literal.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return createScalarNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Literal.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return JSON.stringify(this.value);\n        }\n    });\n    Object.defineProperty(Literal.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (isPrimitive(value) && value === this.value) {\n                return typeCheckSuccess();\n            }\n            return typeCheckFailure(context, value, \"Value is not a literal \" + JSON.stringify(this.value));\n        }\n    });\n    return Literal;\n}(SimpleType));\n/**\n * `types.literal` - The literal type will return a type that will match only the exact given type.\n * The given value must be a primitive, in order to be serialized to a snapshot correctly.\n * You can use literal to match exact strings for example the exact male or female string.\n *\n * Example:\n * ```ts\n * const Person = types.model({\n *     name: types.string,\n *     gender: types.union(types.literal('male'), types.literal('female'))\n * })\n * ```\n *\n * @param value The value to use in the strict equal check\n * @returns\n */\nfunction literal(value) {\n    // check that the given value is a primitive\n    assertArg(value, isPrimitive, \"primitive\", 1);\n    return new Literal(value);\n}\n/**\n * Returns if a given value represents a literal type.\n *\n * @param type\n * @returns\n */\nfunction isLiteralType(type) {\n    return isType(type) && (type.flags & TypeFlags.Literal) > 0;\n}\n\nvar Refinement = /** @class */ (function (_super) {\n    __extends(Refinement, _super);\n    function Refinement(name, _subtype, _predicate, _message) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_subtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subtype\n        });\n        Object.defineProperty(_this, \"_predicate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _predicate\n        });\n        Object.defineProperty(_this, \"_message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _message\n        });\n        return _this;\n    }\n    Object.defineProperty(Refinement.prototype, \"flags\", {\n        get: function () {\n            return this._subtype.flags | TypeFlags.Refinement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Refinement.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            // create the child type\n            return this._subtype.instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._subtype.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var subtypeErrors = this._subtype.validate(value, context);\n            if (subtypeErrors.length > 0)\n                return subtypeErrors;\n            var snapshot = isStateTreeNode(value) ? getStateTreeNode(value).snapshot : value;\n            if (!this._predicate(snapshot)) {\n                return typeCheckFailure(context, value, this._message(value));\n            }\n            return typeCheckSuccess();\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            return this._subtype.reconcile(current, newValue, parent, subpath);\n        }\n    });\n    Object.defineProperty(Refinement.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype;\n        }\n    });\n    return Refinement;\n}(BaseType));\n/**\n * `types.refinement` - Creates a type that is more specific than the base type, e.g. `types.refinement(types.string, value => value.length > 5)` to create a type of strings that can only be longer then 5.\n *\n * @param name\n * @param type\n * @param predicate\n * @returns\n */\nfunction refinement() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var name = typeof args[0] === \"string\" ? args.shift() : isType(args[0]) ? args[0].name : null;\n    var type = args[0];\n    var predicate = args[1];\n    var message = args[2]\n        ? args[2]\n        : function (v) { return \"Value does not respect the refinement predicate\"; };\n    // ensures all parameters are correct\n    assertIsType(type, [1, 2]);\n    assertIsString(name, 1);\n    assertIsFunction(predicate, [2, 3]);\n    assertIsFunction(message, [3, 4]);\n    return new Refinement(name, type, predicate, message);\n}\n/**\n * Returns if a given value is a refinement type.\n *\n * @param type\n * @returns\n */\nfunction isRefinementType(type) {\n    return (type.flags & TypeFlags.Refinement) > 0;\n}\n\n/**\n * `types.enumeration` - Can be used to create an string based enumeration.\n * (note: this methods is just sugar for a union of string literals)\n *\n * Example:\n * ```ts\n * const TrafficLight = types.model({\n *   color: types.enumeration(\"Color\", [\"Red\", \"Orange\", \"Green\"])\n * })\n * ```\n *\n * @param name descriptive name of the enumeration (optional)\n * @param options possible values this enumeration can have\n * @returns\n */\nfunction enumeration(name, options) {\n    var realOptions = typeof name === \"string\" ? options : name;\n    // check all options\n    if (devMode()) {\n        realOptions.forEach(function (option, i) {\n            assertIsString(option, i + 1);\n        });\n    }\n    var type = union.apply(void 0, __spread(realOptions.map(function (option) { return literal(\"\" + option); })));\n    if (typeof name === \"string\")\n        type.name = name;\n    return type;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar Union = /** @class */ (function (_super) {\n    __extends(Union, _super);\n    function Union(name, _types, options) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_types\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _types\n        });\n        Object.defineProperty(_this, \"_dispatcher\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(_this, \"_eager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        options = __assign({ eager: true, dispatcher: undefined }, options);\n        _this._dispatcher = options.dispatcher;\n        if (!options.eager)\n            _this._eager = false;\n        return _this;\n    }\n    Object.defineProperty(Union.prototype, \"flags\", {\n        get: function () {\n            var result = TypeFlags.Union;\n            this._types.forEach(function (type) {\n                result |= type.flags;\n            });\n            return result;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Union.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._types.some(function (subType) { return subType.isAssignableFrom(type); });\n        }\n    });\n    Object.defineProperty(Union.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"(\" + this._types.map(function (factory) { return factory.describe(); }).join(\" | \") + \")\";\n        }\n    });\n    Object.defineProperty(Union.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var type = this.determineType(initialValue, undefined);\n            if (!type)\n                throw fail$1(\"No matching type for union \" + this.describe()); // can happen in prod builds\n            return type.instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Union.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var type = this.determineType(newValue, current.type);\n            if (!type)\n                throw fail$1(\"No matching type for union \" + this.describe()); // can happen in prod builds\n            return type.reconcile(current, newValue, parent, subpath);\n        }\n    });\n    Object.defineProperty(Union.prototype, \"determineType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, reconcileCurrentType) {\n            // try the dispatcher, if defined\n            if (this._dispatcher) {\n                return this._dispatcher(value);\n            }\n            // find the most accomodating type\n            // if we are using reconciliation try the current node type first (fix for #1045)\n            if (reconcileCurrentType) {\n                if (reconcileCurrentType.is(value)) {\n                    return reconcileCurrentType;\n                }\n                return this._types\n                    .filter(function (t) { return t !== reconcileCurrentType; })\n                    .find(function (type) { return type.is(value); });\n            }\n            else {\n                return this._types.find(function (type) { return type.is(value); });\n            }\n        }\n    });\n    Object.defineProperty(Union.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (this._dispatcher) {\n                return this._dispatcher(value).validate(value, context);\n            }\n            var allErrors = [];\n            var applicableTypes = 0;\n            for (var i = 0; i < this._types.length; i++) {\n                var type = this._types[i];\n                var errors = type.validate(value, context);\n                if (errors.length === 0) {\n                    if (this._eager)\n                        return typeCheckSuccess();\n                    else\n                        applicableTypes++;\n                }\n                else {\n                    allErrors.push(errors);\n                }\n            }\n            if (applicableTypes === 1)\n                return typeCheckSuccess();\n            return typeCheckFailure(context, value, \"No type is applicable for the union\").concat(flattenTypeErrors(allErrors));\n        }\n    });\n    Object.defineProperty(Union.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._types;\n        }\n    });\n    return Union;\n}(BaseType));\n/**\n * `types.union` - Create a union of multiple types. If the correct type cannot be inferred unambiguously from a snapshot, provide a dispatcher function of the form `(snapshot) => Type`.\n *\n * @param optionsOrType\n * @param otherTypes\n * @returns\n */\nfunction union(optionsOrType) {\n    var otherTypes = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherTypes[_i - 1] = arguments[_i];\n    }\n    var options = isType(optionsOrType) ? undefined : optionsOrType;\n    var types = isType(optionsOrType) ? __spread([optionsOrType], otherTypes) : otherTypes;\n    var name = \"(\" + types.map(function (type) { return type.name; }).join(\" | \") + \")\";\n    // check all options\n    if (devMode()) {\n        if (options) {\n            assertArg(options, function (o) { return isPlainObject(o); }, \"object { eager?: boolean, dispatcher?: Function }\", 1);\n        }\n        types.forEach(function (type, i) {\n            assertIsType(type, options ? i + 2 : i + 1);\n        });\n    }\n    return new Union(name, types, options);\n}\n/**\n * Returns if a given value represents a union type.\n *\n * @param type\n * @returns\n */\nfunction isUnionType(type) {\n    return (type.flags & TypeFlags.Union) > 0;\n}\n\n/**\n * @hidden\n * @internal\n */\nvar OptionalValue = /** @class */ (function (_super) {\n    __extends(OptionalValue, _super);\n    function OptionalValue(_subtype, _defaultValue, optionalValues) {\n        var _this = _super.call(this, _subtype.name) || this;\n        Object.defineProperty(_this, \"_subtype\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _subtype\n        });\n        Object.defineProperty(_this, \"_defaultValue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _defaultValue\n        });\n        Object.defineProperty(_this, \"optionalValues\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: optionalValues\n        });\n        return _this;\n    }\n    Object.defineProperty(OptionalValue.prototype, \"flags\", {\n        get: function () {\n            return this._subtype.flags | TypeFlags.Optional;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OptionalValue.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype.describe() + \"?\";\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            if (this.optionalValues.indexOf(initialValue) >= 0) {\n                var defaultInstanceOrSnapshot = this.getDefaultInstanceOrSnapshot();\n                return this._subtype.instantiate(parent, subpath, environment, defaultInstanceOrSnapshot);\n            }\n            return this._subtype.instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            return this._subtype.reconcile(current, this.optionalValues.indexOf(newValue) < 0 && this._subtype.is(newValue)\n                ? newValue\n                : this.getDefaultInstanceOrSnapshot(), parent, subpath);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"getDefaultInstanceOrSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var defaultInstanceOrSnapshot = typeof this._defaultValue === \"function\"\n                ? this._defaultValue()\n                : this._defaultValue;\n            // while static values are already snapshots and checked on types.optional\n            // generator functions must always be rechecked just in case\n            if (typeof this._defaultValue === \"function\") {\n                typecheckInternal(this, defaultInstanceOrSnapshot);\n            }\n            return defaultInstanceOrSnapshot;\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            // defaulted values can be skipped\n            if (this.optionalValues.indexOf(value) >= 0) {\n                return typeCheckSuccess();\n            }\n            // bounce validation to the sub-type\n            return this._subtype.validate(value, context);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this._subtype.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(OptionalValue.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this._subtype;\n        }\n    });\n    return OptionalValue;\n}(BaseType));\nfunction checkOptionalPreconditions(type, defaultValueOrFunction) {\n    // make sure we never pass direct instances\n    if (typeof defaultValueOrFunction !== \"function\" && isStateTreeNode(defaultValueOrFunction)) {\n        throw fail$1(\"default value cannot be an instance, pass a snapshot or a function that creates an instance/snapshot instead\");\n    }\n    assertIsType(type, 1);\n    if (devMode()) {\n        // we only check default values if they are passed directly\n        // if they are generator functions they will be checked once they are generated\n        // we don't check generator function results here to avoid generating a node just for type-checking purposes\n        // which might generate side-effects\n        if (typeof defaultValueOrFunction !== \"function\") {\n            typecheckInternal(type, defaultValueOrFunction);\n        }\n    }\n}\n/**\n * `types.optional` - Can be used to create a property with a default value.\n *\n * Depending on the third argument (`optionalValues`) there are two ways of operation:\n * - If the argument is not provided, then if a value is not provided in the snapshot (`undefined` or missing),\n *   it will default to the provided `defaultValue`\n * - If the argument is provided, then if the value in the snapshot matches one of the optional values inside the array then it will\n *   default to the provided `defaultValue`. Additionally, if one of the optional values inside the array is `undefined` then a missing\n *   property is also valid.\n *\n *   Note that it is also possible to include values of the same type as the intended subtype as optional values,\n *   in this case the optional value will be transformed into the `defaultValue` (e.g. `types.optional(types.string, \"unnamed\", [undefined, \"\"])`\n *   will transform the snapshot values `undefined` (and therefore missing) and empty strings into the string `\"unnamed\"` when it gets\n *   instantiated).\n *\n * If `defaultValue` is a function, the function will be invoked for every new instance.\n * Applying a snapshot in which the optional value is one of the optional values (or `undefined`/_not_ present if none are provided) causes the\n * value to be reset.\n *\n * Example:\n * ```ts\n * const Todo = types.model({\n *   title: types.string,\n *   subtitle1: types.optional(types.string, \"\", [null]),\n *   subtitle2: types.optional(types.string, \"\", [null, undefined]),\n *   done: types.optional(types.boolean, false),\n *   created: types.optional(types.Date, () => new Date()),\n * })\n *\n * // if done is missing / undefined it will become false\n * // if created is missing / undefined it will get a freshly generated timestamp\n * // if subtitle1 is null it will default to \"\", but it cannot be missing or undefined\n * // if subtitle2 is null or undefined it will default to \"\"; since it can be undefined it can also be missing\n * const todo = Todo.create({ title: \"Get coffee\", subtitle1: null })\n * ```\n *\n * @param type\n * @param defaultValueOrFunction\n * @param optionalValues an optional array with zero or more primitive values (string, number, boolean, null or undefined)\n *                       that will be converted into the default. `[ undefined ]` is assumed when none is provided\n * @returns\n */\nfunction optional(type, defaultValueOrFunction, optionalValues) {\n    checkOptionalPreconditions(type, defaultValueOrFunction);\n    return new OptionalValue(type, defaultValueOrFunction, optionalValues ? optionalValues : undefinedAsOptionalValues);\n}\nvar undefinedAsOptionalValues = [undefined];\n/**\n * Returns if a value represents an optional type.\n *\n * @template IT\n * @param type\n * @returns\n */\nfunction isOptionalType(type) {\n    return isType(type) && (type.flags & TypeFlags.Optional) > 0;\n}\n\nvar optionalUndefinedType = optional(undefinedType, undefined);\nvar optionalNullType = optional(nullType, null);\n/**\n * `types.maybe` - Maybe will make a type nullable, and also optional.\n * The value `undefined` will be used to represent nullability.\n *\n * @param type\n * @returns\n */\nfunction maybe(type) {\n    assertIsType(type, 1);\n    return union(type, optionalUndefinedType);\n}\n/**\n * `types.maybeNull` - Maybe will make a type nullable, and also optional.\n * The value `null` will be used to represent no value.\n *\n * @param type\n * @returns\n */\nfunction maybeNull(type) {\n    assertIsType(type, 1);\n    return union(type, optionalNullType);\n}\n\nvar Late = /** @class */ (function (_super) {\n    __extends(Late, _super);\n    function Late(name, _definition) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"_definition\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _definition\n        });\n        Object.defineProperty(_this, \"_subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        return _this;\n    }\n    Object.defineProperty(Late.prototype, \"flags\", {\n        get: function () {\n            return (this._subType ? this._subType.flags : 0) | TypeFlags.Late;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Late.prototype, \"getSubType\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (mustSucceed) {\n            if (!this._subType) {\n                var t = undefined;\n                try {\n                    t = this._definition();\n                }\n                catch (e) {\n                    if (e instanceof ReferenceError)\n                        // can happen in strict ES5 code when a definition is self refering\n                        t = undefined;\n                    else\n                        throw e;\n                }\n                if (mustSucceed && t === undefined)\n                    throw fail$1(\"Late type seems to be used too early, the definition (still) returns undefined\");\n                if (t) {\n                    if (devMode() && !isType(t))\n                        throw fail$1(\"Failed to determine subtype, make sure types.late returns a type definition.\");\n                    this._subType = t;\n                }\n            }\n            return this._subType;\n        }\n    });\n    Object.defineProperty(Late.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            return this.getSubType(true).instantiate(parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(Late.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            return this.getSubType(true).reconcile(current, newValue, parent, subpath);\n        }\n    });\n    Object.defineProperty(Late.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var t = this.getSubType(false);\n            return t ? t.name : \"<uknown late type>\";\n        }\n    });\n    Object.defineProperty(Late.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            var t = this.getSubType(false);\n            if (!t) {\n                // See #916; the variable the definition closure is pointing to wasn't defined yet, so can't be evaluted yet here\n                return typeCheckSuccess();\n            }\n            return t.validate(value, context);\n        }\n    });\n    Object.defineProperty(Late.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            var t = this.getSubType(false);\n            return t ? t.isAssignableFrom(type) : false;\n        }\n    });\n    Object.defineProperty(Late.prototype, \"getSubTypes\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            var subtype = this.getSubType(false);\n            return subtype ? subtype : cannotDetermineSubtype;\n        }\n    });\n    return Late;\n}(BaseType));\n/**\n * `types.late` - Defines a type that gets implemented later. This is useful when you have to deal with circular dependencies.\n * Please notice that when defining circular dependencies TypeScript isn't smart enough to inference them.\n *\n * Example:\n * ```ts\n *   // TypeScript isn't smart enough to infer self referencing types.\n *  const Node = types.model({\n *       children: types.array(types.late((): IAnyModelType => Node)) // then typecast each array element to Instance<typeof Node>\n *  })\n * ```\n *\n * @param name The name to use for the type that will be returned.\n * @param type A function that returns the type that will be defined.\n * @returns\n */\nfunction late(nameOrType, maybeType) {\n    var name = typeof nameOrType === \"string\" ? nameOrType : \"late(\" + nameOrType.toString() + \")\";\n    var type = typeof nameOrType === \"string\" ? maybeType : nameOrType;\n    // checks that the type is actually a late type\n    if (devMode()) {\n        if (!(typeof type === \"function\" && type.length === 0))\n            throw fail$1(\"Invalid late type, expected a function with zero arguments that returns a type, got: \" +\n                type);\n    }\n    return new Late(name, type);\n}\n/**\n * Returns if a given value represents a late type.\n *\n * @param type\n * @returns\n */\nfunction isLateType(type) {\n    return isType(type) && (type.flags & TypeFlags.Late) > 0;\n}\n\n/**\n * @internal\n * @hidden\n */\nvar Frozen = /** @class */ (function (_super) {\n    __extends(Frozen, _super);\n    function Frozen(subType) {\n        var _this = _super.call(this, subType ? \"frozen(\" + subType.name + \")\" : \"frozen\") || this;\n        Object.defineProperty(_this, \"subType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: subType\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Frozen\n        });\n        return _this;\n    }\n    Object.defineProperty(Frozen.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"<any immutable value>\";\n        }\n    });\n    Object.defineProperty(Frozen.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, value) {\n            // create the node\n            return createScalarNode(this, parent, subpath, environment, deepFreeze(value));\n        }\n    });\n    Object.defineProperty(Frozen.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (!isSerializable(value)) {\n                return typeCheckFailure(context, value, \"Value is not serializable and cannot be frozen\");\n            }\n            if (this.subType)\n                return this.subType.validate(value, context);\n            return typeCheckSuccess();\n        }\n    });\n    return Frozen;\n}(SimpleType));\nvar untypedFrozenInstance = new Frozen();\n/**\n * `types.frozen` - Frozen can be used to store any value that is serializable in itself (that is valid JSON).\n * Frozen values need to be immutable or treated as if immutable. They need be serializable as well.\n * Values stored in frozen will snapshotted as-is by MST, and internal changes will not be tracked.\n *\n * This is useful to store complex, but immutable values like vectors etc. It can form a powerful bridge to parts of your application that should be immutable, or that assume data to be immutable.\n *\n * Note: if you want to store free-form state that is mutable, or not serializeable, consider using volatile state instead.\n *\n * Frozen properties can be defined in three different ways\n * 1. `types.frozen(SubType)` - provide a valid MST type and frozen will check if the provided data conforms the snapshot for that type\n * 2. `types.frozen({ someDefaultValue: true})` - provide a primitive value, object or array, and MST will infer the type from that object, and also make it the default value for the field\n * 3. `types.frozen<TypeScriptType>()` - provide a typescript type, to help in strongly typing the field (design time only)\n *\n * Example:\n * ```ts\n * const GameCharacter = types.model({\n *   name: string,\n *   location: types.frozen({ x: 0, y: 0})\n * })\n *\n * const hero = GameCharacter.create({\n *   name: \"Mario\",\n *   location: { x: 7, y: 4 }\n * })\n *\n * hero.location = { x: 10, y: 2 } // OK\n * hero.location.x = 7 // Not ok!\n * ```\n *\n * ```ts\n * type Point = { x: number, y: number }\n *    const Mouse = types.model({\n *         loc: types.frozen<Point>()\n *    })\n * ```\n *\n * @param defaultValueOrType\n * @returns\n */\nfunction frozen(arg) {\n    if (arguments.length === 0)\n        return untypedFrozenInstance;\n    else if (isType(arg))\n        return new Frozen(arg);\n    else\n        return optional(untypedFrozenInstance, arg);\n}\n/**\n * Returns if a given value represents a frozen type.\n *\n * @param type\n * @returns\n */\nfunction isFrozenType(type) {\n    return isType(type) && (type.flags & TypeFlags.Frozen) > 0;\n}\n\nfunction getInvalidationCause(hook) {\n    switch (hook) {\n        case Hook.beforeDestroy:\n            return \"destroy\";\n        case Hook.beforeDetach:\n            return \"detach\";\n        default:\n            return undefined;\n    }\n}\nvar StoredReference = /** @class */ (function () {\n    function StoredReference(value, targetType) {\n        Object.defineProperty(this, \"targetType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: targetType\n        });\n        Object.defineProperty(this, \"identifier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"node\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"resolvedReference\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (isValidIdentifier(value)) {\n            this.identifier = value;\n        }\n        else if (isStateTreeNode(value)) {\n            var targetNode = getStateTreeNode(value);\n            if (!targetNode.identifierAttribute)\n                throw fail$1(\"Can only store references with a defined identifier attribute.\");\n            var id = targetNode.unnormalizedIdentifier;\n            if (id === null || id === undefined) {\n                throw fail$1(\"Can only store references to tree nodes with a defined identifier.\");\n            }\n            this.identifier = id;\n        }\n        else {\n            throw fail$1(\"Can only store references to tree nodes or identifiers, got: '\" + value + \"'\");\n        }\n    }\n    Object.defineProperty(StoredReference.prototype, \"updateResolvedReference\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            var normalizedId = normalizeIdentifier(this.identifier);\n            var root = node.root;\n            var lastCacheModification = root.identifierCache.getLastCacheModificationPerId(normalizedId);\n            if (!this.resolvedReference ||\n                this.resolvedReference.lastCacheModification !== lastCacheModification) {\n                var targetType = this.targetType;\n                // reference was initialized with the identifier of the target\n                var target = root.identifierCache.resolve(targetType, normalizedId);\n                if (!target) {\n                    throw new InvalidReferenceError(\"[mobx-state-tree] Failed to resolve reference '\" + this.identifier + \"' to type '\" + this.targetType.name + \"' (from node: \" + node.path + \")\");\n                }\n                this.resolvedReference = {\n                    node: target,\n                    lastCacheModification: lastCacheModification\n                };\n            }\n        }\n    });\n    Object.defineProperty(StoredReference.prototype, \"resolvedValue\", {\n        get: function () {\n            this.updateResolvedReference(this.node);\n            return this.resolvedReference.node.value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return StoredReference;\n}());\n/**\n * @internal\n * @hidden\n */\nvar InvalidReferenceError = /** @class */ (function (_super) {\n    __extends(InvalidReferenceError, _super);\n    function InvalidReferenceError(m) {\n        var _this = _super.call(this, m) || this;\n        Object.setPrototypeOf(_this, InvalidReferenceError.prototype);\n        return _this;\n    }\n    return InvalidReferenceError;\n}(Error));\n/**\n * @internal\n * @hidden\n */\nvar BaseReferenceType = /** @class */ (function (_super) {\n    __extends(BaseReferenceType, _super);\n    function BaseReferenceType(targetType, onInvalidated) {\n        var _this = _super.call(this, \"reference(\" + targetType.name + \")\") || this;\n        Object.defineProperty(_this, \"targetType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: targetType\n        });\n        Object.defineProperty(_this, \"onInvalidated\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: onInvalidated\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Reference\n        });\n        return _this;\n    }\n    Object.defineProperty(BaseReferenceType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"isAssignableFrom\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (type) {\n            return this.targetType.isAssignableFrom(type);\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            return isValidIdentifier(value)\n                ? typeCheckSuccess()\n                : typeCheckFailure(context, value, \"Value is not a valid identifier, which is a string or a number\");\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"fireInvalidated\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (cause, storedRefNode, referenceId, refTargetNode) {\n            // to actually invalidate a reference we need an alive parent,\n            // since it is a scalar value (immutable-ish) and we need to change it\n            // from the parent\n            var storedRefParentNode = storedRefNode.parent;\n            if (!storedRefParentNode || !storedRefParentNode.isAlive) {\n                return;\n            }\n            var storedRefParentValue = storedRefParentNode.storedValue;\n            if (!storedRefParentValue) {\n                return;\n            }\n            this.onInvalidated({\n                cause: cause,\n                parent: storedRefParentValue,\n                invalidTarget: refTargetNode ? refTargetNode.storedValue : undefined,\n                invalidId: referenceId,\n                replaceRef: function (newRef) {\n                    applyPatch(storedRefNode.root.storedValue, {\n                        op: \"replace\",\n                        value: newRef,\n                        path: storedRefNode.path\n                    });\n                },\n                removeRef: function () {\n                    if (isModelType(storedRefParentNode.type)) {\n                        this.replaceRef(undefined);\n                    }\n                    else {\n                        applyPatch(storedRefNode.root.storedValue, {\n                            op: \"remove\",\n                            path: storedRefNode.path\n                        });\n                    }\n                }\n            });\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"addTargetNodeWatcher\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode, referenceId) {\n            var _this = this;\n            // this will make sure the target node becomes created\n            var refTargetValue = this.getValue(storedRefNode);\n            if (!refTargetValue) {\n                return undefined;\n            }\n            var refTargetNode = getStateTreeNode(refTargetValue);\n            var hookHandler = function (_, refTargetNodeHook) {\n                var cause = getInvalidationCause(refTargetNodeHook);\n                if (!cause) {\n                    return;\n                }\n                _this.fireInvalidated(cause, storedRefNode, referenceId, refTargetNode);\n            };\n            var refTargetDetachHookDisposer = refTargetNode.registerHook(Hook.beforeDetach, hookHandler);\n            var refTargetDestroyHookDisposer = refTargetNode.registerHook(Hook.beforeDestroy, hookHandler);\n            return function () {\n                refTargetDetachHookDisposer();\n                refTargetDestroyHookDisposer();\n            };\n        }\n    });\n    Object.defineProperty(BaseReferenceType.prototype, \"watchTargetNodeForInvalidations\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode, identifier, customGetSet) {\n            var _this = this;\n            if (!this.onInvalidated) {\n                return;\n            }\n            var onRefTargetDestroyedHookDisposer;\n            // get rid of the watcher hook when the stored ref node is destroyed\n            // detached is ignored since scalar nodes (where the reference resides) cannot be detached\n            storedRefNode.registerHook(Hook.beforeDestroy, function () {\n                if (onRefTargetDestroyedHookDisposer) {\n                    onRefTargetDestroyedHookDisposer();\n                }\n            });\n            var startWatching = function (sync) {\n                // re-create hook in case the stored ref gets reattached\n                if (onRefTargetDestroyedHookDisposer) {\n                    onRefTargetDestroyedHookDisposer();\n                }\n                // make sure the target node is actually there and initialized\n                var storedRefParentNode = storedRefNode.parent;\n                var storedRefParentValue = storedRefParentNode && storedRefParentNode.storedValue;\n                if (storedRefParentNode && storedRefParentNode.isAlive && storedRefParentValue) {\n                    var refTargetNodeExists = void 0;\n                    if (customGetSet) {\n                        refTargetNodeExists = !!customGetSet.get(identifier, storedRefParentValue);\n                    }\n                    else {\n                        refTargetNodeExists = storedRefNode.root.identifierCache.has(_this.targetType, normalizeIdentifier(identifier));\n                    }\n                    if (!refTargetNodeExists) {\n                        // we cannot change the reference in sync mode\n                        // since we are in the middle of a reconciliation/instantiation and the change would be overwritten\n                        // for those cases just let the wrong reference be assigned and fail upon usage\n                        // (like current references do)\n                        // this means that effectively this code will only run when it is created from a snapshot\n                        if (!sync) {\n                            _this.fireInvalidated(\"invalidSnapshotReference\", storedRefNode, identifier, null);\n                        }\n                    }\n                    else {\n                        onRefTargetDestroyedHookDisposer = _this.addTargetNodeWatcher(storedRefNode, identifier);\n                    }\n                }\n            };\n            if (storedRefNode.state === NodeLifeCycle.FINALIZED) {\n                // already attached, so the whole tree is ready\n                startWatching(true);\n            }\n            else {\n                if (!storedRefNode.isRoot) {\n                    // start watching once the whole tree is ready\n                    storedRefNode.root.registerHook(Hook.afterCreationFinalization, function () {\n                        // make sure to attach it so it can start listening\n                        if (storedRefNode.parent) {\n                            storedRefNode.parent.createObservableInstanceIfNeeded();\n                        }\n                    });\n                }\n                // start watching once the node is attached somewhere / parent changes\n                storedRefNode.registerHook(Hook.afterAttach, function () {\n                    startWatching(false);\n                });\n            }\n        }\n    });\n    return BaseReferenceType;\n}(SimpleType));\n/**\n * @internal\n * @hidden\n */\nvar IdentifierReferenceType = /** @class */ (function (_super) {\n    __extends(IdentifierReferenceType, _super);\n    function IdentifierReferenceType(targetType, onInvalidated) {\n        return _super.call(this, targetType, onInvalidated) || this;\n    }\n    Object.defineProperty(IdentifierReferenceType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            if (!storedRefNode.isAlive)\n                return undefined;\n            var storedRef = storedRefNode.storedValue;\n            return storedRef.resolvedValue;\n        }\n    });\n    Object.defineProperty(IdentifierReferenceType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            var ref = storedRefNode.storedValue;\n            return ref.identifier;\n        }\n    });\n    Object.defineProperty(IdentifierReferenceType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var identifier = isStateTreeNode(initialValue)\n                ? getIdentifier(initialValue)\n                : initialValue;\n            var storedRef = new StoredReference(initialValue, this.targetType);\n            var storedRefNode = createScalarNode(this, parent, subpath, environment, storedRef);\n            storedRef.node = storedRefNode;\n            this.watchTargetNodeForInvalidations(storedRefNode, identifier, undefined);\n            return storedRefNode;\n        }\n    });\n    Object.defineProperty(IdentifierReferenceType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            if (!current.isDetaching && current.type === this) {\n                var compareByValue = isStateTreeNode(newValue);\n                var ref = current.storedValue;\n                if ((!compareByValue && ref.identifier === newValue) ||\n                    (compareByValue && ref.resolvedValue === newValue)) {\n                    current.setParent(parent, subpath);\n                    return current;\n                }\n            }\n            var newNode = this.instantiate(parent, subpath, undefined, newValue);\n            current.die(); // noop if detaching\n            return newNode;\n        }\n    });\n    return IdentifierReferenceType;\n}(BaseReferenceType));\n/**\n * @internal\n * @hidden\n */\nvar CustomReferenceType = /** @class */ (function (_super) {\n    __extends(CustomReferenceType, _super);\n    function CustomReferenceType(targetType, options, onInvalidated) {\n        var _this = _super.call(this, targetType, onInvalidated) || this;\n        Object.defineProperty(_this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        return _this;\n    }\n    Object.defineProperty(CustomReferenceType.prototype, \"getValue\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            if (!storedRefNode.isAlive)\n                return undefined;\n            var referencedNode = this.options.get(storedRefNode.storedValue, storedRefNode.parent ? storedRefNode.parent.storedValue : null);\n            return referencedNode;\n        }\n    });\n    Object.defineProperty(CustomReferenceType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (storedRefNode) {\n            return storedRefNode.storedValue;\n        }\n    });\n    Object.defineProperty(CustomReferenceType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, newValue) {\n            var identifier = isStateTreeNode(newValue)\n                ? this.options.set(newValue, parent ? parent.storedValue : null)\n                : newValue;\n            var storedRefNode = createScalarNode(this, parent, subpath, environment, identifier);\n            this.watchTargetNodeForInvalidations(storedRefNode, identifier, this.options);\n            return storedRefNode;\n        }\n    });\n    Object.defineProperty(CustomReferenceType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            var newIdentifier = isStateTreeNode(newValue)\n                ? this.options.set(newValue, current ? current.storedValue : null)\n                : newValue;\n            if (!current.isDetaching &&\n                current.type === this &&\n                current.storedValue === newIdentifier) {\n                current.setParent(parent, subpath);\n                return current;\n            }\n            var newNode = this.instantiate(parent, subpath, undefined, newIdentifier);\n            current.die(); // noop if detaching\n            return newNode;\n        }\n    });\n    return CustomReferenceType;\n}(BaseReferenceType));\n/**\n * `types.reference` - Creates a reference to another type, which should have defined an identifier.\n * See also the [reference and identifiers](https://github.com/mobxjs/mobx-state-tree#references-and-identifiers) section.\n */\nfunction reference(subType, options) {\n    assertIsType(subType, 1);\n    if (devMode()) {\n        if (arguments.length === 2 && typeof arguments[1] === \"string\") {\n            // istanbul ignore next\n            throw fail$1(\"References with base path are no longer supported. Please remove the base path.\");\n        }\n    }\n    var getSetOptions = options ? options : undefined;\n    var onInvalidated = options\n        ? options.onInvalidated\n        : undefined;\n    if (getSetOptions && (getSetOptions.get || getSetOptions.set)) {\n        if (devMode()) {\n            if (!getSetOptions.get || !getSetOptions.set) {\n                throw fail$1(\"reference options must either contain both a 'get' and a 'set' method or none of them\");\n            }\n        }\n        return new CustomReferenceType(subType, {\n            get: getSetOptions.get,\n            set: getSetOptions.set\n        }, onInvalidated);\n    }\n    else {\n        return new IdentifierReferenceType(subType, onInvalidated);\n    }\n}\n/**\n * Returns if a given value represents a reference type.\n *\n * @param type\n * @returns\n */\nfunction isReferenceType(type) {\n    return (type.flags & TypeFlags.Reference) > 0;\n}\n/**\n * `types.safeReference` - A safe reference is like a standard reference, except that it accepts the undefined value by default\n * and automatically sets itself to undefined (when the parent is a model) / removes itself from arrays and maps\n * when the reference it is pointing to gets detached/destroyed.\n *\n * The optional options parameter object accepts a parameter named `acceptsUndefined`, which is set to true by default, so it is suitable\n * for model properties.\n * When used inside collections (arrays/maps), it is recommended to set this option to false so it can't take undefined as value,\n * which is usually the desired in those cases.\n * Additionally, the optional options parameter object accepts a parameter named `onInvalidated`, which will be called when the reference target node that the reference is pointing to is about to be detached/destroyed\n *\n * Strictly speaking it is a `types.maybe(types.reference(X))` (when `acceptsUndefined` is set to true, the default) and\n * `types.reference(X)` (when `acceptsUndefined` is set to false), both of them with a customized `onInvalidated` option.\n *\n * @param subType\n * @param options\n * @returns\n */\nfunction safeReference(subType, options) {\n    var refType = reference(subType, __assign(__assign({}, options), { onInvalidated: function (ev) {\n            if (options && options.onInvalidated) {\n                options.onInvalidated(ev);\n            }\n            ev.removeRef();\n        } }));\n    if (options && options.acceptsUndefined === false) {\n        return refType;\n    }\n    else {\n        return maybe(refType);\n    }\n}\n\nvar BaseIdentifierType = /** @class */ (function (_super) {\n    __extends(BaseIdentifierType, _super);\n    function BaseIdentifierType(name, validType) {\n        var _this = _super.call(this, name) || this;\n        Object.defineProperty(_this, \"validType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: validType\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Identifier\n        });\n        return _this;\n    }\n    Object.defineProperty(BaseIdentifierType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            if (!parent || !(parent.type instanceof ModelType))\n                throw fail$1(\"Identifier types can only be instantiated as direct child of a model type\");\n            return createScalarNode(this, parent, subpath, environment, initialValue);\n        }\n    });\n    Object.defineProperty(BaseIdentifierType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, newValue, parent, subpath) {\n            // we don't consider detaching here since identifier are scalar nodes, and scalar nodes cannot be detached\n            if (current.storedValue !== newValue)\n                throw fail$1(\"Tried to change identifier from '\" + current.storedValue + \"' to '\" + newValue + \"'. Changing identifiers is not allowed.\");\n            current.setParent(parent, subpath);\n            return current;\n        }\n    });\n    Object.defineProperty(BaseIdentifierType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (typeof value !== this.validType) {\n                return typeCheckFailure(context, value, \"Value is not a valid \" + this.describe() + \", expected a \" + this.validType);\n            }\n            return typeCheckSuccess();\n        }\n    });\n    return BaseIdentifierType;\n}(SimpleType));\n/**\n * @internal\n * @hidden\n */\nvar IdentifierType = /** @class */ (function (_super) {\n    __extends(IdentifierType, _super);\n    function IdentifierType() {\n        var _this = _super.call(this, \"identifier\", \"string\") || this;\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Identifier\n        });\n        return _this;\n    }\n    Object.defineProperty(IdentifierType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"identifier\";\n        }\n    });\n    return IdentifierType;\n}(BaseIdentifierType));\n/**\n * @internal\n * @hidden\n */\nvar IdentifierNumberType = /** @class */ (function (_super) {\n    __extends(IdentifierNumberType, _super);\n    function IdentifierNumberType() {\n        return _super.call(this, \"identifierNumber\", \"number\") || this;\n    }\n    Object.defineProperty(IdentifierNumberType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return node.storedValue;\n        }\n    });\n    Object.defineProperty(IdentifierNumberType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return \"identifierNumber\";\n        }\n    });\n    return IdentifierNumberType;\n}(BaseIdentifierType));\n/**\n * `types.identifier` - Identifiers are used to make references, lifecycle events and reconciling works.\n * Inside a state tree, for each type can exist only one instance for each given identifier.\n * For example there couldn't be 2 instances of user with id 1. If you need more, consider using references.\n * Identifier can be used only as type property of a model.\n * This type accepts as parameter the value type of the identifier field that can be either string or number.\n *\n * Example:\n * ```ts\n *  const Todo = types.model(\"Todo\", {\n *      id: types.identifier,\n *      title: types.string\n *  })\n * ```\n *\n * @returns\n */\nvar identifier = new IdentifierType();\n/**\n * `types.identifierNumber` - Similar to `types.identifier`. This one will serialize from / to a number when applying snapshots\n *\n * Example:\n * ```ts\n *  const Todo = types.model(\"Todo\", {\n *      id: types.identifierNumber,\n *      title: types.string\n *  })\n * ```\n *\n * @returns\n */\nvar identifierNumber = new IdentifierNumberType();\n/**\n * Returns if a given value represents an identifier type.\n *\n * @param type\n * @returns\n */\nfunction isIdentifierType(type) {\n    return isType(type) && (type.flags & TypeFlags.Identifier) > 0;\n}\n/**\n * @internal\n * @hidden\n */\nfunction normalizeIdentifier(id) {\n    return \"\" + id;\n}\n/**\n * @internal\n * @hidden\n */\nfunction isValidIdentifier(id) {\n    return typeof id === \"string\" || typeof id === \"number\";\n}\n/**\n * @internal\n * @hidden\n */\nfunction assertIsValidIdentifier(id, argNumber) {\n    assertArg(id, isValidIdentifier, \"string or number (identifier)\", argNumber);\n}\n\n/**\n * `types.custom` - Creates a custom type. Custom types can be used for arbitrary immutable values, that have a serializable representation. For example, to create your own Date representation, Decimal type etc.\n *\n * The signature of the options is:\n * ```ts\n * export interface CustomTypeOptions<S, T> {\n *     // Friendly name\n *     name: string\n *     // given a serialized value and environment, how to turn it into the target type\n *     fromSnapshot(snapshot: S, env: any): T\n *     // return the serialization of the current value\n *     toSnapshot(value: T): S\n *     // if true, this is a converted value, if false, it's a snapshot\n *     isTargetType(value: T | S): value is T\n *     // a non empty string is assumed to be a validation error\n *     getValidationMessage?(snapshot: S): string\n * }\n * ```\n *\n * Example:\n * ```ts\n * const DecimalPrimitive = types.custom<string, Decimal>({\n *     name: \"Decimal\",\n *     fromSnapshot(value: string) {\n *         return new Decimal(value)\n *     },\n *     toSnapshot(value: Decimal) {\n *         return value.toString()\n *     },\n *     isTargetType(value: string | Decimal): boolean {\n *         return value instanceof Decimal\n *     },\n *     getValidationMessage(value: string): string {\n *         if (/^-?\\d+\\.\\d+$/.test(value)) return \"\" // OK\n *         return `'${value}' doesn't look like a valid decimal number`\n *     }\n * })\n *\n * const Wallet = types.model({\n *     balance: DecimalPrimitive\n * })\n * ```\n *\n * @param options\n * @returns\n */\nfunction custom(options) {\n    return new CustomType(options);\n}\n/**\n * @internal\n * @hidden\n */\nvar CustomType = /** @class */ (function (_super) {\n    __extends(CustomType, _super);\n    function CustomType(options) {\n        var _this = _super.call(this, options.name) || this;\n        Object.defineProperty(_this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(_this, \"flags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: TypeFlags.Custom\n        });\n        return _this;\n    }\n    Object.defineProperty(CustomType.prototype, \"describe\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            return this.name;\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"isValidSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (value, context) {\n            if (this.options.isTargetType(value))\n                return typeCheckSuccess();\n            var typeError = this.options.getValidationMessage(value);\n            if (typeError) {\n                return typeCheckFailure(context, value, \"Invalid value for type '\" + this.name + \"': \" + typeError);\n            }\n            return typeCheckSuccess();\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"getSnapshot\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (node) {\n            return this.options.toSnapshot(node.storedValue);\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"instantiate\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (parent, subpath, environment, initialValue) {\n            var valueToStore = this.options.isTargetType(initialValue)\n                ? initialValue\n                : this.options.fromSnapshot(initialValue, parent && parent.root.environment);\n            return createScalarNode(this, parent, subpath, environment, valueToStore);\n        }\n    });\n    Object.defineProperty(CustomType.prototype, \"reconcile\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (current, value, parent, subpath) {\n            var isSnapshot = !this.options.isTargetType(value);\n            // in theory customs use scalar nodes which cannot be detached, but still...\n            if (!current.isDetaching) {\n                var unchanged = current.type === this &&\n                    (isSnapshot ? value === current.snapshot : value === current.storedValue);\n                if (unchanged) {\n                    current.setParent(parent, subpath);\n                    return current;\n                }\n            }\n            var valueToStore = isSnapshot\n                ? this.options.fromSnapshot(value, parent.root.environment)\n                : value;\n            var newNode = this.instantiate(parent, subpath, undefined, valueToStore);\n            current.die(); // noop if detaching\n            return newNode;\n        }\n    });\n    return CustomType;\n}(SimpleType));\n\n// we import the types to re-export them inside types.\nvar types = {\n    enumeration: enumeration,\n    model: model,\n    compose: compose,\n    custom: custom,\n    reference: reference,\n    safeReference: safeReference,\n    union: union,\n    optional: optional,\n    literal: literal,\n    maybe: maybe,\n    maybeNull: maybeNull,\n    refinement: refinement,\n    string: string,\n    boolean: boolean,\n    number: number,\n    integer: integer,\n    Date: DatePrimitive,\n    map: map,\n    array: array,\n    frozen: frozen,\n    identifier: identifier,\n    identifierNumber: identifierNumber,\n    late: late,\n    undefined: undefinedType,\n    null: nullType,\n    snapshotProcessor: snapshotProcessor\n};\n\nexport { addDisposer, addMiddleware, applyAction, applyPatch, applySnapshot, cast, castFlowReturn, castToReferenceSnapshot, castToSnapshot, clone, createActionTrackingMiddleware, createActionTrackingMiddleware2, decorate, destroy, detach, escapeJsonPath, flow, getChildType, getEnv, getIdentifier, getLivelinessChecking, getMembers, getNodeId, getParent, getParentOfType, getPath, getPathParts, getPropertyMembers, getRelativePath, getRoot, getRunningActionContext, getSnapshot, getType, hasParent, hasParentOfType, isActionContextChildOf, isActionContextThisOrChildOf, isAlive, isArrayType, isFrozenType, isIdentifierType, isLateType, isLiteralType, isMapType, isModelType, isOptionalType, isPrimitiveType, isProtected, isReferenceType, isRefinementType, isRoot, isStateTreeNode, isType, isUnionType, isValidReference, joinJsonPath, onAction, onPatch, onSnapshot, process$1 as process, protect, recordActions, recordPatches, resolveIdentifier, resolvePath, setLivelinessChecking, setLivelynessChecking, splitJsonPath, toGenerator, toGeneratorFunction, tryReference, tryResolve, typecheck, types, unescapeJsonPath, unprotect, walk };\n", "import { mainModule } from \"process\";\r\n\r\n\r\nexport const handlePropChange = <T>(item: T, handler: (obj: T, val: string) => void) => (e: Event) => {\r\n    const target = <HTMLInputElement>e.currentTarget;\r\n\r\n    const newVal = target.value;\r\n\r\n    handler(item, newVal);\r\n}\r\n\r\nexport const handleSubmit = (f: Function) => (e: Event) => {\r\n    e.preventDefault();\r\n\r\n    f();\r\n\r\n    return false;\r\n}\r\n\r\nexport const helperFunctions = {\r\n    \r\n    \r\n    priceToCurrency: (price: number | undefined) => {\r\n        return price?.toLocaleString(\"en-CA\", { style: \"currency\", currency: \"CAD\" }) ?? \"\"\r\n    },\r\n    \r\n    decimalToPercentage: (decimal: number | undefined) => {\r\n        return decimal?.toLocaleString(\"en\", {style: \"percent\"}) ?? \"\"\r\n    },\r\n    \r\n    getRandomStatus: () => {\r\n        return Math.floor(Math.random() * (8 - 1) + 1);\r\n    },\r\n    \r\n    getStatus: (status: number | undefined): String => {\r\n        switch (status) {\r\n            case 1: return \"\u23F3 Pending payment\";\r\n            case 2: return \"\uD83E\uDDFE Payment received\";\r\n            case 3: return \"\uD83D\uDCE6 Shipped\";\r\n            case 4: return \"\uD83D\uDE9A On vehicle for delivery\";\r\n            case 5: return \"\u2705 Delivered\";\r\n            case 6: return \"\u274C Canceled\";\r\n            case 7: return \"\u21A9 Returned to sender\";\r\n            default: return \"No status\";\r\n        }\r\n    }\r\n}\r\n\r\nexport const states:string[] = [\"Ontario\", \"Quebec\", \"Nova Scotia\", \"New Brunswick\", \"Manitoba\",\r\n    \"British Columbia\", \"Prince Edward Island\", \"Saskatchewan\", \"Alberta\", \"Newfoundland and Labrador\"];\r\n", "import { DateTime } from 'luxon';\r\nimport { Instance, SnapshotOut, types } from 'mobx-state-tree';\r\nimport { Customer, ICustomer } from '../customers/Customer';\r\nimport { IOrderItem, OrderItem } from './OrderItem';\r\n\r\n\r\nexport const BaseOrder = types\r\n    .model(\"Order\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        customerId: types.maybe(types.reference(Customer)),\r\n        orderDate: types.optional(types.string, DateTime.now().toUTC().toJSON()),\r\n        status: types.optional(types.number, 1),\r\n        items: types.array(OrderItem)\r\n    })\r\n    .actions(self => ({\r\n        setCustomer(customer: ICustomer | undefined) {\r\n            self.customerId = customer;\r\n        },\r\n\r\n        setOrderDate(orderDate: string) {\r\n            self.orderDate = orderDate;\r\n        },\r\n\r\n        setOrderStatus(orderStatus: number) {\r\n            self.status = orderStatus;\r\n        },\r\n\r\n        addItem() {\r\n            self.items.push(OrderItem.create({}));\r\n        },\r\n\r\n        removeItem(item: IOrderItem) {\r\n            self.items.remove(item);\r\n        }\r\n\r\n    }))\r\n    .views(self => ({\r\n        get totalPrice() {\r\n            return self.items.reduce<number | undefined>(\r\n                (total, item) =>\r\n                    (total === undefined)\r\n                        ? undefined\r\n                            : self.id === \"\" ? (item?.totalPrice === undefined)\r\n                            ? total\r\n                            : total + item.totalPrice :\r\n                            (item?.totalPriceOnDate === undefined)\r\n                            ? total\r\n                            : total + item.totalPriceOnDate,\r\n                0\r\n            );\r\n        }\r\n    }));\r\n\r\n    const postProcessSnapshot = (snapshot: SnapshotOut<typeof BaseOrder>) =>\r\n    ({\r\n        ...snapshot,\r\n        id: snapshot.id || undefined,\r\n        customerId: snapshot.customerId\r\n    });\r\n\r\nexport const Order = types.snapshotProcessor(BaseOrder, { postProcessor: postProcessSnapshot })\r\n\r\nexport type IOrder = Instance<typeof Order>\r\n", "export const postProcessor = (snapshot: { id: string }) =>\r\n({\r\n    ...snapshot,\r\n    id: snapshot.id || undefined\r\n})", "import { Instance, types } from 'mobx-state-tree';\r\nimport { postProcessor } from '../common/recordPostProcessor';\r\n\r\nconst BaseOffice = types\r\n    .model(\"Office\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        city: types.optional(types.string, \"\"),\r\n        phone: types.optional(types.string, \"\"),\r\n        address: types.optional(types.string, \"\"),\r\n        state: types.enumeration(\"state\", [\"Ontario\", \"Quebec\", \"Nova Scotia\", \"New Brunswick\", \"Manitoba\",\r\n        \"British Columbia\", \"Prince Edward Island\", \"Saskatchewan\", \"Alberta\", \"Newfoundland and Labrador\"]),\r\n        country: types.optional(types.string, \"\"),\r\n        postalCode: types.optional(types.refinement(types.string, p => /^$|[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i.test(p)), \"\")\r\n    })\r\n    .actions(self => ({\r\n        setCity(city: string) {\r\n            self.city = city;\r\n        },\r\n\r\n        setPhone(phone: string) {\r\n            self.phone = phone;\r\n        },\r\n\r\n        setAddress(address: string) {\r\n            self.address = address;\r\n        },\r\n\r\n        setState(state: string) {\r\n            self.state = state;\r\n        },\r\n\r\n        setCountry(country: string) {\r\n            self.country = country;\r\n        },\r\n\r\n        setPostalCode(postalCode: string) {\r\n            self.postalCode = postalCode;\r\n        }\r\n    }));\r\n\r\nexport const Office = types.snapshotProcessor(BaseOffice, { postProcessor })\r\n\r\nexport type IOffice = Instance<typeof Office>", "import { Instance, SnapshotOut, types } from 'mobx-state-tree';\r\nimport { Office, IOffice } from '../offices/Office';\r\n\r\nconst BaseEmployee = types\r\n    .model(\"Employee\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        officeId: types.maybe(types.reference(Office)),\r\n        manager: types.optional(types.string, \"\"),\r\n        firstName: types.optional(types.string, \"\"),\r\n        lastName: types.optional(types.string, \"\"),\r\n        emailAddress: types.optional(types.string, \"\"),\r\n        extension: types.optional(types.string, \"\"),\r\n        jobTitle: types.optional(types.string, \"\")\r\n    })\r\n    .actions(self => ({\r\n        setOffice(office: IOffice | undefined) {\r\n            self.officeId = office;\r\n        },\r\n\r\n        setManager(manager: string) {\r\n            self.manager = manager;\r\n        },\r\n\r\n        setFirstName(firstName: string) {\r\n            self.firstName = firstName;\r\n        },\r\n\r\n        setLastName(lastName: string) {\r\n            self.lastName = lastName;\r\n        },\r\n\r\n        setEmailAddress(emailAddress: string) {\r\n            self.emailAddress = emailAddress;\r\n        },\r\n\r\n        setExtension(extension: string) {\r\n            self.extension = extension;\r\n        },\r\n\r\n        setJobTitle(jobTitle: string) {\r\n            self.jobTitle = jobTitle;\r\n        },\r\n    }));\r\n\r\n    const postProcessSnapshot = (snapshot: SnapshotOut<typeof BaseEmployee>) =>\r\n    ({\r\n        ...snapshot,\r\n        id: snapshot.id || undefined,\r\n        officeId: snapshot.officeId\r\n    });\r\n\r\nexport const Employee = types.snapshotProcessor(BaseEmployee, { postProcessor: postProcessSnapshot })\r\n\r\nexport type IEmployee = Instance<typeof Employee>", "import { Instance, types } from 'mobx-state-tree';\r\nimport { postProcessor } from '../common/recordPostProcessor';\r\nimport { Employee, IEmployee } from '../employees/Employee';\r\n\r\nconst BaseCustomer = types\r\n    .model(\"Customer\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        employeeId: types.maybe(types.reference(Employee)),\r\n        firstName: types.optional(types.string, \"\"),\r\n        lastName: types.optional(types.string, \"\"),\r\n        deliveryAddress: types.optional(types.string, \"\"),\r\n        city: types.optional(types.string, \"\"),\r\n        state: types.enumeration(\"state\", [\"Ontario\", \"Quebec\", \"Nova Scotia\", \"New Brunswick\", \"Manitoba\",\r\n                                 \"British Columbia\", \"Prince Edward Island\", \"Saskatchewan\", \"Alberta\", \"Newfoundland and Labrador\"]),\r\n        postalCode: types.optional(types.refinement(types.string, p => /^$|[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i.test(p)), \"\"),\r\n        country: types.optional(types.string, \"Canada\"),\r\n        emailAddress: types.optional(types.refinement(types.string, e => /^$|\\b[\\w\\.-]+@[\\w\\.-]+\\.\\w{2,4}\\b/gi.test(e)), \"\"),\r\n        phoneNumber: types.optional(types.refinement(types.string, p => /^$|(?:\\d{1}\\s)?\\(?(\\d{3})\\)?-?\\s?(\\d{3})-?\\s?(\\d{4})/g.test(p)), \"\")\r\n    })\r\n    .actions(self => ({\r\n        setEmployee(employee: IEmployee | undefined) {\r\n            self.employeeId = employee;\r\n        },\r\n\r\n        setFirstName(firstName: string) {\r\n            self.firstName = firstName;\r\n        },\r\n\r\n        setLastName(lastName: string) {\r\n            self.lastName = lastName;\r\n        },\r\n\r\n        setDeliveryAddress(deliveryAddress: string) {\r\n            self.deliveryAddress = deliveryAddress;\r\n        },\r\n\r\n        setCity(city: string) {\r\n            self.city = city;\r\n        },\r\n\r\n        setState(state: string) {\r\n            self.state = state;\r\n        },\r\n\r\n        setPostalCode(postalCode: string) {\r\n            self.postalCode = postalCode;\r\n        },\r\n\r\n        setCountry(country: string) {\r\n            self.country = country;\r\n        },\r\n\r\n        setEmailAddress(emailAddress: string) {\r\n            self.emailAddress = emailAddress;\r\n        },\r\n\r\n        setPhoneNumber(phoneNumber: string) {\r\n            self.phoneNumber = phoneNumber;\r\n        }\r\n    }))\r\n    .views(self => ({\r\n        get fullName() {\r\n            return `${self.firstName} ${self.lastName}`;\r\n        },\r\n\r\n        get fullAddress() {\r\n            return `${self.deliveryAddress}, ${self.city}, ${self.country} - PC: ${self.postalCode}`;\r\n        }\r\n    }));\r\n\r\nexport const Customer = types.snapshotProcessor(BaseCustomer, { postProcessor })\r\n\r\nexport type ICustomer = Instance<typeof Customer>\r\n", "import { Instance, types } from 'mobx-state-tree';\r\nimport { postProcessor } from '../common/recordPostProcessor';\r\n\r\nconst BaseCategory = types\r\n    .model(\"Category\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        name: types.optional(types.string, \"\"),\r\n        image: types.optional(types.string, \"\")\r\n    })\r\n    .actions(self => ({\r\n        setName(name: string) {\r\n            self.name = name;\r\n        },\r\n\r\n        setImage(image: string) {\r\n            self.image = image;\r\n        }\r\n    }));\r\n\r\nexport const Category = types.snapshotProcessor(BaseCategory, { postProcessor })\r\n\r\nexport type ICategory = Instance<typeof Category>\r\n", "import { Instance, SnapshotOut, types } from 'mobx-state-tree';\r\nimport { Category, ICategory } from '../categories/Category';\r\n\r\n\r\nconst BaseInventoryItem = types\r\n    .model(\"InventoryItem\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        categoryId: types.maybe(types.reference(Category)),\r\n        name: types.string,\r\n        price: types.number,\r\n        image: types.optional(types.string, \"\")\r\n    })\r\n    .actions(self => ({\r\n        setCategory(category: ICategory | undefined) {\r\n            self.categoryId = category;\r\n        },\r\n\r\n        setName(name: string) {\r\n            self.name = name;\r\n        },\r\n\r\n        setPrice(price: number) {\r\n            self.price = price;\r\n        },\r\n\r\n        setImage(image: string) {\r\n            self.image = image;\r\n        }\r\n    }));\r\n\r\n    const postProcessSnapshot = (snapshot: SnapshotOut<typeof BaseInventoryItem>) =>\r\n    ({\r\n        ...snapshot,\r\n        id: snapshot.id || undefined,\r\n        categoryId: snapshot.categoryId\r\n    });\r\n\r\nexport const InventoryItem = types.snapshotProcessor(BaseInventoryItem, { postProcessor: postProcessSnapshot })\r\n\r\nexport type IInventoryItem = Instance<typeof InventoryItem>\r\n", "import { Instance, SnapshotOut, types } from 'mobx-state-tree';\r\nimport { IInventoryItem, InventoryItem } from '../inventory/InventoryItem';\r\n\r\n\r\nexport const BaseOrderItem = types\r\n    .model(\"OrderItem\", {\r\n        id: types.optional(types.identifier, \"\"),\r\n        inventoryItemId: types.maybe(types.reference(InventoryItem)),\r\n        quantity: types.optional(types.number, 1),\r\n        buyPricePerUnit: types.optional(types.number, 0.00),\r\n        tax: types.optional(types.number, 0.15)\r\n    })\r\n    .actions(self => ({\r\n        setInventoryItem(inventoryItem: IInventoryItem | undefined) {\r\n            self.inventoryItemId = inventoryItem;\r\n        },\r\n\r\n        setQuantity(quantity: number) {\r\n            self.quantity = quantity;\r\n        },\r\n\r\n        setBuyPricePerUnit(buyPricePerUnit: number) {\r\n            self.buyPricePerUnit = buyPricePerUnit;\r\n            return self.buyPricePerUnit;\r\n        }\r\n\r\n    }))\r\n    .views(self => ({\r\n        get unitPrice() {\r\n            return self.inventoryItemId?.price;\r\n        },\r\n\r\n        get totalPrice() {\r\n            if (\r\n                self.inventoryItemId === undefined ||\r\n                self.quantity < 1\r\n            ) {\r\n                return undefined;\r\n            }\r\n\r\n            return (self.inventoryItemId.price * self.quantity) * self.tax + self.inventoryItemId.price * self.quantity;\r\n        },\r\n\r\n        get totalPriceOnDate() {\r\n            return (self.buyPricePerUnit * self.quantity) * self.tax + self.buyPricePerUnit * self.quantity;\r\n        }\r\n    }));\r\n\r\n    const postProcessSnapshot = (snapshot: SnapshotOut<typeof BaseOrderItem>) =>\r\n    ({\r\n        ...snapshot,\r\n        id: snapshot.id || undefined,\r\n        inventoryItemId: snapshot.inventoryItemId\r\n    });\r\n    \r\n\r\nexport const OrderItem = types.snapshotProcessor(BaseOrderItem, { postProcessor: postProcessSnapshot})\r\nexport type IOrderItem = Instance<typeof OrderItem>\r\n", "import { getSnapshot, SnapshotIn } from 'mobx-state-tree';\r\nimport { helperFunctions } from '../common/formTools';\r\nimport { IOrder, Order } from './Order';\r\n\r\nexport const getOrders = async () => {\r\n    const response = await fetch(`${AppBasePath}/api/orders`);\r\n\r\n    const results = await response.json();\r\n\r\n    return results.map((i: SnapshotIn<IOrder>) => Order.create(i));\r\n};\r\n\r\nexport const getOrder = async (id: string) => {\r\n    const response = await fetch(`${AppBasePath}/api/orders/${id}`);\r\n\r\n    return Order.create(await response.json());\r\n};\r\n\r\nexport const saveOrder = async (order: IOrder) => {\r\n\r\n    order.status = helperFunctions.getRandomStatus();\r\n    console.log(order);\r\n\r\n    const response = await fetch(`${AppBasePath}/api/orders`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(getSnapshot(order))\r\n    });\r\n    return Order.create(await response.json());\r\n};\r\n\r\nexport const deleteOrder = async (order: IOrder) => {\r\n    const response = await fetch(`${AppBasePath}/api/orders`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(getSnapshot(order))\r\n    });\r\n\r\n    return Order.create(await response.json());\r\n}\r\n", "import { getSnapshot, SnapshotIn } from 'mobx-state-tree';\r\nimport { IInventoryItem, InventoryItem } from './InventoryItem';\r\n\r\nexport const getInventoryItems = async () => {\r\n    const response = await fetch(`${AppBasePath}/api/inventory`);\r\n\r\n    const results = await response.json();\r\n\r\n    return results.map((i: SnapshotIn<IInventoryItem>) => InventoryItem.create(i));\r\n};\r\n\r\nexport const getInventoryItem = async (id: string) => {\r\n    const response = await fetch(`${AppBasePath}/api/inventory/${id}`);\r\n\r\n    return InventoryItem.create(await response.json());\r\n};\r\n\r\nexport const saveInventoryItem = async (item: IInventoryItem) => {\r\n    const response = await fetch(`${AppBasePath}/api/inventory`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(getSnapshot(item))\r\n    });\r\n\r\n    return InventoryItem.create(await response.json());\r\n};\r\n\r\nexport const deleteInventoryItem = async (item: IInventoryItem) => {\r\n    const response = await fetch(`${AppBasePath}/api/inventory`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(getSnapshot(item))\r\n    });\r\n\r\n    return InventoryItem.create(await response.json());\r\n}\r\n", "import { IAnyType, IMSTArray, Instance, types } from 'mobx-state-tree';\r\n\r\nexport const BaseModel = <T extends IAnyType>(model: T) =>\r\n    types.model(\"BaseModel\", {\r\n        pageNumber: types.optional(types.number, 1),\r\n        pageSize: types.optional(types.number, 10),\r\n        firstPage: types.maybeNull(types.string),\r\n        lastPage: types.maybeNull(types.string),\r\n        totalPages: types.optional(types.number, 1),\r\n        nextPage: types.maybeNull(types.string),\r\n        previousPage: types.maybeNull(types.string),\r\n        data: types.array(model),\r\n        succeeded: types.optional(types.boolean, true),\r\n        errors: types.maybeNull(types.array(types.string)),\r\n        message: types.maybeNull(types.string)\r\n    }) \r\n    .actions(self => ({\r\n        setPageNumber(pageNumber: number) {\r\n            self.pageNumber = pageNumber;\r\n        },\r\n\r\n        setPageSize(pageSize: number) {\r\n            self.pageSize = pageSize;\r\n        },\r\n\r\n        setFirstPage(firstPage: string) {\r\n            self.firstPage = firstPage;\r\n        },\r\n\r\n        setLastPage(lastPage: string) {\r\n            self.lastPage = lastPage;\r\n        },\r\n\r\n        setTotalPages(totalPages: number) {\r\n            self.totalPages = totalPages;\r\n        },\r\n\r\n        setNextPage(nextPage: string) {\r\n            self.nextPage = nextPage;\r\n        },\r\n\r\n        setData(data: IMSTArray<T>) {\r\n            self.data = data;\r\n        },\r\n\r\n        setSucceeded(succeeded: boolean) {\r\n            self.succeeded = succeeded;\r\n        },\r\n\r\n        setErrors(errors: IMSTArray<any>) {\r\n            self.errors = errors;\r\n        },\r\n\r\n        setMessage(message: string) {\r\n            self.message = message;\r\n        }\r\n    }));\r\n\r\nexport type IBaseModel = Instance<ReturnType<typeof BaseModel>>", "import { Instance } from \"mobx-state-tree\"\r\nimport { BaseModel } from \"./BaseModel\"\r\nimport { Customer } from \"./customers/Customer\"\r\nimport { Employee } from \"./employees/Employee\"\r\n\r\nexport type IBaseModel = Instance<typeof BaseModel>\r\n\r\nexport const baseModelCustomer = BaseModel(Customer)\r\nexport const baseModelEmployee = BaseModel(Employee)\r\n", "import { getSnapshot, SnapshotIn } from 'mobx-state-tree';\r\nimport { ICustomer, Customer } from './Customer';\r\nimport { baseModelCustomer } from '../IBaseModel';\r\n\r\nexport const getOrderCustomers = async () => {\r\n    const response = await fetch(`${AppBasePath}/api/customers/flat`);\r\n    const results = await response.json();\r\n\r\n    return results.map((i: SnapshotIn<ICustomer>) => Customer.create(i));\r\n}\r\n\r\nexport const getCustomers = async (pagination?: string) => {\r\n    const response = await fetch(`${AppBasePath}/api/customers${pagination === undefined ? \"\" : pagination}`);\r\n\r\n    //return Customer.create(await response.json());\r\n    return baseModelCustomer.create(await response.json());\r\n};\r\n\r\nexport const getCustomer = async (id: string) => {\r\n    const response = await fetch(`${AppBasePath}/api/customers/${id}`);\r\n\r\n    return Customer.create(await response.json());\r\n};\r\n\r\nexport const saveCustomer = async (customer: ICustomer) => {\r\n    const response = await fetch(`${AppBasePath}/api/customers`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(getSnapshot(customer))\r\n    });\r\n\r\n    return Customer.create(await response.json());\r\n};\r\n\r\nexport const deleteCustomer = async (customer: ICustomer) => {\r\n    const response = await fetch(`${AppBasePath}/api/customers`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(getSnapshot(customer))\r\n    });\r\n\r\n    return Customer.create(await response.json());\r\n}\r\n", "import { flow, Instance, types } from 'mobx-state-tree';\r\nimport { getOrders } from './ordersApi';\r\nimport { Order } from './Order';\r\nimport { InventoryItem } from '../inventory/InventoryItem';\r\nimport { Customer } from '../customers/Customer';\r\nimport { getInventoryItems } from '../inventory/inventoryApi';\r\nimport { getOrderCustomers } from '../customers/customersApi';\r\nimport { helperFunctions } from '../common/formTools';\r\n\r\nexport const OrderListStore = types\r\n    .model(\"OrderListStore\", {\r\n        orders: types.maybe(types.array(Order)),\r\n        inventoryItems: types.array(InventoryItem),\r\n        customers: types.array(Customer)\r\n    })\r\n    .actions((self) => ({\r\n        load: flow(function* () {\r\n            self.inventoryItems = yield getInventoryItems();\r\n            self.customers = yield getOrderCustomers();\r\n            self.orders = yield getOrders();\r\n        })\r\n    }))\r\n    .views(self => ({\r\n        get sortedOrders() {\r\n            return self.orders?.slice().sort( (a, b) => a.customerId!.firstName.localeCompare(b.customerId!.firstName, undefined, { caseFirst: 'upper' })) ?? [];\r\n        },\r\n\r\n        get ordersPerCustomer(): any {       \r\n            const newList = [{}]; \r\n            self.customers.map(({ id, fullName }) => {\r\n                const total = self.orders?.filter(o => o.customerId?.id === id).length\r\n                newList.unshift({label: fullName, value: total})    \r\n            })\r\n            \r\n            return newList;\r\n        },\r\n\r\n        get ordersPerStatuses(): any {\r\n            const newList = [{ label: \"\", value: 0}];\r\n            \r\n            self.orders?.map(({ status }) => {\r\n                const total = self.orders?.filter(o => o.status === status).length\r\n                newList.unshift({ label: helperFunctions.getStatus(status).toString(), value: total! })\r\n            });\r\n\r\n            //Removes default value and repeated objects from list\r\n            const statuses = newList.filter((value, index, self) =>\r\n                index === self.findIndex((o) => (o.label === value.label)));\r\n            \r\n            statuses.pop();\r\n\r\n            return statuses;\r\n        }\r\n    }));\r\n\r\n    export type IOrderListStore = Instance<typeof OrderListStore>", "import { css } from 'lit';\r\n\r\nexport const table = css`\r\n    table {\r\n        /*margin: 0 auto;*/\r\n        color: #333;\r\n        background: white;\r\n        border: 1px solid grey;\r\n        font-size: 12pt;\r\n        border-collapse: collapse;\r\n    }\r\n\r\n    table thead th,\r\n    table tfoot th {\r\n        color: #777;\r\n        background: rgba(0,0,0,.1);\r\n    }\r\n    table caption {\r\n        padding:.5em;\r\n    }\r\n    table th,\r\n    table td {\r\n        padding: .5em;\r\n        border: 1px solid lightgrey;\r\n    }\r\n\r\n    .long {\r\n        font-size: 9pt;\r\n        padding: .2em;\r\n    }\r\n`;\r\n\r\nexport const button = css`\r\n    button {\r\n        background-color: navy;\r\n        border: none;\r\n        color: white;\r\n        padding: 5px 10px;\r\n        text-align: center;\r\n        font-size: 16px;\r\n        margin: 4px 2px;\r\n        opacity: 0.6;\r\n        transition: 0.3s;\r\n        display: inline-block;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n    }\r\n\r\n    button:hover {\r\n        opacity: 1\r\n    }\r\n\r\n    .btnRemove {\r\n        background-color: white;\r\n        padding: 0;\r\n    }\r\n\r\n    .btnPagination {\r\n        background-color: transparent;\r\n    }\r\n\r\n    .btnTableHeader {\r\n        background-color: transparent;\r\n        color: #2F4F4F;\r\n        font-size: small;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nexport const input = css`\r\n    input[type=text], input[type=number], textarea, select {\r\n        width: 60%;\r\n        padding: 6px 10px;\r\n        margin: 4px 0;\r\n        display: inline-block;\r\n        border: 1px solid #ccc;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .customer {\r\n        width:40%;\r\n    }\r\n\r\n    .tableInput {\r\n        padding: 0;\r\n        width:80%;\r\n    }\r\n`;", "/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _alignStartEnd as $, _rlookupByKey as A, toPadding as B, each as C, getMaximumSize as D, _getParentNode as E, readUsedSize as F, throttled as G, HALF_PI as H, supportsEventListenerOptions as I, _isDomSupported as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, clipArea as V, renderText as W, unclipArea as X, toFont as Y, _toLeftRightCenter as Z, _arrayUnique as _, resolve as a, overrides as a0, merge as a1, _capitalize as a2, descriptors as a3, isFunction as a4, _attachContext as a5, _createResolver as a6, _descriptors as a7, mergeIf as a8, uid as a9, noop as aA, distanceBetweenPoints as aB, _setMinAndMaxByKey as aC, niceNum as aD, almostWhole as aE, almostEquals as aF, _decimalPlaces as aG, _longestText as aH, _filterBetween as aI, _lookup as aJ, getHoverColor as aK, clone$1 as aL, _merger as aM, _mergerIf as aN, _deprecated as aO, toFontString as aP, splineCurve as aQ, splineCurveMonotone as aR, getStyle as aS, fontString as aT, toLineHeight as aU, PITAU as aV, INFINITY as aW, RAD_PER_DEG as aX, QUARTER_PI as aY, TWO_THIRDS_PI as aZ, _angleDiff as a_, debounce as aa, retinaScale as ab, clearCanvas as ac, setsEqual as ad, _elementsEqual as ae, getAngleFromPoint as af, _isBetween as ag, _readValueToProps as ah, _updateBezierControlPoints as ai, _computeSegments as aj, _boundSegments as ak, _steppedInterpolation as al, _bezierInterpolation as am, _pointInLine as an, _steppedLineTo as ao, _bezierCurveTo as ap, drawPoint as aq, addRoundedRectPath as ar, toTRBL as as, toTRBLCorners as at, _boundSegment as au, _normalizeAngle as av, getRtlAdapter as aw, overrideTextDirection as ax, _textX as ay, restoreTextDirection as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n", "/*!\n * Chart.js v3.6.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _isBetween, ah as _readValueToProps, ai as _updateBezierControlPoints, aj as _computeSegments, ak as _boundSegments, al as _steppedInterpolation, am as _bezierInterpolation, an as _pointInLine, ao as _steppedLineTo, ap as _bezierCurveTo, aq as drawPoint, ar as addRoundedRectPath, as as toTRBL, at as toTRBLCorners, au as _boundSegment, av as _normalizeAngle, aw as getRtlAdapter, ax as overrideTextDirection, ay as _textX, az as restoreTextDirection, aA as noop, aB as distanceBetweenPoints, aC as _setMinAndMaxByKey, aD as niceNum, aE as almostWhole, aF as almostEquals, aG as _decimalPlaces, aH as _longestText, aI as _filterBetween, aJ as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.6.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {_active: lastActive = [], options} = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n", "import { Chart, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nexport const defaultChartDataStyle = {\r\n    backgroundColor: [\r\n        'rgba(26, 100, 156, 0.5)',\r\n        'rgba(26, 100, 156, 0.2)',\r\n    ],\r\n    borderColor: [\r\n        'rgba(26, 100, 156, 1)',\r\n        'rgba(26, 100, 156, 1)'\r\n    ],\r\n    borderWidth: 1.5\r\n};", "import { MobxLitElement } from '@adobe/lit-mobx';\r\nimport { css, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\nimport { IOrderListStore, OrderListStore } from './OrderListStore';\r\nimport { IOrder } from './Order';\r\nimport { table, button } from '../common/componentStyle';\r\nimport {helperFunctions } from '../common/formTools';\r\nimport { Chart, ChartConfiguration } from 'chart.js';\r\nimport { defaultChartDataStyle } from '../common/chartDefaults';\r\n\r\n\r\ninterface ChartInfo {\r\n    title: string;\r\n    data: {\r\n        label: string;\r\n        value: number;\r\n    }[]\r\n}\r\n\r\nconst barChart = ({title, data}: ChartInfo) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.height = 40;\r\n    canvas.width = 100;\r\n\r\n    const barData = {\r\n        labels: data.map(d => d.label),\r\n        datasets: [{\r\n            data: data.map(d => d.value),\r\n            ...defaultChartDataStyle\r\n        }]\r\n    };\r\n\r\n    const barConfig: ChartConfiguration = {\r\n        type: 'bar',\r\n        data: barData,\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            },\r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: title,\r\n                    font: {\r\n                        size: 24\r\n                    }\r\n                },\r\n                legend: {\r\n                    display: false\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    new Chart(canvas, barConfig);\r\n\r\n    return canvas;\r\n}\r\n\r\nconst doughnutChart = ({title, data}: ChartInfo) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.height = 40;\r\n    canvas.width = 100;\r\n\r\n    const barData = {\r\n        labels: data.map(d => d.label),\r\n        datasets: [{\r\n            data: data.map(d => d.value),\r\n            ...defaultChartDataStyle\r\n        }]\r\n    };\r\n\r\n    const barConfig: ChartConfiguration = {\r\n        type: 'doughnut',\r\n        data: barData,\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            },\r\n            plugins: {\r\n                title: {\r\n                    display: true,\r\n                    text: title,\r\n                    font: {\r\n                        size: 24\r\n                    }\r\n                },\r\n                legend: {\r\n                    display: true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    new Chart(canvas, barConfig);\r\n\r\n    return canvas;\r\n}\r\n\r\n\r\nconst ordersRow = ({id, customerId, totalPrice, status, orderDate}: IOrder) =>\r\n    html`\r\n    <tr>\r\n        <td>${customerId?.fullName}</td>\r\n        <td>${orderDate.substring(0, orderDate.indexOf(\"T\"))}</td>\r\n        <td>${helperFunctions.getStatus(status)}</td>\r\n        <td>${helperFunctions.priceToCurrency(totalPrice)}</td>\r\n        <td>\r\n            <a href=\"${AppBasePath}/orders/View/${id}\">View</a>\r\n        </td>\r\n        <td>\r\n            <a href=\"${AppBasePath}/orders/Edit/${id}\">Edit</a>\r\n        </td>\r\n    </tr>\r\n    `;\r\n\r\nconst ordersTable = (orders: IOrder[] = [], barChart: any, doughnutChart: any, orderListStore: IOrderListStore) =>\r\n    html`\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n            <th>Customer Name</th>\r\n            <th>Date</th>\r\n            <th>Status</th>\r\n            <th>Total</th>\r\n            <th></th>\r\n            <th></th>\r\n            </tr>\r\n        </thead>\r\n    \r\n        <tbody>\r\n            ${orders.map(ordersRow)}\r\n        </tbody>\r\n    </table> <br /><br />\r\n    ${barChart({\r\n            title: 'Orders by Customers',\r\n            data: [...orderListStore.ordersPerCustomer]\r\n    })} <br /><br />\r\n    ${doughnutChart({\r\n            title: 'Orders by Status',\r\n            data: [...orderListStore.ordersPerStatuses]\r\n    })}\r\n    \r\n    `;\r\n\r\n\r\n\r\n@customElement('order-list')\r\nexport class OrderList extends MobxLitElement {\r\n    static styles = css`\r\n        ${table}\r\n        ${button}\r\n    `;\r\n\r\n    store = OrderListStore.create();\r\n\r\n    firstUpdated = async () => {\r\n        await this.store.load();\r\n        \r\n    }\r\n\r\n    render = () =>\r\n        (this.store.orders)\r\n            ? ordersTable(this.store.sortedOrders, barChart, doughnutChart, this.store)\r\n            : 'Loading...';\r\n\r\n    createRenderRoot() {\r\n        return this;\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
